{"version":3,"sources":["utils/const.js","utils/socket.js","components/Home/HomeApiSocket.js","utils/hooks.js","components/Panel/Panel.js","components/TextField/TextField.js","components/Home/Footer/Footer.js","components/Home/Home.js","components/Room/Room.js","components/Room/RoomApiSocket.js","components/Game/PlayersList/PlayersList.js","components/Game/Canvas/Canvas.js","components/Game/Canvas/CanvasApiSocket.js","components/ChatRoom/ChatRoom.js","components/ChatRoom/ChatRoomApiSocket.js","components/Game/Overlay/Overlay.js","components/Game/Overlay/OverlayApiSocket.js","components/Game/Game.js","components/Game/GameApiSocket.js","components/App/App.js","serviceWorker.js","index.js"],"names":["serverBaseUrl","mediumDeviceMinWidth","socket","io","transports","sendJoinGame","gameCode","pid","playerName","history","toLowerCase","emit","on","data","off","onJoinRoomAnnouncement","alert","_callee","response","regenerator_default","a","wrap","_context","prev","next","localStorage","getItem","abrupt","Promise","resolve","axios","post","sent","console","log","setItem","t0","stop","push","concat","useWindowSize","_useState3","useState","width","window","innerWidth","height","innerHeight","_useState4","Object","slicedToArray","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","Panel","props","children","className","react_default","createElement","defaultProps","useStyles","makeStyles","textField","margin","& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","borderColor","&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root","color","& label","& label.Mui-focused","TextField","classes","label","variant","value","onChange","error","inputRef","onKeyDown","Footer","href","target","rel","esm","Provider","index_esm","Home","_useState","_useState2","setGameCode","_useLocalStorage","key","defaultValue","setValue","useEffect","useLocalStorage","_useLocalStorage2","setPlayerName","playerNameLabel","setPlayerNameLabel","_useState5","_useState6","hasPlayerNameError","setHasPlayerNameError","_useState7","_useState8","gameCodeLabel","setGameCodeLabel","_useState9","_useState10","hasGameCodeError","setHasGameCodeError","_useState11","_useState12","setPid","useHistory","_getPid","apply","this","arguments","getPid","then","pidValue","react_router_dom","to","components_Panel_Panel","components_TextField_TextField","e","type","onClick","sendNewGame","Home_Footer_Footer","formControl","& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline","& .Mui-disabled","cursor","& .MuiOutlinedInput-root.Mui-disabled","& label.Mui-disabled","& option","& .MuiSelect-icon","fill","& .MuiSelect-icon.Mui-disabled","Room","state","useLocation","players","setPlayers","ownerPid","setOwnerPid","rounds","setRounds","drawTime","setDrawTime","parseInt","slice","map","player","_id","md_index_esm","FormControl","disabled","InputLabel","htmlFor","Select","native","inputProps","id","length","sendPlayGame","PlayerList","artistPid","guessedCorrectPid","rankings","_ref","index","score","style","backgroundColor","Canvas","artist","selectedWord","currRound","timer","setColor","brushStyle","setBrushStyle","canvas","useRef","isMouseDragging","prevX","prevY","paths","mouseDown","isTouch","undefined","current","document","body","userSelect","getSelection","removeAllRanges","i","draw","mouseMove","mouseUp","isMouseMove","touchIndex","_getMousePos","windowX","windowY","rect","getBoundingClientRect","touches","clientX","clientY","currX","left","right","currY","top","bottom","getMousePos","line","newColor","drawLine","sendDrawLine","dot","x","y","drawDot","sendDrawDot","drawFill","sendDrawFill","addPath","ctx","getContext","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","points","fillStyle","fillRect","isInRange","isEmpty","imageData","r","g","b","baseIndex","Math","floor","_canvas$current$getBo","getImageData","_getInitialColor","getInitialColor","_getInitialColor2","dirs","visited","stack","_stack$pop","pop","_stack$pop2","_i","_dirs","_ref3","_ref2","newX","newY","hasOwnProperty","clearCanvas","clearPath","clearRect","_paths$current$i","j","undoCanvas","word","underlinedWord","getUnderlinedWord","ref","onTouchStart","preventDefault","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","onMouseLeave","tmpColor","gi_index_esm","sendUndoCanvas","io_index_esm","sendClearCanvas","& input","padding","transform","ChatRoom","setGuessedCorrectPid","message","setMessage","messages","setMessages","messageArea","messageTextField","addMessage","isCorrect","newMessage","toConsumableArray","scrollTop","scrollHeight","onSendMessage","sendMessage","focus","keyCode","messageTextFieldOnKey","Overlay","words","endTurnData","endGameData","onBackRoom","getWords","Fragment","sendSelectedWord","earnedScore","Game","setArtist","isDrawing","setIsDrawing","setWords","setTimer","Array","setRankings","_useState13","_useState14","setEndTurnData","_useState15","_useState16","_useState17","_useState18","setEndGameData","_useState19","_useState20","setSelectedWord","_useState21","_useState22","setCurrRound","sendEnterGame","filter","newPlayer","sortedScores","getScore","sort","reverse","indexOf","updatePlayersScore","time","Game_Canvas_Canvas","Game_Overlay_Overlay","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","getPlayerName","PlayersList_PlayersList","components_ChatRoom_ChatRoom","App","react_router","exact","path","components_Home_Home","components_Room_Room","components_Game_Game","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","root","getElementById","ReactDOM","render","components_App_App","URL","process","origin","fetch","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e865b93f.chunk.js","sourcesContent":["export const serverBaseUrl =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://192.168.0.3:5000\"\n    : \"https://skribbl-remake.herokuapp.com/\";\n\nexport const mediumDeviceMinWidth = 768;\n","import io from \"socket.io-client\";\nimport { serverBaseUrl } from \"./const\";\n\nexport const socket = io(serverBaseUrl, { transports: [\"websocket\"] });\n","import axios from \"axios\";\nimport { socket } from \"../../utils/socket\";\nimport { serverBaseUrl } from \"../../utils/const\";\n\nexport function sendJoinGame(gameCode, pid, playerName, history) {\n  gameCode = gameCode.toLowerCase();\n  socket.emit(\"send_join_room\", {\n    gameCode: gameCode,\n    pid: pid,\n    playerName: playerName,\n  });\n\n  socket.on(\"join_room_success\", (data) => {\n    socket.off(\"join_room_success\");\n    onJoinRoomAnnouncement(gameCode, pid, history);\n  });\n\n  socket.on(\"join_room_error\", (data) => {\n    socket.off(\"join_room_error\");\n    alert(\"join room error\");\n  });\n}\n\nexport function sendNewGame(pid, playerName, history) {\n  socket.emit(\"send_new_room\", {\n    pid: pid,\n    playerName: playerName,\n  });\n\n  socket.on(\"new_room_success\", (data) => {\n    socket.off(\"new_room_success\");\n    onJoinRoomAnnouncement(data.gameCode, pid, history);\n  });\n\n  socket.on(\"new_room_error\", (data) => {\n    alert(\"new room error\");\n    console.log(data);\n    socket.off(\"new_room_error\");\n  });\n}\n\nexport async function getPid() {\n  let pid = localStorage.getItem(\"pid\");\n  if (pid != null) {\n    return Promise.resolve(pid);\n  }\n  try {\n    let response = await axios.post(serverBaseUrl + \"/api/player/new\");\n    console.log(response.data);\n    pid = response.data[\"pid\"];\n    localStorage.setItem(\"pid\", pid);\n    return pid;\n  } catch (e) {\n    alert(\"Failed to get pid\");\n    console.log(e.response);\n    return \"\";\n  }\n}\n\nfunction onJoinRoomAnnouncement(gameCode, pid, history) {\n  socket.on(\"join_room_announcement\", (data) => {\n    socket.off(\"join_room_announcement\");\n    data.gameCode = gameCode;\n    data.pid = pid;\n    history.push(`/room?gameCode=${gameCode}`, data);\n  });\n}\n","import { useState, useEffect, useLayoutEffect } from \"react\";\n\nexport function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = useState(localStorage.getItem(key) || defaultValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value]);\n\n  return [value, setValue];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", updateSize);\n    return () => {\n      window.removeEventListener(\"resize\", updateSize);\n    };\n  }, []);\n\n  return size;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Panel.css\";\n\nfunction Panel(props) {\n  const { children, className } = props;\n  return <div className={`Panel ${className}`}>{children}</div>;\n}\n\nPanel.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  className: PropTypes.string\n};\n\nPanel.defaultProps = {\n  children: [],\n  className: \"\"\n};\n\nexport default Panel;\n","import React from \"react\";\nimport MaterialTextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes, { object } from \"prop-types\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    }\n  }\n});\n\nfunction TextField(props) {\n  const classes = useStyles();\n  const {\n    label,\n    variant,\n    value,\n    onChange,\n    error,\n    inputRef,\n    onKeyDown,\n    className\n  } = props;\n\n  return (\n    <MaterialTextField\n      label={label}\n      variant={variant}\n      value={value}\n      onChange={onChange}\n      error={error}\n      inputRef={inputRef}\n      onKeyDown={onKeyDown}\n      className={`${classes.textField} ${className}`}\n    />\n  );\n}\n\nTextField.propTypes = {\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.bool,\n  inputRef: PropTypes.objectOf(object),\n  onKeyDown: PropTypes.func,\n  className: PropTypes.string\n};\n\nTextField.defaultProps = {\n  label: null,\n  variant: \"standard\",\n  value: null,\n  onChange: null,\n  error: null,\n  inputRef: null,\n  onKeyDown: null,\n  className: \"\"\n};\n\nexport default TextField;\n","import React from \"react\";\nimport { IconContext } from \"react-icons\";\nimport { FaGithub } from \"react-icons/fa\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n      <p className=\"FooterText\">\n        Created by{\" \"}\n        <a\n          className=\"FooterLink\"\n          href=\"https://huberthung.me\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Hubert Hung\n        </a>\n      </p>\n      <a\n        className=\"FooterLink\"\n        href=\"https://github.com/hubert322/pictionary\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconContext.Provider value={{ size: \"2.2rem\" }}>\n          <FaGithub />\n        </IconContext.Provider>\n      </a>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { sendJoinGame, sendNewGame, getPid } from \"./HomeApiSocket\";\nimport { useLocalStorage } from \"../../utils/hooks\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\nimport Footer from \"./Footer/Footer\";\nimport \"../App/App.css\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const [gameCode, setGameCode] = useState(\"\");\n  const [playerName, setPlayerName] = useLocalStorage(\"playerName\", \"\");\n  const [playerNameLabel, setPlayerNameLabel] = useState(\"Name\");\n  const [hasPlayerNameError, setHasPlayerNameError] = useState(false);\n  const [gameCodeLabel, setGameCodeLabel] = useState(\"Game Code\");\n  const [hasGameCodeError, setHasGameCodeError] = useState(false);\n  const [pid, setPid] = useState(null);\n  let history = useHistory();\n\n  function onJoinGame() {\n    if (gameCode === \"\" || playerName === \"\") {\n      if (gameCode === \"\") {\n        setHasGameCodeError(true);\n        setGameCodeLabel(\"Game Code required\");\n      }\n      if (playerName === \"\") {\n        setHasPlayerNameError(true);\n        setPlayerNameLabel(\"Name required\");\n      }\n    } else if (typeof pid !== \"string\") {\n      console.log(\"Waiting for promise to resolve...\");\n    } else {\n      sendJoinGame(gameCode, pid, playerName, history);\n    }\n  }\n\n  function onNewGame() {\n    if (playerName === \"\") {\n      setHasPlayerNameError(true);\n      setPlayerNameLabel(\"Name required\");\n    } else if (typeof pid !== \"string\") {\n      console.log(\"Waiting for promise to resolve...\");\n    } else {\n      sendNewGame(pid, playerName, history);\n    }\n  }\n\n  useEffect(() => {\n    getPid().then(pidValue => {\n      setPid(pidValue);\n    });\n  }, []);\n\n  return (\n    <div className=\"Home\">\n      <Link to=\"/\" className=\"HomeTitle\">\n        Pictionary Live\n      </Link>\n      {pid !== null ? (\n        <Panel className=\"HomeMainContainer\">\n          <TextField\n            label={playerNameLabel}\n            variant=\"outlined\"\n            value={playerName}\n            onChange={e => setPlayerName(e.target.value)}\n            error={hasPlayerNameError}\n          />\n          <div className=\"HomeJoinGameContainer\">\n            <TextField\n              label={gameCodeLabel}\n              variant=\"outlined\"\n              className=\"HomeJoinGameTextField\"\n              value={gameCode}\n              onChange={e => setGameCode(e.target.value)}\n              error={hasGameCodeError}\n            />\n            <button\n              type=\"button\"\n              className=\"Button HomeJoinGameButton\"\n              onClick={onJoinGame}\n            >\n              Join Game\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            className=\"Button HomeNewGameButton\"\n            onClick={onNewGame}\n          >\n            New Game\n          </button>\n        </Panel>\n      ) : (\n        <p>Loading...</p>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Select, InputLabel, FormControl } from \"@material-ui/core\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown } from \"react-icons/fa\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport { socket } from \"../../utils/socket\";\nimport { mediumDeviceMinWidth } from \"../../utils/const\";\nimport { sendPlayGame } from \"./RoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport \"../App/App.css\";\nimport \"./Room.css\";\n\nconst useStyles = makeStyles({\n  formControl: {\n    margin: \"0px 7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& .Mui-disabled\": {\n      cursor: \"not-allowed\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    },\n    \"& label.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    },\n    \"& option\": {\n      color: \"black\"\n    },\n    \"& .MuiSelect-icon\": {\n      fill: \"white\"\n    },\n    \"& .MuiSelect-icon.Mui-disabled\": {\n      fill: \"rgba(255, 255, 255, 0.26)\"\n    }\n  }\n});\n\nfunction Room() {\n  const classes = useStyles();\n  const state = useLocation().state;\n  const { gameCode, pid } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [ownerPid, setOwnerPid] = useState(state.ownerPid);\n  // const { gameCode } = state;\n  // const pid = 0;\n  // const [ownerPid, setOwnerPid] = useState(1);\n  // const [players, setPlayers] = useState(() => {\n  //   let tmp = [];\n  //   for (let i = 0; i < 8; ++i) {\n  //     tmp.push({\n  //       _id: i,\n  //       playerName: `Hurgurto${i}`\n  //     });\n  //   }\n\n  //   return tmp;\n  // });\n  const [rounds, setRounds] = useState(3);\n  const [drawTime, setDrawTime] = useState(\"60s\");\n  const { width } = useWindowSize();\n  const history = useHistory();\n\n  useEffect(() => {\n    socket.on(\"join_room_announcement\", data => {\n      setPlayers(data.players);\n      setOwnerPid(ownerPid);\n    });\n\n    return () => {\n      socket.off(\"join_room_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"play_game_announcement\", () => {\n      history.push(`/game?gameCode=${gameCode}`, {\n        gameCode: gameCode,\n        pid: pid,\n        players: players,\n        ownerPid: ownerPid,\n        drawTime: parseInt(drawTime.slice(0, -1))\n      });\n    });\n\n    return () => {\n      socket.off(\"play_game_announcement\");\n    };\n  }, [gameCode, pid, players, history]);\n\n  return (\n    <div className=\"Room\">\n      <Link to=\"/\" className=\"RoomTitleLink\">\n        Pictionary Live\n      </Link>\n      <h2 className=\"RoomGameCode\">Game Code: {gameCode}</h2>\n      <div className=\"RoomMainContainer\">\n        <Panel className=\"RoomPlayersContainer\">\n          <h3 className=\"RoomContainerTitle\">Players</h3>\n          <div className=\"RoomPlayersList\">\n            {players.map(player => (\n              <div className=\"RoomPlayer\" key={player._id}>\n                <IconContext.Provider\n                  value={{\n                    size: width >= mediumDeviceMinWidth ? \"3rem\" : \"2rem\"\n                  }}\n                >\n                  {player._id === ownerPid ? <FaCrown /> : <MdPerson />}\n                </IconContext.Provider>\n                <span className=\"RoomPlayerName\">{player.playerName}</span>\n                <span className=\"RoomPlayerTag\">\n                  {player._id === pid ? \"You\" : \" \"}\n                </span>\n              </div>\n            ))}\n          </div>\n        </Panel>\n        <Panel className=\"RoomGameControlsContainer\">\n          <h3 className=\"RoomContainerTitle\">Settings</h3>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Rounds</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={rounds}\n              onChange={e => setRounds(e.target.value)}\n              inputProps={{ id: \"roundsSelector\" }}\n            >\n              <option>3</option>\n              <option>5</option>\n              <option>10</option>\n            </Select>\n          </FormControl>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Draw Time</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={drawTime}\n              onChange={e => setDrawTime(e.target.value)}\n              inputProps={{ id: \"drawTime\" }}\n            >\n              <option>30s</option>\n              <option>60s</option>\n              <option>90s</option>\n            </Select>\n          </FormControl>\n          <button\n            type=\"button\"\n            className=\"Button RoomPlayButton\"\n            onClick={() => {\n              if (players.length > 1) {\n                sendPlayGame(gameCode, rounds, drawTime);\n              }\n            }}\n            disabled={pid !== ownerPid || players.length <= 1}\n          >\n            Play\n          </button>\n        </Panel>\n      </div>\n    </div>\n  );\n}\n\nexport default Room;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendPlayGame(gameCode, rounds, drawTime) {\n  drawTime = parseInt(drawTime.slice(0, -1));\n  socket.emit(\"send_play_game\", {\n    gameCode: gameCode,\n    rounds: rounds,\n    drawTime: drawTime\n  });\n}\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown, FaPaintBrush } from \"react-icons/fa\";\nimport { useWindowSize } from \"../../../utils/hooks\";\nimport { mediumDeviceMinWidth } from \"../../../utils/const\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./PlayersList.css\";\n\nfunction PlayerList(props) {\n  const {\n    players,\n    pid,\n    ownerPid,\n    artistPid,\n    guessedCorrectPid,\n    rankings\n  } = props;\n  const { width } = useWindowSize();\n\n  // let debugPlayers = [];\n  // for (let i = 0; i < 8; ++i) {\n  //   debugPlayers.push({\n  //     _id: i,\n  //     playerName: `Hurgurto${i}`,\n  //     score: 3000\n  //   });\n  // }\n\n  return (\n    <Panel className=\"PlayersList\">\n      {players.map(({ playerName, _id, score }, index) => (\n        <div\n          className=\"PlayersListPlayer\"\n          key={_id}\n          style={{\n            backgroundColor:\n              _id === guessedCorrectPid ? \"rgb(35, 231, 17)\" : \"transparent\"\n          }}\n        >\n          <div className=\"PlayersListPlayerRankingIcon\">\n            <span className=\"PlayersListRanking\">#{rankings[index]}</span>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.8rem\" : \"1.5rem\"\n              }}\n            >\n              {_id === ownerPid ? <FaCrown /> : <MdPerson />}\n            </IconContext.Provider>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.5rem\" : \"1.2rem\"\n              }}\n            >\n              {_id === artistPid ? <FaPaintBrush /> : null}\n            </IconContext.Provider>\n          </div>\n          <span className=\"PlayersListPlayerName\">\n            {playerName}\n            {pid === _id ? \" (You)\" : null}: {score ? score : 0}\n          </span>\n        </div>\n      ))}\n    </Panel>\n  );\n}\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pid: PropTypes.string.isRequired,\n  ownerPid: PropTypes.string.isRequired,\n  artistPid: PropTypes.string,\n  guessedCorrectPid: PropTypes.string,\n  rankings: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nPlayerList.defaultProps = {\n  artistPid: null,\n  guessedCorrectPid: null\n};\n\nexport default PlayerList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { IoMdUndo } from \"react-icons/io\";\nimport { FaTrash, FaPaintBrush, FaCheck } from \"react-icons/fa\";\nimport { GiPaintBucket } from \"react-icons/gi\";\nimport { socket } from \"../../../utils/socket\";\nimport {\n  sendDrawLine,\n  sendDrawDot,\n  sendDrawFill,\n  sendUndoCanvas,\n  sendClearCanvas\n} from \"./CanvasApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"../../App/App.css\";\nimport \"./Canvas.css\";\n\nfunction Canvas(props) {\n  const { gameCode, pid, artist, selectedWord, currRound, timer } = props;\n  const [color, setColor] = useState(\"#000000\");\n  const [brushStyle, setBrushStyle] = useState(\"brush\");\n  const canvas = useRef(null);\n  let isMouseDragging = useRef(false);\n  let prevX = useRef(null);\n  let prevY = useRef(null);\n  const paths = useRef([]);\n  const colors = [\n    \"#000000\",\n    \"#FFFFFF\",\n    \"#808080\",\n    \"#C0C0C0\",\n    \"#FF0000\",\n    \"#FF7F00\",\n    \"#FFFF00\",\n    \"#00FF00\",\n    \"#00FFFF\",\n    \"#0000FF\",\n    \"#7F00FF\",\n    \"#FF00FF\"\n  ];\n  const controlsIconSize = \"5vmin\";\n\n  function touchStart(e) {\n    e.preventDefault();\n    mouseDown(e, true);\n  }\n\n  function mouseDown(e, isTouch = false) {\n    if (artist === null || pid !== artist._id) {\n      return;\n    }\n    isMouseDragging.current = true;\n    document.body.style.userSelect = \"none\";\n    window.getSelection().removeAllRanges();\n    if (isTouch) {\n      for (let i = 0; i < 1; ++i) {\n        draw(e, false, i);\n      }\n    } else {\n      draw(e, false, -1);\n    }\n  }\n\n  function touchMove(e) {\n    e.preventDefault();\n    mouseMove(e, true);\n  }\n\n  function mouseMove(e, isTouch = false) {\n    if (artist === null || pid !== artist._id || brushStyle === \"bucket\") {\n      return;\n    }\n    if (isMouseDragging.current) {\n      if (isTouch) {\n        for (let i = 0; i < 1; ++i) {\n          draw(e, true, i);\n        }\n      } else {\n        draw(e, true, -1);\n      }\n    }\n  }\n\n  function touchEnd(e) {\n    e.preventDefault();\n    mouseUp();\n  }\n\n  function mouseUp() {\n    if (artist === null || pid !== artist._id) {\n      return;\n    }\n    document.body.style.userSelect = \"auto\";\n    isMouseDragging.current = false;\n  }\n\n  function mouseLeave() {\n    prevX.current = null;\n    prevY.current = null;\n  }\n\n  function draw(e, isMouseMove, touchIndex) {\n    const { currX, currY } = getMousePos(e, touchIndex);\n    if (brushStyle === \"brush\") {\n      if (isMouseMove && prevX.current !== null && prevY.current !== null) {\n        const line = {\n          prevX: prevX.current,\n          prevY: prevY.current,\n          currX: currX,\n          currY: currY,\n          newColor: color\n        };\n        drawLine(line, true);\n        sendDrawLine(gameCode, line);\n      } else {\n        const dot = {\n          x: currX,\n          y: currY,\n          newColor: color\n        };\n        drawDot(dot, true);\n        sendDrawDot(gameCode, dot);\n      }\n      prevX.current = currX;\n      prevY.current = currY;\n    } else {\n      const fill = {\n        x: currX,\n        y: currY,\n        newColor: color\n      };\n      drawFill(fill, true);\n      sendDrawFill(gameCode, fill);\n    }\n  }\n\n  function getMousePos(e, touchIndex) {\n    const rect = canvas.current.getBoundingClientRect();\n    let windowX, windowY;\n    if (touchIndex !== -1) {\n      windowX = e.touches[touchIndex].clientX;\n      windowY = e.touches[touchIndex].clientY;\n    } else {\n      windowX = e.clientX;\n      windowY = e.clientY;\n    }\n    return {\n      currX:\n        ((windowX - rect.left) / (rect.right - rect.left)) *\n        canvas.current.width,\n      currY:\n        ((windowY - rect.top) / (rect.bottom - rect.top)) *\n        canvas.current.height\n    };\n  }\n\n  function drawLine(line, addPath) {\n    const { prevX, prevY, currX, currY, newColor } = line;\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.strokeStyle = newColor;\n    ctx.lineWidth = 2;\n    ctx.moveTo(prevX, prevY);\n    ctx.lineTo(currX, currY);\n    ctx.stroke();\n    ctx.closePath();\n    if (addPath) {\n      paths.current[paths.current.length - 1].points.push({\n        x: currX,\n        y: currY\n      });\n    }\n  }\n\n  function drawDot(dot, addPath) {\n    const { x, y, newColor } = dot;\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.fillStyle = newColor;\n    ctx.fillRect(x, y, 2, 2);\n    ctx.closePath();\n    if (addPath) {\n      paths.current.push({\n        points: [],\n        newColor: newColor,\n        brushStyle: \"brush\"\n      });\n      paths.current[paths.current.length - 1].points.push({ x: x, y: y });\n    }\n  }\n\n  function drawFill(fill, addPath) {\n    function getInitialColor(x, y, imageData) {\n      const baseIndex = (y * width + x) * 4;\n      const redOffset = 0;\n      const greenOffset = 1;\n      const blueOffset = 2;\n      const alphaOffset = 3;\n      return [\n        imageData.data[baseIndex + redOffset],\n        imageData.data[baseIndex + greenOffset],\n        imageData.data[baseIndex + blueOffset],\n        imageData.data[baseIndex + alphaOffset]\n      ];\n    }\n\n    function isInRange(x, y, width, height) {\n      return 0 <= x && x < width && 0 <= y && y < height;\n    }\n\n    function isEmpty(x, y, width, imageData, r, g, b, a) {\n      // 4 is used since each cell has rgba\n      const baseIndex = (y * width + x) * 4;\n      const redOffset = 0;\n      const greenOffset = 1;\n      const blueOffset = 2;\n      const alphaOffset = 3;\n      return (\n        imageData.data[baseIndex + redOffset] === r &&\n        imageData.data[baseIndex + greenOffset] === g &&\n        imageData.data[baseIndex + blueOffset] === b &&\n        imageData.data[baseIndex + alphaOffset] === a\n      );\n    }\n\n    let { x, y, newColor } = fill;\n    x = Math.floor(x);\n    y = Math.floor(y);\n    const ctx = canvas.current.getContext(\"2d\");\n    let { width, height } = canvas.current.getBoundingClientRect();\n    width = Math.floor(width);\n    height = Math.floor(height);\n\n    if (!isInRange(x, y, width, height)) {\n      return;\n    }\n\n    const imageData = ctx.getImageData(0, 0, width, height);\n    const [r, g, b, a] = getInitialColor(x, y, imageData);\n\n    const dirs = [\n      [0, -1],\n      [1, -1],\n      [1, 0],\n      [1, 1],\n      [0, 1],\n      [-1, 1],\n      [-1, 0],\n      [-1, -1]\n    ];\n    const visited = {};\n    visited[`${x}+${y}`] = 1;\n    let stack = [[x, y]];\n    ctx.beginPath();\n    ctx.fillStyle = newColor;\n    ctx.fillRect(x, y, 1, 1);\n\n    while (stack.length) {\n      const [x, y] = stack.pop();\n      for (const [dx, dy] of dirs) {\n        const newX = x + dx;\n        const newY = y + dy;\n        if (\n          isInRange(newX, newY, width, height) &&\n          isEmpty(newX, newY, width, imageData, r, g, b, a) &&\n          !visited.hasOwnProperty(`${newX}+${newY}`)\n        ) {\n          ctx.fillRect(newX, newY, 1, 1);\n          stack.push([newX, newY]);\n          visited[`${newX}+${newY}`] = 1;\n        }\n      }\n    }\n    ctx.closePath();\n\n    if (addPath) {\n      paths.current.push({\n        points: [],\n        newColor: newColor,\n        brushStyle: \"bucket\"\n      });\n      paths.current[paths.current.length - 1].points.push({ x: x, y: y });\n    }\n  }\n\n  function undoCanvas() {\n    if (paths.current.length) {\n      clearCanvas(false);\n      paths.current.pop();\n      for (let i = 0; i < paths.current.length; ++i) {\n        const { points, newColor, brushStyle } = paths.current[i];\n        if (brushStyle === \"brush\") {\n          const dot = {\n            x: points[0].x,\n            y: points[0].y,\n            newColor: newColor\n          };\n          drawDot(dot, false);\n          for (let j = 1; j < points.length; ++j) {\n            const line = {\n              prevX: points[j - 1].x,\n              prevY: points[j - 1].y,\n              currX: points[j].x,\n              currY: points[j].y\n            };\n            drawLine(line, false);\n          }\n        } else {\n          const fill = {\n            x: points[0].x,\n            y: points[0].y,\n            newColor: newColor\n          };\n          drawFill(fill, false);\n        }\n      }\n    }\n  }\n\n  function clearCanvas(clearPath) {\n    if (paths.current.length) {\n      const ctx = canvas.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n      if (clearPath) {\n        paths.current = [];\n      }\n    }\n  }\n\n  function getUnderlinedWord(word) {\n    let underlinedWord = \"\";\n    for (let i = 0; i < word.length; ++i) {\n      if (word[i] === \" \") {\n        underlinedWord += \"  \";\n      } else {\n        underlinedWord += \"__\";\n      }\n      if (i + 1 !== word.length) {\n        underlinedWord += \"  \";\n      }\n    }\n    return underlinedWord;\n  }\n\n  useEffect(() => {\n    socket.on(\"draw_line_announcement\", data => {\n      if (canvas.current !== null) {\n        drawLine(data.line, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_line_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_dot_announcement\", data => {\n      if (canvas.current !== null) {\n        drawDot(data.dot, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_dot_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_fill_announcement\", data => {\n      if (canvas.current !== null) {\n        drawFill(data.fill, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_fill_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"undo_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        undoCanvas();\n      }\n    });\n\n    return () => {\n      socket.off(\"undo_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"clear_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        clearCanvas(true);\n      }\n    });\n\n    return () => {\n      socket.off(\"clear_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (selectedWord === null) {\n      clearCanvas(true);\n    }\n  }, [artist]);\n\n  return (\n    <Panel className=\"CanvasContainer\">\n      <div className=\"CanvasHeader\">\n        <span className=\"CanvasCurrRound\">Round: {currRound}</span>\n        <span className=\"CanvasUnderlinedWord\">\n          Word:{\" \"}\n          {artist !== null && pid !== artist._id && selectedWord !== null\n            ? getUnderlinedWord(selectedWord)\n            : selectedWord}\n        </span>\n        <span className=\"CanvasTimer\">Timer: {timer}s</span>\n      </div>\n      <canvas\n        className=\"Canvas\"\n        ref={canvas}\n        onTouchStart={touchStart}\n        onMouseDown={mouseDown}\n        onTouchMove={touchMove}\n        onMouseMove={mouseMove}\n        onTouchEnd={touchEnd}\n        onMouseUp={mouseUp}\n        onMouseLeave={mouseLeave}\n      />\n      <div className=\"CanvasDummy\" />\n      <div className=\"CanvasControlsContainer\">\n        <div className=\"CanvasColorsContainer\">\n          {colors.map(tmpColor => (\n            <button\n              key={tmpColor}\n              type=\"button\"\n              style={{\n                backgroundColor: tmpColor,\n                color:\n                  artist !== null && pid === artist._id && color === tmpColor\n                    ? tmpColor !== \"#FFFFFF\"\n                      ? \"white\"\n                      : \"black\"\n                    : tmpColor\n              }}\n              className=\"Button CanvasControl CanvasColorControl\"\n              disabled={artist !== null && pid !== artist._id}\n              onClick={() => {\n                setColor(tmpColor);\n              }}\n            >\n              <IconContext.Provider\n                value={{\n                  size: \"2.5vmin\"\n                }}\n              >\n                <FaCheck />\n              </IconContext.Provider>\n            </button>\n          ))}\n        </div>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          style={{\n            backgroundColor:\n              artist !== null && pid === artist._id && brushStyle === \"brush\"\n                ? \"#f64f59\"\n                : \"#ffffff\"\n          }}\n          onClick={() => setBrushStyle(\"brush\")}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <FaPaintBrush />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          style={{\n            backgroundColor:\n              artist !== null && pid === artist._id && brushStyle === \"bucket\"\n                ? \"#f64f59\"\n                : \"#ffffff\"\n          }}\n          onClick={() => setBrushStyle(\"bucket\")}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <GiPaintBucket />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendUndoCanvas(gameCode);\n            }\n          }}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <IoMdUndo />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendClearCanvas(gameCode);\n            }\n          }}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <FaTrash />\n          </IconContext.Provider>\n        </button>\n        {artist === null || pid !== artist._id ? (\n          <div className=\"CanvasControlsOverlay\" />\n        ) : null}\n      </div>\n    </Panel>\n  );\n}\n\nCanvas.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  selectedWord: PropTypes.string,\n  currRound: PropTypes.number.isRequired,\n  timer: PropTypes.number.isRequired\n};\n\nCanvas.defaultProps = {\n  artist: null,\n  selectedWord: \"\"\n};\n\nexport default Canvas;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendDrawLine(gameCode, line) {\n  socket.emit(\"send_draw_line\", {\n    gameCode: gameCode,\n    line: line\n  });\n}\n\nexport function sendDrawDot(gameCode, dot) {\n  socket.emit(\"send_draw_dot\", {\n    gameCode: gameCode,\n    dot: dot\n  });\n}\n\nexport function sendDrawFill(gameCode, fill) {\n  socket.emit(\"send_draw_fill\", {\n    gameCode: gameCode,\n    fill: fill\n  });\n}\n\nexport function sendUndoCanvas(gameCode) {\n  socket.emit(\"send_undo_canvas\", {\n    gameCode: gameCode\n  });\n}\n\nexport function sendClearCanvas(gameCode) {\n  socket.emit(\"send_clear_canvas\", {\n    gameCode: gameCode\n  });\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { socket } from \"../../utils/socket\";\nimport { sendMessage } from \"./ChatRoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\nimport \"./ChatRoom.css\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"5px 0px\",\n    \"& .MuiOutlinedInput-root\": {\n      color: \"black\"\n    },\n    \"& input\": {\n      padding: \"7px\"\n    },\n    \"& label\": {\n      color: \"black\",\n      transform: \"translate(14px, 7px) scale(1)\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"black\"\n    }\n  }\n});\n\nfunction ChatRoom(props) {\n  const classes = useStyles();\n  const { gameCode, pid, setGuessedCorrectPid } = props;\n  const [message, setMessage] = useState(\"\");\n  // const [isFirstTime, setIsFirstTime] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const messageArea = useRef(null);\n  const messageTextField = useRef(null);\n\n  function addMessage(message, isCorrect) {\n    let newMessage = {\n      message: message,\n      isCorrect: isCorrect\n    };\n    setMessages(messages => [...messages, newMessage]);\n    scroll();\n  }\n\n  function scroll() {\n    messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // if (isFirstTime) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    //   setIsFirstTime(false);\n    // } else if (\n    //   messageArea.current.scrollTop + messageArea.current.clientHeight ===\n    //   messageArea.current.scrollHeight\n    // ) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // }\n  }\n\n  useEffect(() => {\n    socket.on(\"send_message_announcement\", data => {\n      addMessage(`${data.player.playerName}: ${data.message}`, false);\n    });\n\n    return () => {\n      socket.off(\"send_message_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"correct_word_announcement\", data => {\n      addMessage(`${data.player.playerName} has guessed the word!`, true);\n      setGuessedCorrectPid(data.player._id);\n    });\n\n    return () => {\n      socket.off(\"correct_word_announcement\");\n    };\n  }, [setGuessedCorrectPid]);\n\n  function onSendMessage() {\n    sendMessage(gameCode, pid, message);\n    setMessage(\"\");\n    messageTextField.current.focus();\n  }\n\n  function messageTextFieldOnKey(e) {\n    const ENTER_KEY_CODE = 13;\n    if (e.keyCode === ENTER_KEY_CODE && message !== \"\") {\n      onSendMessage();\n    }\n  }\n\n  return (\n    <Panel className=\"ChatRoom\">\n      <div className=\"ChatRoomMessageArea\" ref={messageArea}>\n        {messages.map((message, index) => (\n          <p\n            // eslint-disable-next-line react/no-array-index-key\n            key={`msg${index}`}\n            className={`ChatRoomMessage ${\n              message.isCorrect ? \"ChatRoomCorrectMessage\" : \"\"\n            }`}\n          >\n            {message.message}\n          </p>\n        ))}\n      </div>\n      <TextField\n        className={`${classes.textField} ChatRoomTextField`}\n        label=\"message\"\n        variant=\"outlined\"\n        value={message}\n        onChange={e => setMessage(e.target.value)}\n        inputRef={messageTextField}\n        onKeyDown={e => messageTextFieldOnKey(e)}\n      />\n    </Panel>\n  );\n}\n\nChatRoom.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  setGuessedCorrectPid: PropTypes.func.isRequired\n};\n\nexport default ChatRoom;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendMessage(gameCode, pid, message) {\n  socket.emit(\"send_message\", {\n    gameCode: gameCode,\n    pid: pid,\n    message: message\n  });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sendSelectedWord } from \"./OverlayApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"../../App/App.css\";\nimport \"./Overlay.css\";\n\nfunction Overlay(props) {\n  const {\n    gameCode,\n    pid,\n    artist,\n    words,\n    endTurnData,\n    endGameData,\n    onBackRoom\n  } = props;\n\n  function getResults() {\n    // let results = {\n    //   players: []\n    // };\n    // for (let i = 0; i < 8; ++i) {\n    //   results.players.push({\n    //     _id: i,\n    //     playerName: `Hurgurto${i}`,\n    //     score: 3000\n    //   });\n    // }\n    return (\n      <div className=\"OverlayEndTurnResultsContainer\">\n        {endGameData.players.map((player, index) => (\n          <p key={player._id} className=\"OverlayEndTurnResultsText\">\n            #{endGameData.rankings[index]} {player.playerName}: {player.score}\n          </p>\n        ))}\n        <button\n          type=\"button\"\n          className=\"Button OverlayEndTurnResultsButton\"\n          onClick={onBackRoom}\n        >\n          Back to Room\n        </button>\n      </div>\n    );\n  }\n\n  function getEndTurn() {\n    // let selectedWord = \"Hello\";\n    // let endTurnData = {\n    //   players: [],\n    //   isEndGame: false\n    // };\n    // for (let i = 0; i < 8; ++i) {\n    //   endTurnData.players.push({\n    //     _id: i,\n    //     playerName: `Hurgurto${i}`,\n    //     score: 3000,\n    //     earnedScore: 5000\n    //   });\n    // }\n    return (\n      <div className=\"OverlayEndTurnResultsContainer\">\n        <p className=\"OverlayEndTurnResultsText\">\n          Selected Word: {endTurnData.selectedWord}\n        </p>\n        {endTurnData.players.map(player => (\n          <p key={player._id} className=\"OverlayEndTurnResultsText\">\n            {player.playerName}: {player.score} + {player.earnedScore}\n          </p>\n        ))}\n        {/* {endTurnData.isEndGame ? (\n          <button\n            type=\"button\"\n            className=\"Button OverlayEndTurnResultsButton\"\n            onClick={onShowResults}\n          >\n            Results\n          </button>\n        ) : null} */}\n      </div>\n    );\n  }\n\n  function getLoading() {\n    return <p>Loading...</p>;\n  }\n\n  function getArtistChoosing() {\n    return <p>{artist.playerName} is choosing their word...</p>;\n  }\n\n  function getWords() {\n    // let words = [\"computer\", \"hello\", \"world\"];\n    return (\n      <>\n        {words.map(word => (\n          <button\n            type=\"button\"\n            key={word}\n            className=\"Button OverlayWordButton\"\n            onClick={() => sendSelectedWord(gameCode, word)}\n          >\n            {word}\n          </button>\n        ))}\n      </>\n    );\n  }\n\n  function selectOverlayContent() {\n    if (endGameData !== null) {\n      return getResults();\n    }\n    if (endTurnData !== null) {\n      return getEndTurn();\n    }\n    if (artist === null) {\n      return getLoading();\n    }\n    if (pid !== artist._id) {\n      return getArtistChoosing();\n    }\n    return getWords();\n  }\n\n  return <Panel className=\"Overlay\">{selectOverlayContent()}</Panel>;\n  // return <Panel className=\"Overlay\">{getResults()}</Panel>;\n}\n\nOverlay.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  words: PropTypes.arrayOf(PropTypes.string).isRequired,\n  endTurnData: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n  ),\n  endGameData: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.arrayl])),\n  onBackRoom: PropTypes.func.isRequired\n};\n\nOverlay.defaultProps = {\n  artist: null,\n  endTurnData: null,\n  endGameData: null\n};\n\nexport default Overlay;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendSelectedWord(gameCode, word) {\n  socket.emit(\"send_selected_word\", {\n    gameCode: gameCode,\n    word: word\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { socket } from \"../../utils/socket\";\nimport { sendEnterGame } from \"./GameApiSocket\";\nimport { sendJoinGame } from \"../Home/HomeApiSocket\";\nimport PlayersList from \"./PlayersList/PlayersList\";\nimport Canvas from \"./Canvas/Canvas\";\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\nimport Overlay from \"./Overlay/Overlay\";\nimport \"./Game.css\";\n\nfunction Game() {\n  const state = useLocation().state;\n  const { gameCode, pid, ownerPid, drawTime } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [artist, setArtist] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [words, setWords] = useState([]);\n  const [timer, setTimer] = useState(drawTime);\n  const [rankings, setRankings] = useState(new Array(players.length).fill(1));\n  const [endTurnData, setEndTurnData] = useState(null);\n  const [guessedCorrectPid, setGuessedCorrectPid] = useState(null);\n  const [endGameData, setEndGameData] = useState(null);\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currRound, setCurrRound] = useState(1);\n  let history = useHistory();\n\n  function onBackRoom() {\n    function getPlayerName() {\n      for (const player of players) {\n        if (player._id === pid) {\n          return player.playerName;\n        }\n      }\n      return null;\n    }\n    sendJoinGame(gameCode, pid, getPlayerName(), history);\n  }\n\n  function updatePlayersScore() {\n    if (endTurnData === null) {\n      return;\n    }\n\n    setPlayers(\n      players.map((player, index) => {\n        const newPlayer = endTurnData.players[index];\n        player[\"score\"] = newPlayer.score + newPlayer.earnedScore;\n        return player;\n      })\n    );\n\n    function getScore(score) {\n      return score ? score : 0;\n    }\n    const sortedScores = players\n      .map(player => getScore(player.score))\n      .sort()\n      .reverse();\n    setRankings(\n      players.map(player => sortedScores.indexOf(getScore(player.score)) + 1)\n    );\n  }\n\n  useEffect(() => {\n    sendEnterGame(gameCode);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"player_disconnect\", data => {\n      setPlayers(players.filter(player => player._id !== data.player._id));\n    });\n\n    return () => {\n      socket.off(\"player_disconnect\");\n    };\n  }, [players]);\n\n  useEffect(() => {\n    socket.on(\"next_artist_announcement\", data => {\n      console.log(\"got next artist\");\n      updatePlayersScore();\n      setEndTurnData(null);\n      setSelectedWord(null);\n      setArtist(data.artist);\n      setWords(data.words);\n      setGuessedCorrectPid(null);\n      setCurrRound(data.currRound);\n    });\n\n    return () => {\n      socket.off(\"next_artist_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"selected_word_announcement\", data => {\n      setIsDrawing(true);\n      setSelectedWord(data.selectedWord);\n    });\n\n    return () => {\n      socket.off(\"selected_word_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"timer_announcement\", data => {\n      setTimer(data.time);\n    });\n\n    return () => {\n      socket.off(\"timer_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"end_turn_announcement\", data => {\n      setEndTurnData(data);\n      setIsDrawing(false);\n    });\n\n    return () => {\n      socket.off(\"end_turn_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"end_game_announcement\", data => {\n      setEndGameData(data);\n    });\n\n    return () => {\n      socket.off(\"end_game_announcement\");\n    };\n  }, []);\n\n  return (\n    <div className=\"Game\">\n      <Link to=\"/\" className=\"GameTitleLink\">\n        Pictionary Live\n      </Link>\n      <h2 className=\"GameGameCode\">Game Code: {gameCode}</h2>\n      <div className=\"GamePlayContainer\">\n        <div className=\"GameDummyPlayer\" />\n        <div className=\"GameCanvasOverlayContainer\">\n          <Canvas\n            gameCode={gameCode}\n            pid={pid}\n            artist={artist}\n            selectedWord={selectedWord}\n            currRound={currRound}\n            timer={timer}\n          />\n          {!isDrawing ? (\n            <Overlay\n              gameCode={gameCode}\n              pid={pid}\n              artist={artist}\n              words={words}\n              endTurnData={endTurnData}\n              endGameData={endGameData}\n              onBackRoom={onBackRoom}\n            />\n          ) : null}\n        </div>\n        <div className=\"GameDummyChat\" />\n        <div className=\"GamePlayersChatContainer\">\n          <PlayersList\n            players={players}\n            pid={pid}\n            ownerPid={ownerPid}\n            artistPid={artist !== null ? artist._id : null}\n            guessedCorrectPid={guessedCorrectPid}\n            rankings={rankings}\n          />\n          <ChatRoom\n            gameCode={gameCode}\n            pid={pid}\n            setGuessedCorrectPid={setGuessedCorrectPid}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendEnterGame(gameCode) {\n  socket.emit(\"send_enter_game\", {\n    gameCode: gameCode\n  });\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport Room from \"../Room/Room\";\nimport Game from \"../Game/Game\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport \"prevent-pull-refresh\";\nimport \"./App.css\";\n\nfunction App() {\n  const { height } = useWindowSize();\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ height: height }}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/room\">\n            <Room />\n          </Route>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nlet root = document.getElementById(\"root\");\n// root.style.height = window.innerHeight;\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}