{"version":3,"sources":["utils/const.js","utils/socket.js","components/Home/HomeApiSocket.js","utils/hooks.js","components/Panel/Panel.js","components/TextField/TextField.js","components/Home/Footer/Footer.js","components/Home/Home.js","components/Room/Room.js","components/Room/RoomApiSocket.js","components/Game/PlayersList/PlayersList.js","components/Game/Canvas/Canvas.js","components/Game/Canvas/CanvasApiSocket.js","components/ChatRoom/ChatRoom.js","components/ChatRoom/ChatRoomApiSocket.js","components/Game/Overlay/Overlay.js","components/Game/Overlay/OverlayApiSocket.js","components/Game/Game.js","components/Game/GameApiSocket.js","components/App/App.js","serviceWorker.js","index.js"],"names":["serverBaseUrl","mediumDeviceMinWidth","socket","io","transports","sendJoinGame","gameCode","pid","playerName","history","toLowerCase","emit","on","data","off","enterRoom","alert","_callee","response","regenerator_default","a","wrap","_context","prev","next","axios","post","sent","console","log","abrupt","t0","stop","push","concat","useWindowSize","_useState3","useState","width","window","innerWidth","height","innerHeight","_useState4","Object","slicedToArray","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","Panel","forwardRef","props","ref","children","className","customRef","react_default","createElement","displayName","defaultProps","useStyles","makeStyles","textField","margin","& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","borderColor","&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root","color","& label","& label.Mui-focused","TextField","classes","label","variant","value","onChange","error","inputRef","onKeyDown","Footer","href","target","rel","esm","Provider","index_esm","Home","_useState","_useState2","setGameCode","setPlayerName","_useState5","_useState6","playerNameLabel","setPlayerNameLabel","_useState7","_useState8","hasPlayerNameError","setHasPlayerNameError","_useState9","_useState10","gameCodeLabel","setGameCodeLabel","_useState11","_useState12","hasGameCodeError","setHasGameCodeError","_useState13","_useState14","setPid","useHistory","useEffect","_getPid","apply","this","arguments","getPid","then","pidValue","react_router_dom","to","components_Panel_Panel","components_TextField_TextField","e","type","onClick","sendNewGame","Home_Footer_Footer","formControl","& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline","& .Mui-disabled","cursor","& .MuiOutlinedInput-root.Mui-disabled","& label.Mui-disabled","& option","& .MuiSelect-icon","fill","& .MuiSelect-icon.Mui-disabled","Room","state","useLocation","players","setPlayers","ownerPid","setOwnerPid","rounds","setRounds","drawTime","setDrawTime","sendEnterRoom","toString","parseInt","slice","map","player","key","_id","md_index_esm","FormControl","disabled","InputLabel","htmlFor","Select","native","sendRounds","inputProps","id","sendDrawTime","length","sendPlayGame","PlayerList","artistPid","guessedCorrectPids","rankings","_ref","index","score","style","backgroundColor","hasOwnProperty","Canvas","artist","selectedWord","currRound","timer","setColor","brushStyle","setBrushStyle","canvas","useRef","isMouseDragging","prevX","prevY","paths","mouseDown","isTouch","undefined","current","document","body","userSelect","getSelection","removeAllRanges","i","draw","mouseMove","mouseUp","isMouseMove","touchIndex","_getMousePos","windowX","windowY","rect","getBoundingClientRect","touches","clientX","clientY","currX","left","right","currY","top","bottom","getMousePos","line","newColor","drawLine","sendDrawLine","dot","x","y","drawDot","sendDrawDot","drawFill","sendDrawFill","addPath","ctx","getContext","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","points","fillStyle","fillRect","isInRange","isEmpty","imageData","r","g","b","baseIndex","Math","floor","_canvas$current$getBo","getImageData","_getInitialColor","getInitialColor","_getInitialColor2","dirs","visited","stack","_stack$pop","pop","_stack$pop2","_i","_dirs","_ref3","_ref2","newX","newY","clearCanvas","clearPath","clearRect","_paths$current$i","j","undoCanvas","word","underlinedWord","getUnderlinedWord","onTouchStart","preventDefault","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","onMouseLeave","tmpColor","gi_index_esm","sendUndoCanvas","io_index_esm","sendClearCanvas","& input","padding","transform","ChatRoom","addGuessedCorrectPid","message","setMessage","messages","setMessages","messageArea","messageTextField","addMessage","status","newMessage","toConsumableArray","scrollTop","scrollHeight","onSendMessage","sendMessage","focus","useImperativeHandle","keyCode","messageTextFieldOnKey","Overlay","words","endTurnData","endGameData","onBackRoom","getWords","Fragment","sendSelectedWord","earnedScore","Game","setArtist","isDrawing","setIsDrawing","setWords","setTimer","Array","setRankings","_useState15","_useState16","setEndTurnData","_useState17","_useState18","setGuessedCorrectPids","_useState19","_useState20","setEndGameData","_useState21","_useState22","setSelectedWord","_useState23","_useState24","setCurrRound","chatRoomRef","sendEnterGame","time","Game_Canvas_Canvas","Game_Overlay_Overlay","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","getPlayerName","PlayersList_PlayersList","components_ChatRoom_ChatRoom","App","react_router","exact","path","components_Home_Home","components_Room_Room","components_Game_Game","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","root","getElementById","ReactDOM","render","components_App_App","URL","process","origin","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.140b69f1.chunk.js","sourcesContent":["export const serverBaseUrl =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://192.168.0.245:5000\"\n    : \"https://pictionary-live.herokuapp.com\";\n\nexport const mediumDeviceMinWidth = 768;\n","import io from \"socket.io-client\";\nimport { serverBaseUrl } from \"./const\";\n\nexport const socket = io(serverBaseUrl, { transports: [\"websocket\"] });\n","import axios from \"axios\";\nimport { socket } from \"../../utils/socket\";\nimport { serverBaseUrl } from \"../../utils/const\";\n\nexport function sendJoinGame(gameCode, pid, playerName, history) {\n  gameCode = gameCode.toLowerCase();\n  socket.emit(\"send_join_room\", {\n    gameCode: gameCode\n  });\n\n  socket.on(\"join_room_success\", data => {\n    socket.off(\"join_room_success\");\n    socket.off(\"join_room_error\");\n    enterRoom(gameCode, pid, playerName, history);\n  });\n\n  socket.on(\"join_room_error\", data => {\n    socket.off(\"join_room_success\");\n    socket.off(\"join_room_error\");\n    alert(\"join room error\");\n  });\n}\n\nexport function sendNewGame(pid, playerName, history) {\n  socket.emit(\"send_new_room\", {\n    pid: pid\n  });\n\n  socket.on(\"new_room_success\", data => {\n    socket.off(\"new_room_success\");\n    socket.off(\"new_room_error\");\n    enterRoom(data.gameCode, pid, playerName, history);\n  });\n\n  socket.on(\"new_room_error\", data => {\n    alert(\"new room error\");\n    console.log(data);\n    socket.off(\"new_room_success\");\n    socket.off(\"new_room_error\");\n  });\n}\n\nexport async function getPid() {\n  // let pid = localStorage.getItem(\"pid\");\n  // if (pid != null) {\n  //   try {\n  //     let data = {\n  //       pid: pid\n  //     };\n  //     let response = await axios.post(\n  //       serverBaseUrl + \"/api/player/isValid\",\n  //       data\n  //     );\n  //     console.log(response.data);\n  //     if (response.data[\"isValid\"]) {\n  //       return pid;\n  //     }\n  //   } catch (e) {\n  //     alert(\"Error checking pid. Please reload the page.\");\n  //     console.log(e.response);\n  //     return null;\n  //   }\n  // }\n\n  // Change to not storing pid\n  try {\n    let response = await axios.post(serverBaseUrl + \"/api/player/new\");\n    console.log(response.data);\n    // pid = response.data[\"pid\"];\n    // localStorage.setItem(\"pid\", pid);\n    return response.data[\"pid\"];\n  } catch (e) {\n    alert(\"Failed to get pid. Please reload the page.\");\n    console.log(e.response);\n    return null;\n  }\n}\n\nfunction enterRoom(gameCode, pid, playerName, history) {\n  let data = {\n    gameCode: gameCode,\n    pid: pid,\n    playerName: playerName\n  };\n  console.log(data);\n  history.push(`/room?gameCode=${gameCode}`, data);\n  // socket.on(\"join_room_announcement\", data => {\n  //   socket.off(\"join_room_announcement\");\n  //   data.gameCode = gameCode;\n  //   data.pid = pid;\n  //   history.push(`/room?gameCode=${gameCode}`, data);\n  // });\n}\n","import { useState, useEffect, useLayoutEffect } from \"react\";\n\nexport function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = useState(localStorage.getItem(key) || defaultValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value]);\n\n  return [value, setValue];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", updateSize);\n    return () => {\n      window.removeEventListener(\"resize\", updateSize);\n    };\n  }, []);\n\n  return size;\n}\n","import React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Panel.css\";\n\nconst Panel = forwardRef((props, ref) => {\n  const { children, className, customRef } = props;\n  return (\n    <div className={`Panel ${className}`} ref={customRef}>\n      {children}\n    </div>\n  );\n});\n\nPanel.displayName = \"Panel\";\n\nPanel.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  className: PropTypes.string,\n  customRef: PropTypes.func\n};\n\nPanel.defaultProps = {\n  children: [],\n  className: \"\",\n  customRef: null\n};\n\nexport default Panel;\n","import React from \"react\";\nimport MaterialTextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes, { object } from \"prop-types\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    }\n  }\n});\n\nfunction TextField(props) {\n  const classes = useStyles();\n  const {\n    label,\n    variant,\n    value,\n    onChange,\n    error,\n    inputRef,\n    onKeyDown,\n    className\n  } = props;\n\n  return (\n    <MaterialTextField\n      label={label}\n      variant={variant}\n      value={value}\n      onChange={onChange}\n      error={error}\n      inputRef={inputRef}\n      onKeyDown={onKeyDown}\n      className={`${classes.textField} ${className}`}\n    />\n  );\n}\n\nTextField.propTypes = {\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.bool,\n  inputRef: PropTypes.objectOf(object),\n  onKeyDown: PropTypes.func,\n  className: PropTypes.string\n};\n\nTextField.defaultProps = {\n  label: null,\n  variant: \"standard\",\n  value: null,\n  onChange: null,\n  error: null,\n  inputRef: null,\n  onKeyDown: null,\n  className: \"\"\n};\n\nexport default TextField;\n","import React from \"react\";\nimport { IconContext } from \"react-icons\";\nimport { FaGithub } from \"react-icons/fa\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n      <p className=\"FooterText\">\n        Created by{\" \"}\n        <a\n          className=\"FooterLink\"\n          href=\"https://huberthung.me\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Hubert Hung\n        </a>\n      </p>\n      <a\n        className=\"FooterLink\"\n        href=\"https://github.com/hubert322/pictionary\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconContext.Provider value={{ size: \"2.2rem\" }}>\n          <FaGithub />\n        </IconContext.Provider>\n      </a>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { sendJoinGame, sendNewGame, getPid } from \"./HomeApiSocket\";\nimport { useLocalStorage } from \"../../utils/hooks\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\nimport Footer from \"./Footer/Footer\";\nimport \"../App/App.css\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const [gameCode, setGameCode] = useState(\"\");\n  // const [playerName, setPlayerName] = useLocalStorage(\"playerName\", \"\");\n  const [playerName, setPlayerName] = useState(\"\");\n  const [playerNameLabel, setPlayerNameLabel] = useState(\"Name\");\n  const [hasPlayerNameError, setHasPlayerNameError] = useState(false);\n  const [gameCodeLabel, setGameCodeLabel] = useState(\"Game Code\");\n  const [hasGameCodeError, setHasGameCodeError] = useState(false);\n  const [pid, setPid] = useState(null);\n  let history = useHistory();\n\n  function onJoinGame() {\n    if (gameCode === \"\" || playerName === \"\") {\n      if (gameCode === \"\") {\n        setHasGameCodeError(true);\n        setGameCodeLabel(\"Game Code required\");\n      }\n      if (playerName === \"\") {\n        setHasPlayerNameError(true);\n        setPlayerNameLabel(\"Name required\");\n      }\n    } else if (typeof pid !== \"string\") {\n      console.log(\"Waiting for promise to resolve...\");\n    } else {\n      sendJoinGame(gameCode, pid, playerName, history);\n    }\n  }\n\n  function onNewGame() {\n    if (playerName === \"\") {\n      setHasPlayerNameError(true);\n      setPlayerNameLabel(\"Name required\");\n    } else if (typeof pid !== \"string\") {\n      console.log(\"Waiting for promise to resolve...\");\n    } else {\n      sendNewGame(pid, playerName, history);\n    }\n  }\n\n  useEffect(() => {\n    getPid().then(pidValue => {\n      setPid(pidValue);\n    });\n  }, []);\n\n  return (\n    <div className=\"Home\">\n      <Link to=\"/\" className=\"HomeTitle\">\n        Pictionary Live\n      </Link>\n      {pid !== null ? (\n        <Panel className=\"HomeMainContainer\">\n          <TextField\n            label={playerNameLabel}\n            variant=\"outlined\"\n            value={playerName}\n            onChange={e => setPlayerName(e.target.value)}\n            error={hasPlayerNameError}\n          />\n          <div className=\"HomeJoinGameContainer\">\n            <TextField\n              label={gameCodeLabel}\n              variant=\"outlined\"\n              className=\"HomeJoinGameTextField\"\n              value={gameCode}\n              onChange={e => setGameCode(e.target.value)}\n              error={hasGameCodeError}\n            />\n            <button\n              type=\"button\"\n              className=\"Button HomeJoinGameButton\"\n              onClick={onJoinGame}\n            >\n              Join Game\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            className=\"Button HomeNewGameButton\"\n            onClick={onNewGame}\n          >\n            New Game\n          </button>\n        </Panel>\n      ) : (\n        <p>Loading...</p>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Select, InputLabel, FormControl } from \"@material-ui/core\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown } from \"react-icons/fa\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport { socket } from \"../../utils/socket\";\nimport { mediumDeviceMinWidth } from \"../../utils/const\";\nimport {\n  sendEnterRoom,\n  sendPlayGame,\n  sendRounds,\n  sendDrawTime\n} from \"./RoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport \"../App/App.css\";\nimport \"./Room.css\";\n\nconst useStyles = makeStyles({\n  formControl: {\n    margin: \"0px 7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& .Mui-disabled\": {\n      cursor: \"not-allowed\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    },\n    \"& label.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    },\n    \"& option\": {\n      color: \"black\"\n    },\n    \"& .MuiSelect-icon\": {\n      fill: \"white\"\n    },\n    \"& .MuiSelect-icon.Mui-disabled\": {\n      fill: \"rgba(255, 255, 255, 0.26)\"\n    }\n  }\n});\n\nfunction Room() {\n  const classes = useStyles();\n  const state = useLocation().state;\n  const { gameCode, pid, playerName } = state;\n  const [players, setPlayers] = useState([]);\n  const [ownerPid, setOwnerPid] = useState(\"\");\n  // const { gameCode } = state;\n  // const pid = 0;\n  // const [ownerPid, setOwnerPid] = useState(1);\n  // const [players, setPlayers] = useState(() => {\n  //   let tmp = [];\n  //   for (let i = 0; i < 8; ++i) {\n  //     tmp.push({\n  //       _id: i,\n  //       playerName: `Hurgurto${i}`\n  //     });\n  //   }\n\n  //   return tmp;\n  // });\n  const [rounds, setRounds] = useState(3);\n  const [drawTime, setDrawTime] = useState(60 + \"s\");\n  const { width } = useWindowSize();\n  const history = useHistory();\n\n  useEffect(() => {\n    sendEnterRoom(gameCode, pid, playerName);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"join_room_announcement\", data => {\n      console.log(data);\n      setPlayers(data.players);\n      setOwnerPid(data.ownerPid);\n      setRounds(data.rounds);\n      setDrawTime(data.drawTime.toString() + \"s\");\n    });\n\n    return () => {\n      socket.off(\"join_room_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"rounds_announcement\", data => {\n      setRounds(data.rounds);\n    });\n\n    return () => {\n      socket.off(\"rounds_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_time_announcement\", data => {\n      setDrawTime(data.drawTime.toString() + \"s\");\n    });\n\n    return () => {\n      socket.off(\"draw_time_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"play_game_announcement\", () => {\n      console.log(\"YO\");\n      history.push(`/game?gameCode=${gameCode}`, {\n        gameCode: gameCode,\n        pid: pid,\n        players: players,\n        ownerPid: ownerPid,\n        drawTime: parseInt(drawTime.slice(0, -1))\n      });\n    });\n\n    return () => {\n      socket.off(\"play_game_announcement\");\n    };\n  }, [gameCode, pid, players, ownerPid, drawTime, history]);\n\n  useEffect(() => {\n    socket.on(\"room_disconnect_announcement\", data => {\n      console.log(data);\n      setPlayers(data.players);\n      setOwnerPid(data.ownerPid);\n    });\n\n    return () => {\n      socket.off(\"room_disconnect_announcement\");\n    };\n  }, []);\n\n  return (\n    <div className=\"Room\">\n      <Link to=\"/\" className=\"RoomTitleLink\">\n        Pictionary Live\n      </Link>\n      <h2 className=\"RoomGameCode\">Game Code: {gameCode}</h2>\n      <div className=\"RoomMainContainer\">\n        <Panel className=\"RoomPlayersContainer\">\n          <h3 className=\"RoomContainerTitle\">Players</h3>\n          <div className=\"RoomPlayersList\">\n            {players.map(player => (\n              <div className=\"RoomPlayer\" key={player._id}>\n                <IconContext.Provider\n                  value={{\n                    size: width >= mediumDeviceMinWidth ? \"3rem\" : \"2rem\"\n                  }}\n                >\n                  {player._id === ownerPid ? <FaCrown /> : <MdPerson />}\n                </IconContext.Provider>\n                <span className=\"RoomPlayerName\">{player.playerName}</span>\n                <span className=\"RoomPlayerTag\">\n                  {player._id === pid ? \"You\" : \" \"}\n                </span>\n              </div>\n            ))}\n          </div>\n        </Panel>\n        <Panel className=\"RoomGameControlsContainer\">\n          <h3 className=\"RoomContainerTitle\">Settings</h3>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Rounds</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={rounds}\n              onChange={e => sendRounds(gameCode, e.target.value)}\n              inputProps={{ id: \"roundsSelector\" }}\n            >\n              <option>3</option>\n              <option>5</option>\n              <option>10</option>\n            </Select>\n          </FormControl>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"drawTimeSelector\">Draw Time</InputLabel>\n            <Select\n              native\n              label=\"Draw Time\"\n              value={drawTime}\n              onChange={e => sendDrawTime(gameCode, e.target.value)}\n              inputProps={{ id: \"drawTime\" }}\n            >\n              <option>30s</option>\n              <option>60s</option>\n              <option>90s</option>\n            </Select>\n          </FormControl>\n          <button\n            type=\"button\"\n            className=\"Button RoomPlayButton\"\n            onClick={() => {\n              if (players.length > 1) {\n                sendPlayGame(gameCode);\n              }\n            }}\n            disabled={pid !== ownerPid || players.length <= 1}\n          >\n            Play\n          </button>\n        </Panel>\n      </div>\n    </div>\n  );\n}\n\nexport default Room;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendEnterRoom(gameCode, pid, playerName) {\n  socket.emit(\"send_enter_room\", {\n    gameCode: gameCode,\n    pid: pid,\n    playerName: playerName\n  });\n}\n\nexport function sendPlayGame(gameCode) {\n  socket.emit(\"send_play_game\", {\n    gameCode: gameCode\n  });\n}\n\nexport function sendRounds(gameCode, rounds) {\n  console.log(rounds);\n  rounds = parseInt(rounds);\n  socket.emit(\"send_rounds\", {\n    gameCode: gameCode,\n    rounds: rounds\n  });\n}\n\nexport function sendDrawTime(gameCode, drawTime) {\n  drawTime = parseInt(drawTime.slice(0, -1));\n  socket.emit(\"send_draw_time\", {\n    gameCode: gameCode,\n    drawTime: drawTime\n  });\n}\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown, FaPaintBrush } from \"react-icons/fa\";\nimport { useWindowSize } from \"../../../utils/hooks\";\nimport { mediumDeviceMinWidth } from \"../../../utils/const\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./PlayersList.css\";\n\nfunction PlayerList(props) {\n  const {\n    players,\n    pid,\n    ownerPid,\n    artistPid,\n    guessedCorrectPids,\n    rankings\n  } = props;\n  const { width } = useWindowSize();\n\n  // let debugPlayers = [];\n  // for (let i = 0; i < 8; ++i) {\n  //   debugPlayers.push({\n  //     _id: i,\n  //     playerName: `Hurgurto${i}`,\n  //     score: 3000\n  //   });\n  // }\n\n  return (\n    <Panel className=\"PlayersList\">\n      {players.map(({ playerName, _id, score }, index) => (\n        <div\n          className=\"PlayersListPlayer\"\n          key={_id}\n          style={{\n            backgroundColor: guessedCorrectPids.hasOwnProperty(_id)\n              ? \"rgb(35, 231, 17)\"\n              : \"transparent\"\n          }}\n        >\n          <div className=\"PlayersListPlayerRankingIcon\">\n            <span className=\"PlayersListRanking\">#{rankings[index]}</span>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.8rem\" : \"1.5rem\"\n              }}\n            >\n              {_id === ownerPid ? <FaCrown /> : <MdPerson />}\n            </IconContext.Provider>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.5rem\" : \"1.2rem\"\n              }}\n            >\n              {_id === artistPid ? <FaPaintBrush /> : null}\n            </IconContext.Provider>\n          </div>\n          <span className=\"PlayersListPlayerName\">\n            {playerName}\n            {pid === _id ? \" (You)\" : null}: {score ? score : 0}\n          </span>\n        </div>\n      ))}\n    </Panel>\n  );\n}\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pid: PropTypes.string.isRequired,\n  ownerPid: PropTypes.string.isRequired,\n  artistPid: PropTypes.string,\n  guessedCorrectPids: PropTypes.objectOf(PropTypes.bool).isRequired,\n  rankings: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nPlayerList.defaultProps = {\n  artistPid: null\n};\n\nexport default PlayerList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { IoMdUndo } from \"react-icons/io\";\nimport { FaTrash, FaPaintBrush, FaCheck } from \"react-icons/fa\";\nimport { GiPaintBucket } from \"react-icons/gi\";\nimport { socket } from \"../../../utils/socket\";\nimport {\n  sendDrawLine,\n  sendDrawDot,\n  sendDrawFill,\n  sendUndoCanvas,\n  sendClearCanvas\n} from \"./CanvasApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"../../App/App.css\";\nimport \"./Canvas.css\";\n\nfunction Canvas(props) {\n  const { gameCode, pid, artist, selectedWord, currRound, timer } = props;\n  const [color, setColor] = useState(\"#000000\");\n  const [brushStyle, setBrushStyle] = useState(\"brush\");\n  const canvas = useRef(null);\n  let isMouseDragging = useRef(false);\n  let prevX = useRef(null);\n  let prevY = useRef(null);\n  const paths = useRef([]);\n  const colors = [\n    \"#000000\",\n    \"#FFFFFF\",\n    \"#808080\",\n    \"#C0C0C0\",\n    \"#FF0000\",\n    \"#FF7F00\",\n    \"#FFFF00\",\n    \"#00FF00\",\n    \"#00FFFF\",\n    \"#0000FF\",\n    \"#7F00FF\",\n    \"#FF00FF\"\n  ];\n  const controlsIconSize = \"5vmin\";\n\n  function touchStart(e) {\n    e.preventDefault();\n    mouseDown(e, true);\n  }\n\n  function mouseDown(e, isTouch = false) {\n    if (artist === null || pid !== artist._id) {\n      return;\n    }\n    isMouseDragging.current = true;\n    document.body.style.userSelect = \"none\";\n    window.getSelection().removeAllRanges();\n    if (isTouch) {\n      for (let i = 0; i < 1; ++i) {\n        draw(e, false, i);\n      }\n    } else {\n      draw(e, false, -1);\n    }\n  }\n\n  function touchMove(e) {\n    e.preventDefault();\n    mouseMove(e, true);\n  }\n\n  function mouseMove(e, isTouch = false) {\n    if (artist === null || pid !== artist._id || brushStyle === \"bucket\") {\n      return;\n    }\n    if (isMouseDragging.current) {\n      if (isTouch) {\n        for (let i = 0; i < 1; ++i) {\n          draw(e, true, i);\n        }\n      } else {\n        draw(e, true, -1);\n      }\n    }\n  }\n\n  function touchEnd(e) {\n    e.preventDefault();\n    mouseUp();\n  }\n\n  function mouseUp() {\n    if (artist === null || pid !== artist._id) {\n      return;\n    }\n    document.body.style.userSelect = \"auto\";\n    isMouseDragging.current = false;\n  }\n\n  function mouseLeave() {\n    prevX.current = null;\n    prevY.current = null;\n  }\n\n  function draw(e, isMouseMove, touchIndex) {\n    const { currX, currY } = getMousePos(e, touchIndex);\n    if (brushStyle === \"brush\") {\n      if (isMouseMove && prevX.current !== null && prevY.current !== null) {\n        const line = {\n          prevX: prevX.current,\n          prevY: prevY.current,\n          currX: currX,\n          currY: currY,\n          newColor: color\n        };\n        drawLine(line, true);\n        sendDrawLine(gameCode, line);\n      } else {\n        const dot = {\n          x: currX,\n          y: currY,\n          newColor: color\n        };\n        drawDot(dot, true);\n        sendDrawDot(gameCode, dot);\n      }\n      prevX.current = currX;\n      prevY.current = currY;\n    } else {\n      const fill = {\n        x: currX,\n        y: currY,\n        newColor: color\n      };\n      drawFill(fill, true);\n      sendDrawFill(gameCode, fill);\n    }\n  }\n\n  function getMousePos(e, touchIndex) {\n    const rect = canvas.current.getBoundingClientRect();\n    let windowX, windowY;\n    if (touchIndex !== -1) {\n      windowX = e.touches[touchIndex].clientX;\n      windowY = e.touches[touchIndex].clientY;\n    } else {\n      windowX = e.clientX;\n      windowY = e.clientY;\n    }\n    return {\n      currX:\n        ((windowX - rect.left) / (rect.right - rect.left)) *\n        canvas.current.width,\n      currY:\n        ((windowY - rect.top) / (rect.bottom - rect.top)) *\n        canvas.current.height\n    };\n  }\n\n  function drawLine(line, addPath) {\n    const { prevX, prevY, currX, currY, newColor } = line;\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.strokeStyle = newColor;\n    ctx.lineWidth = 2;\n    ctx.moveTo(prevX, prevY);\n    ctx.lineTo(currX, currY);\n    ctx.stroke();\n    ctx.closePath();\n    if (addPath) {\n      paths.current[paths.current.length - 1].points.push({\n        x: currX,\n        y: currY\n      });\n    }\n  }\n\n  function drawDot(dot, addPath) {\n    const { x, y, newColor } = dot;\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.fillStyle = newColor;\n    ctx.fillRect(x, y, 2, 2);\n    ctx.closePath();\n    if (addPath) {\n      paths.current.push({\n        points: [],\n        newColor: newColor,\n        brushStyle: \"brush\"\n      });\n      paths.current[paths.current.length - 1].points.push({ x: x, y: y });\n    }\n  }\n\n  function drawFill(fill, addPath) {\n    function getInitialColor(x, y, imageData) {\n      const baseIndex = (y * width + x) * 4;\n      const redOffset = 0;\n      const greenOffset = 1;\n      const blueOffset = 2;\n      const alphaOffset = 3;\n      return [\n        imageData.data[baseIndex + redOffset],\n        imageData.data[baseIndex + greenOffset],\n        imageData.data[baseIndex + blueOffset],\n        imageData.data[baseIndex + alphaOffset]\n      ];\n    }\n\n    function isInRange(x, y, width, height) {\n      return 0 <= x && x < width && 0 <= y && y < height;\n    }\n\n    function isEmpty(x, y, width, imageData, r, g, b, a) {\n      // 4 is used since each cell has rgba\n      const baseIndex = (y * width + x) * 4;\n      const redOffset = 0;\n      const greenOffset = 1;\n      const blueOffset = 2;\n      const alphaOffset = 3;\n      return (\n        imageData.data[baseIndex + redOffset] === r &&\n        imageData.data[baseIndex + greenOffset] === g &&\n        imageData.data[baseIndex + blueOffset] === b &&\n        imageData.data[baseIndex + alphaOffset] === a\n      );\n    }\n\n    let { x, y, newColor } = fill;\n    x = Math.floor(x);\n    y = Math.floor(y);\n    const ctx = canvas.current.getContext(\"2d\");\n    let { width, height } = canvas.current.getBoundingClientRect();\n    width = Math.floor(width);\n    height = Math.floor(height);\n\n    if (!isInRange(x, y, width, height)) {\n      return;\n    }\n\n    const imageData = ctx.getImageData(0, 0, width, height);\n    const [r, g, b, a] = getInitialColor(x, y, imageData);\n\n    const dirs = [\n      [0, -1],\n      [1, -1],\n      [1, 0],\n      [1, 1],\n      [0, 1],\n      [-1, 1],\n      [-1, 0],\n      [-1, -1]\n    ];\n    const visited = {};\n    visited[`${x}+${y}`] = 1;\n    let stack = [[x, y]];\n    ctx.beginPath();\n    ctx.fillStyle = newColor;\n    ctx.fillRect(x, y, 1, 1);\n\n    while (stack.length) {\n      const [x, y] = stack.pop();\n      for (const [dx, dy] of dirs) {\n        const newX = x + dx;\n        const newY = y + dy;\n        if (\n          isInRange(newX, newY, width, height) &&\n          isEmpty(newX, newY, width, imageData, r, g, b, a) &&\n          !visited.hasOwnProperty(`${newX}+${newY}`)\n        ) {\n          ctx.fillRect(newX, newY, 1, 1);\n          stack.push([newX, newY]);\n          visited[`${newX}+${newY}`] = 1;\n        }\n      }\n    }\n    ctx.closePath();\n\n    if (addPath) {\n      paths.current.push({\n        points: [],\n        newColor: newColor,\n        brushStyle: \"bucket\"\n      });\n      paths.current[paths.current.length - 1].points.push({ x: x, y: y });\n    }\n  }\n\n  function undoCanvas() {\n    if (paths.current.length) {\n      clearCanvas(false);\n      paths.current.pop();\n      for (let i = 0; i < paths.current.length; ++i) {\n        const { points, newColor, brushStyle } = paths.current[i];\n        if (brushStyle === \"brush\") {\n          const dot = {\n            x: points[0].x,\n            y: points[0].y,\n            newColor: newColor\n          };\n          drawDot(dot, false);\n          for (let j = 1; j < points.length; ++j) {\n            const line = {\n              prevX: points[j - 1].x,\n              prevY: points[j - 1].y,\n              currX: points[j].x,\n              currY: points[j].y\n            };\n            drawLine(line, false);\n          }\n        } else {\n          const fill = {\n            x: points[0].x,\n            y: points[0].y,\n            newColor: newColor\n          };\n          drawFill(fill, false);\n        }\n      }\n    }\n  }\n\n  function clearCanvas(clearPath) {\n    if (paths.current.length) {\n      const ctx = canvas.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n      if (clearPath) {\n        paths.current = [];\n      }\n    }\n  }\n\n  function getUnderlinedWord(word) {\n    let underlinedWord = \"\";\n    for (let i = 0; i < word.length; ++i) {\n      if (word[i] === \" \") {\n        underlinedWord += \"  \";\n      } else {\n        underlinedWord += \"__\";\n      }\n      if (i + 1 !== word.length) {\n        underlinedWord += \"  \";\n      }\n    }\n    return underlinedWord;\n  }\n\n  useEffect(() => {\n    socket.on(\"draw_line_announcement\", data => {\n      if (canvas.current !== null) {\n        drawLine(data.line, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_line_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_dot_announcement\", data => {\n      if (canvas.current !== null) {\n        drawDot(data.dot, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_dot_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_fill_announcement\", data => {\n      if (canvas.current !== null) {\n        drawFill(data.fill, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_fill_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"undo_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        undoCanvas();\n      }\n    });\n\n    return () => {\n      socket.off(\"undo_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"clear_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        clearCanvas(true);\n      }\n    });\n\n    return () => {\n      socket.off(\"clear_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (selectedWord === null) {\n      clearCanvas(true);\n    }\n  }, [artist]);\n\n  return (\n    <Panel className=\"CanvasContainer\">\n      <div className=\"CanvasHeader\">\n        <span className=\"CanvasCurrRound\">Round: {currRound}</span>\n        <span className=\"CanvasUnderlinedWord\">\n          Word:{\" \"}\n          {artist !== null && pid !== artist._id && selectedWord !== null\n            ? getUnderlinedWord(selectedWord)\n            : selectedWord}\n        </span>\n        <span className=\"CanvasTimer\">Timer: {timer}s</span>\n      </div>\n      <canvas\n        className=\"Canvas\"\n        ref={canvas}\n        onTouchStart={touchStart}\n        onMouseDown={mouseDown}\n        onTouchMove={touchMove}\n        onMouseMove={mouseMove}\n        onTouchEnd={touchEnd}\n        onMouseUp={mouseUp}\n        onMouseLeave={mouseLeave}\n      />\n      <div className=\"CanvasDummy\" />\n      <div className=\"CanvasControlsContainer\">\n        <div className=\"CanvasColorsContainer\">\n          {colors.map(tmpColor => (\n            <button\n              key={tmpColor}\n              type=\"button\"\n              style={{\n                backgroundColor: tmpColor,\n                color:\n                  artist !== null && pid === artist._id && color === tmpColor\n                    ? tmpColor !== \"#FFFFFF\"\n                      ? \"white\"\n                      : \"black\"\n                    : tmpColor\n              }}\n              className=\"Button CanvasControl CanvasColorControl\"\n              disabled={artist !== null && pid !== artist._id}\n              onClick={() => {\n                setColor(tmpColor);\n              }}\n            >\n              <IconContext.Provider\n                value={{\n                  size: \"2.5vmin\"\n                }}\n              >\n                <FaCheck />\n              </IconContext.Provider>\n            </button>\n          ))}\n        </div>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          style={{\n            backgroundColor:\n              artist !== null && pid === artist._id && brushStyle === \"brush\"\n                ? \"#f64f59\"\n                : \"#ffffff\"\n          }}\n          onClick={() => setBrushStyle(\"brush\")}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <FaPaintBrush />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          style={{\n            backgroundColor:\n              artist !== null && pid === artist._id && brushStyle === \"bucket\"\n                ? \"#f64f59\"\n                : \"#ffffff\"\n          }}\n          onClick={() => setBrushStyle(\"bucket\")}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <GiPaintBucket />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendUndoCanvas(gameCode);\n            }\n          }}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <IoMdUndo />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendClearCanvas(gameCode);\n            }\n          }}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <FaTrash />\n          </IconContext.Provider>\n        </button>\n        {artist === null || pid !== artist._id ? (\n          <div className=\"CanvasControlsOverlay\" />\n        ) : null}\n      </div>\n    </Panel>\n  );\n}\n\nCanvas.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  selectedWord: PropTypes.string,\n  currRound: PropTypes.number.isRequired,\n  timer: PropTypes.number.isRequired\n};\n\nCanvas.defaultProps = {\n  artist: null,\n  selectedWord: \"\"\n};\n\nexport default Canvas;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendDrawLine(gameCode, line) {\n  socket.emit(\"send_draw_line\", {\n    gameCode: gameCode,\n    line: line\n  });\n}\n\nexport function sendDrawDot(gameCode, dot) {\n  socket.emit(\"send_draw_dot\", {\n    gameCode: gameCode,\n    dot: dot\n  });\n}\n\nexport function sendDrawFill(gameCode, fill) {\n  socket.emit(\"send_draw_fill\", {\n    gameCode: gameCode,\n    fill: fill\n  });\n}\n\nexport function sendUndoCanvas(gameCode) {\n  socket.emit(\"send_undo_canvas\", {\n    gameCode: gameCode\n  });\n}\n\nexport function sendClearCanvas(gameCode) {\n  socket.emit(\"send_clear_canvas\", {\n    gameCode: gameCode\n  });\n}\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  forwardRef,\n  useImperativeHandle\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { socket } from \"../../utils/socket\";\nimport { sendMessage } from \"./ChatRoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\nimport \"./ChatRoom.css\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"5px 0px\",\n    \"& .MuiOutlinedInput-root\": {\n      color: \"black\"\n    },\n    \"& input\": {\n      padding: \"7px\"\n    },\n    \"& label\": {\n      color: \"black\",\n      transform: \"translate(14px, 7px) scale(1)\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"black\"\n    }\n  }\n});\n\nconst ChatRoom = forwardRef((props, ref) => {\n  const classes = useStyles();\n  const { gameCode, pid, addGuessedCorrectPid } = props;\n  const [message, setMessage] = useState(\"\");\n  // const [isFirstTime, setIsFirstTime] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const messageArea = useRef(null);\n  const messageTextField = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    addMessage: addMessage\n  }));\n\n  function addMessage(message, status) {\n    let newMessage = {\n      message: message,\n      status: status\n    };\n    setMessages(messages => [...messages, newMessage]);\n    scroll();\n  }\n\n  function scroll() {\n    messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // if (isFirstTime) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    //   setIsFirstTime(false);\n    // } else if (\n    //   messageArea.current.scrollTop + messageArea.current.clientHeight ===\n    //   messageArea.current.scrollHeight\n    // ) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // }\n  }\n\n  useEffect(() => {\n    socket.on(\"send_message_announcement\", data => {\n      let message = `${data.player.playerName}: ${data.message}`;\n      let status = \"\";\n      addMessage(message, status);\n    });\n\n    return () => {\n      socket.off(\"send_message_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"correct_word_announcement\", data => {\n      let message = `${data.player.playerName} has guessed the word!`;\n      let status = \"Correct\";\n      addMessage(message, status);\n      addGuessedCorrectPid(data.player._id);\n    });\n\n    return () => {\n      socket.off(\"correct_word_announcement\");\n    };\n  }, [addGuessedCorrectPid]);\n\n  function onSendMessage() {\n    sendMessage(gameCode, pid, message);\n    setMessage(\"\");\n    messageTextField.current.focus();\n  }\n\n  function messageTextFieldOnKey(e) {\n    const ENTER_KEY_CODE = 13;\n    if (e.keyCode === ENTER_KEY_CODE && message !== \"\") {\n      onSendMessage();\n    }\n  }\n\n  return (\n    <Panel className=\"ChatRoom\" ref={ref}>\n      <div className=\"ChatRoomMessageArea\" ref={messageArea}>\n        {messages.map((message, index) => (\n          <p\n            // eslint-disable-next-line react/no-array-index-key\n            key={`msg${index}`}\n            className={`ChatRoomMessage ChatRoomMessage${message.status}`}\n          >\n            {message.message}\n          </p>\n        ))}\n      </div>\n      <TextField\n        className={`${classes.textField} ChatRoomTextField`}\n        label=\"message\"\n        variant=\"outlined\"\n        value={message}\n        onChange={e => setMessage(e.target.value)}\n        inputRef={messageTextField}\n        onKeyDown={e => messageTextFieldOnKey(e)}\n      />\n    </Panel>\n  );\n});\n\nChatRoom.displayName = \"ChatRoom\";\n\nChatRoom.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  addGuessedCorrectPid: PropTypes.func.isRequired\n};\n\nexport default ChatRoom;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendMessage(gameCode, pid, message) {\n  socket.emit(\"send_message\", {\n    gameCode: gameCode,\n    pid: pid,\n    message: message\n  });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sendSelectedWord } from \"./OverlayApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"../../App/App.css\";\nimport \"./Overlay.css\";\n\nfunction Overlay(props) {\n  const {\n    gameCode,\n    pid,\n    artist,\n    words,\n    endTurnData,\n    endGameData,\n    onBackRoom\n  } = props;\n\n  function getResults() {\n    // let results = {\n    //   players: []\n    // };\n    // for (let i = 0; i < 8; ++i) {\n    //   results.players.push({\n    //     _id: i,\n    //     playerName: `Hurgurto${i}`,\n    //     score: 3000\n    //   });\n    // }\n    return (\n      <div className=\"OverlayEndTurnResultsContainer\">\n        {endGameData.players.map((player, index) => (\n          <p key={player._id} className=\"OverlayEndTurnResultsText\">\n            #{endGameData.rankings[index]} {player.playerName}: {player.score}\n          </p>\n        ))}\n        <button\n          type=\"button\"\n          className=\"Button OverlayEndTurnResultsButton\"\n          onClick={onBackRoom}\n        >\n          Back to Room\n        </button>\n      </div>\n    );\n  }\n\n  function getEndTurn() {\n    // let selectedWord = \"Hello\";\n    // let endTurnData = {\n    //   players: [],\n    //   isEndGame: false\n    // };\n    // for (let i = 0; i < 8; ++i) {\n    //   endTurnData.players.push({\n    //     _id: i,\n    //     playerName: `Hurgurto${i}`,\n    //     score: 3000,\n    //     earnedScore: 5000\n    //   });\n    // }\n    return (\n      <div className=\"OverlayEndTurnResultsContainer\">\n        <p className=\"OverlayEndTurnResultsText\">\n          Selected Word: {endTurnData.selectedWord}\n        </p>\n        {endTurnData.players.map(player => (\n          <p key={player._id} className=\"OverlayEndTurnResultsText\">\n            {player.playerName}: {player.score} + {player.earnedScore}\n          </p>\n        ))}\n        {/* {endTurnData.isEndGame ? (\n          <button\n            type=\"button\"\n            className=\"Button OverlayEndTurnResultsButton\"\n            onClick={onShowResults}\n          >\n            Results\n          </button>\n        ) : null} */}\n      </div>\n    );\n  }\n\n  function getLoading() {\n    return <p>Loading...</p>;\n  }\n\n  function getArtistChoosing() {\n    return <p>{artist.playerName} is choosing their word...</p>;\n  }\n\n  function getWords() {\n    // let words = [\"computer\", \"hello\", \"world\"];\n    return (\n      <>\n        {words.map(word => (\n          <button\n            type=\"button\"\n            key={word}\n            className=\"Button OverlayWordButton\"\n            onClick={() => sendSelectedWord(gameCode, word)}\n          >\n            {word}\n          </button>\n        ))}\n      </>\n    );\n  }\n\n  function selectOverlayContent() {\n    if (endGameData !== null) {\n      return getResults();\n    }\n    if (endTurnData !== null) {\n      return getEndTurn();\n    }\n    if (artist === null) {\n      return getLoading();\n    }\n    if (pid !== artist._id) {\n      return getArtistChoosing();\n    }\n    return getWords();\n  }\n\n  return <Panel className=\"Overlay\">{selectOverlayContent()}</Panel>;\n  // return <Panel className=\"Overlay\">{getResults()}</Panel>;\n}\n\nOverlay.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  words: PropTypes.arrayOf(PropTypes.string).isRequired,\n  endTurnData: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n  ),\n  endGameData: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array])),\n  onBackRoom: PropTypes.func.isRequired\n};\n\nOverlay.defaultProps = {\n  artist: null,\n  endTurnData: null,\n  endGameData: null\n};\n\nexport default Overlay;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendSelectedWord(gameCode, word) {\n  socket.emit(\"send_selected_word\", {\n    gameCode: gameCode,\n    word: word\n  });\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { socket } from \"../../utils/socket\";\nimport { sendEnterGame } from \"./GameApiSocket\";\nimport { sendJoinGame } from \"../Home/HomeApiSocket\";\nimport PlayersList from \"./PlayersList/PlayersList\";\nimport Canvas from \"./Canvas/Canvas\";\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\nimport Overlay from \"./Overlay/Overlay\";\nimport \"./Game.css\";\n\nfunction Game() {\n  const state = useLocation().state;\n  const { gameCode, pid, drawTime } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [ownerPid, setOwnerPid] = useState(state.ownerPid);\n  const [artist, setArtist] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [words, setWords] = useState([]);\n  const [timer, setTimer] = useState(drawTime);\n  const [rankings, setRankings] = useState(new Array(players.length).fill(1));\n  const [endTurnData, setEndTurnData] = useState(null);\n  const [guessedCorrectPids, setGuessedCorrectPids] = useState({});\n  const [endGameData, setEndGameData] = useState(null);\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currRound, setCurrRound] = useState(1);\n  const chatRoomRef = useRef(null);\n  let history = useHistory();\n\n  function onBackRoom() {\n    function getPlayerName() {\n      for (const player of players) {\n        if (player._id === pid) {\n          return player.playerName;\n        }\n      }\n      return null;\n    }\n    sendJoinGame(gameCode, pid, getPlayerName(), history);\n  }\n\n  function updatePlayersScore(players) {\n    setPlayers(\n      players.map(player => {\n        player.score = player.score + player.earnedScore;\n        return player;\n      })\n    );\n  }\n\n  function addGuessedCorrectPid(pid) {\n    setGuessedCorrectPids(guessedCorrectPids => {\n      guessedCorrectPids[pid] = true;\n      return guessedCorrectPids;\n    });\n  }\n\n  useEffect(() => {\n    sendEnterGame(gameCode);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"next_artist_announcement\", data => {\n      console.log(\"got next artist\");\n      console.log(data);\n      updatePlayersScore(data.players);\n      setRankings(data.rankings);\n      setEndTurnData(null);\n      setSelectedWord(null);\n      setArtist(data.artist);\n      setWords(data.words);\n      setGuessedCorrectPids({});\n      setCurrRound(data.currRound);\n    });\n\n    return () => {\n      socket.off(\"next_artist_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"selected_word_announcement\", data => {\n      setIsDrawing(true);\n      setSelectedWord(data.selectedWord);\n    });\n\n    return () => {\n      socket.off(\"selected_word_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"timer_announcement\", data => {\n      setTimer(data.time);\n    });\n\n    return () => {\n      socket.off(\"timer_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"end_turn_announcement\", data => {\n      setEndTurnData(data);\n      setIsDrawing(false);\n    });\n\n    return () => {\n      socket.off(\"end_turn_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"end_game_announcement\", data => {\n      setEndGameData(data);\n    });\n\n    return () => {\n      socket.off(\"end_game_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"game_disconnect_announcement\", data => {\n      setPlayers(data.players);\n      setRankings(data.rankings);\n      setOwnerPid(data.ownerPid);\n      let message = `${data.playerName} has disconnected`;\n      let status = \"Disconnected\";\n      chatRoomRef.current.addMessage(message, status);\n    });\n\n    return () => {\n      socket.off(\"game_disconnect_announcement\");\n    };\n  }, [chatRoomRef]);\n\n  return (\n    <div className=\"Game\">\n      <Link to=\"/\" className=\"GameTitleLink\">\n        Pictionary Live\n      </Link>\n      <h2 className=\"GameGameCode\">Game Code: {gameCode}</h2>\n      <div className=\"GamePlayContainer\">\n        <div className=\"GameDummyPlayer\" />\n        <div className=\"GameCanvasOverlayContainer\">\n          <Canvas\n            gameCode={gameCode}\n            pid={pid}\n            artist={artist}\n            selectedWord={selectedWord}\n            currRound={currRound}\n            timer={timer}\n          />\n          {!isDrawing ? (\n            <Overlay\n              gameCode={gameCode}\n              pid={pid}\n              artist={artist}\n              words={words}\n              endTurnData={endTurnData}\n              endGameData={endGameData}\n              onBackRoom={onBackRoom}\n            />\n          ) : null}\n        </div>\n        <div className=\"GameDummyChat\" />\n        <div className=\"GamePlayersChatContainer\">\n          <PlayersList\n            players={players}\n            pid={pid}\n            ownerPid={ownerPid}\n            artistPid={artist !== null ? artist._id : null}\n            guessedCorrectPids={guessedCorrectPids}\n            rankings={rankings}\n          />\n          <ChatRoom\n            gameCode={gameCode}\n            pid={pid}\n            addGuessedCorrectPid={addGuessedCorrectPid}\n            ref={chatRoomRef}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendEnterGame(gameCode) {\n  socket.emit(\"send_enter_game\", {\n    gameCode: gameCode\n  });\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport Room from \"../Room/Room\";\nimport Game from \"../Game/Game\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport \"prevent-pull-refresh\";\nimport \"./App.css\";\n\nfunction App() {\n  const { height } = useWindowSize();\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ height: height }}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/room\">\n            <Room />\n          </Route>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nlet root = document.getElementById(\"root\");\n// root.style.height = window.innerHeight;\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}