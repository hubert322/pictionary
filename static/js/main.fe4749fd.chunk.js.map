{"version":3,"sources":["utils/const.js","utils/socket.js","components/Home/HomeApiSocket.js","utils/hooks.js","components/Panel/Panel.js","components/TextField/TextField.js","components/Home/Footer/Footer.js","components/Home/Home.js","components/Room/Room.js","components/Room/RoomApiSocket.js","components/Game/PlayersList/PlayersList.js","components/Game/Canvas/Canvas.js","components/Game/Canvas/CanvasApiSocket.js","components/ChatRoom/ChatRoom.js","components/ChatRoom/ChatRoomApiSocket.js","components/Game/Overlay/Overlay.js","components/Game/Overlay/OverlayApiSocket.js","components/Game/Game.js","components/Game/GameApiSocket.js","components/App/App.js","serviceWorker.js","index.js"],"names":["serverBaseUrl","mediumDeviceMinWidth","socket","io","transports","sendJoinGame","gameCode","pid","playerName","history","toLowerCase","emit","on","data","off","onJoinRoomAnnouncement","alert","_callee","response","_response","regenerator_default","a","wrap","_context","prev","next","localStorage","getItem","axios","post","sent","console","log","abrupt","t0","setItem","t1","stop","push","concat","useWindowSize","_useState3","useState","width","window","innerWidth","height","innerHeight","_useState4","Object","slicedToArray","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","Panel","forwardRef","props","ref","children","className","customRef","react_default","createElement","displayName","defaultProps","useStyles","makeStyles","textField","margin","& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","borderColor","&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root","color","& label","& label.Mui-focused","TextField","classes","label","variant","value","onChange","error","inputRef","onKeyDown","Footer","href","target","rel","esm","Provider","index_esm","Home","_useState","_useState2","setGameCode","_useLocalStorage","key","defaultValue","setValue","useEffect","useLocalStorage","_useLocalStorage2","setPlayerName","playerNameLabel","setPlayerNameLabel","_useState5","_useState6","hasPlayerNameError","setHasPlayerNameError","_useState7","_useState8","gameCodeLabel","setGameCodeLabel","_useState9","_useState10","hasGameCodeError","setHasGameCodeError","_useState11","_useState12","setPid","useHistory","_getPid","apply","this","arguments","getPid","then","pidValue","react_router_dom","to","components_Panel_Panel","components_TextField_TextField","e","type","onClick","sendNewGame","Home_Footer_Footer","formControl","& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline","& .Mui-disabled","cursor","& .MuiOutlinedInput-root.Mui-disabled","& label.Mui-disabled","& option","& .MuiSelect-icon","fill","& .MuiSelect-icon.Mui-disabled","Room","state","useLocation","players","setPlayers","ownerPid","setOwnerPid","rounds","setRounds","drawTime","setDrawTime","parseInt","slice","map","player","_id","md_index_esm","FormControl","disabled","InputLabel","htmlFor","Select","native","inputProps","id","length","sendPlayGame","PlayerList","artistPid","guessedCorrectPids","rankings","_ref","index","score","style","backgroundColor","hasOwnProperty","Canvas","artist","selectedWord","currRound","timer","setColor","brushStyle","setBrushStyle","canvas","useRef","isMouseDragging","prevX","prevY","paths","mouseDown","isTouch","undefined","current","document","body","userSelect","getSelection","removeAllRanges","i","draw","mouseMove","mouseUp","isMouseMove","touchIndex","_getMousePos","windowX","windowY","rect","getBoundingClientRect","touches","clientX","clientY","currX","left","right","currY","top","bottom","getMousePos","line","newColor","drawLine","sendDrawLine","dot","x","y","drawDot","sendDrawDot","drawFill","sendDrawFill","addPath","ctx","getContext","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","points","fillStyle","fillRect","isInRange","isEmpty","imageData","r","g","b","baseIndex","Math","floor","_canvas$current$getBo","getImageData","_getInitialColor","getInitialColor","_getInitialColor2","dirs","visited","stack","_stack$pop","pop","_stack$pop2","_i","_dirs","_ref3","_ref2","newX","newY","clearCanvas","clearPath","clearRect","_paths$current$i","j","undoCanvas","word","underlinedWord","getUnderlinedWord","onTouchStart","preventDefault","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","onMouseLeave","tmpColor","gi_index_esm","sendUndoCanvas","io_index_esm","sendClearCanvas","& input","padding","transform","ChatRoom","addGuessedCorrectPid","message","setMessage","messages","setMessages","messageArea","messageTextField","addMessage","status","newMessage","toConsumableArray","scrollTop","scrollHeight","onSendMessage","sendMessage","focus","useImperativeHandle","keyCode","messageTextFieldOnKey","Overlay","words","endTurnData","endGameData","onBackRoom","getWords","Fragment","sendSelectedWord","earnedScore","Game","setArtist","isDrawing","setIsDrawing","setWords","setTimer","Array","setRankings","_useState13","_useState14","setEndTurnData","_useState15","_useState16","setGuessedCorrectPids","_useState17","_useState18","setEndGameData","_useState19","_useState20","setSelectedWord","_useState21","_useState22","setCurrRound","chatRoomRef","sendEnterGame","time","Game_Canvas_Canvas","Game_Overlay_Overlay","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","getPlayerName","PlayersList_PlayersList","components_ChatRoom_ChatRoom","App","react_router","exact","path","components_Home_Home","components_Room_Room","components_Game_Game","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","root","getElementById","ReactDOM","render","components_App_App","URL","process","origin","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fe4749fd.chunk.js","sourcesContent":["export const serverBaseUrl =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://192.168.0.4:5000\"\n    : \"https://pictionary-live.herokuapp.com/\";\n\nexport const mediumDeviceMinWidth = 768;\n","import io from \"socket.io-client\";\nimport { serverBaseUrl } from \"./const\";\n\nexport const socket = io(serverBaseUrl, { transports: [\"websocket\"] });\n","import axios from \"axios\";\nimport { socket } from \"../../utils/socket\";\nimport { serverBaseUrl } from \"../../utils/const\";\n\nexport function sendJoinGame(gameCode, pid, playerName, history) {\n  gameCode = gameCode.toLowerCase();\n  socket.emit(\"send_join_room\", {\n    gameCode: gameCode,\n    pid: pid,\n    playerName: playerName\n  });\n\n  socket.on(\"join_room_success\", data => {\n    socket.off(\"join_room_success\");\n    onJoinRoomAnnouncement(gameCode, pid, history);\n  });\n\n  socket.on(\"join_room_error\", data => {\n    socket.off(\"join_room_error\");\n    alert(\"join room error\");\n  });\n}\n\nexport function sendNewGame(pid, playerName, history) {\n  socket.emit(\"send_new_room\", {\n    pid: pid,\n    playerName: playerName\n  });\n\n  socket.on(\"new_room_success\", data => {\n    socket.off(\"new_room_success\");\n    onJoinRoomAnnouncement(data.gameCode, pid, history);\n  });\n\n  socket.on(\"new_room_error\", data => {\n    alert(\"new room error\");\n    console.log(data);\n    socket.off(\"new_room_error\");\n  });\n}\n\nexport async function getPid() {\n  let pid = localStorage.getItem(\"pid\");\n  if (pid != null) {\n    try {\n      let data = {\n        pid: pid\n      };\n      let response = await axios.post(\n        serverBaseUrl + \"/api/player/isValid\",\n        data\n      );\n      console.log(response.data);\n      if (response.data[\"isValid\"]) {\n        return pid;\n      }\n    } catch (e) {\n      alert(\"Error checking pid. Please reload the page.\");\n      console.log(e.response);\n      return null;\n    }\n  }\n  try {\n    let response = await axios.post(serverBaseUrl + \"/api/player/new\");\n    console.log(response.data);\n    pid = response.data[\"pid\"];\n    localStorage.setItem(\"pid\", pid);\n    return pid;\n  } catch (e) {\n    alert(\"Failed to get pid. Please reload the page.\");\n    console.log(e.response);\n    return null;\n  }\n}\n\nfunction onJoinRoomAnnouncement(gameCode, pid, history) {\n  socket.on(\"join_room_announcement\", data => {\n    socket.off(\"join_room_announcement\");\n    data.gameCode = gameCode;\n    data.pid = pid;\n    history.push(`/room?gameCode=${gameCode}`, data);\n  });\n}\n","import { useState, useEffect, useLayoutEffect } from \"react\";\n\nexport function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = useState(localStorage.getItem(key) || defaultValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value]);\n\n  return [value, setValue];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", updateSize);\n    return () => {\n      window.removeEventListener(\"resize\", updateSize);\n    };\n  }, []);\n\n  return size;\n}\n","import React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Panel.css\";\n\nconst Panel = forwardRef((props, ref) => {\n  const { children, className, customRef } = props;\n  return (\n    <div className={`Panel ${className}`} ref={customRef}>\n      {children}\n    </div>\n  );\n});\n\nPanel.displayName = \"Panel\";\n\nPanel.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  className: PropTypes.string,\n  customRef: PropTypes.func\n};\n\nPanel.defaultProps = {\n  children: [],\n  className: \"\",\n  customRef: null\n};\n\nexport default Panel;\n","import React from \"react\";\nimport MaterialTextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes, { object } from \"prop-types\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    }\n  }\n});\n\nfunction TextField(props) {\n  const classes = useStyles();\n  const {\n    label,\n    variant,\n    value,\n    onChange,\n    error,\n    inputRef,\n    onKeyDown,\n    className\n  } = props;\n\n  return (\n    <MaterialTextField\n      label={label}\n      variant={variant}\n      value={value}\n      onChange={onChange}\n      error={error}\n      inputRef={inputRef}\n      onKeyDown={onKeyDown}\n      className={`${classes.textField} ${className}`}\n    />\n  );\n}\n\nTextField.propTypes = {\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.bool,\n  inputRef: PropTypes.objectOf(object),\n  onKeyDown: PropTypes.func,\n  className: PropTypes.string\n};\n\nTextField.defaultProps = {\n  label: null,\n  variant: \"standard\",\n  value: null,\n  onChange: null,\n  error: null,\n  inputRef: null,\n  onKeyDown: null,\n  className: \"\"\n};\n\nexport default TextField;\n","import React from \"react\";\nimport { IconContext } from \"react-icons\";\nimport { FaGithub } from \"react-icons/fa\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n      <p className=\"FooterText\">\n        Created by{\" \"}\n        <a\n          className=\"FooterLink\"\n          href=\"https://huberthung.me\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Hubert Hung\n        </a>\n      </p>\n      <a\n        className=\"FooterLink\"\n        href=\"https://github.com/hubert322/pictionary\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconContext.Provider value={{ size: \"2.2rem\" }}>\n          <FaGithub />\n        </IconContext.Provider>\n      </a>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { sendJoinGame, sendNewGame, getPid } from \"./HomeApiSocket\";\nimport { useLocalStorage } from \"../../utils/hooks\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\nimport Footer from \"./Footer/Footer\";\nimport \"../App/App.css\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const [gameCode, setGameCode] = useState(\"\");\n  const [playerName, setPlayerName] = useLocalStorage(\"playerName\", \"\");\n  const [playerNameLabel, setPlayerNameLabel] = useState(\"Name\");\n  const [hasPlayerNameError, setHasPlayerNameError] = useState(false);\n  const [gameCodeLabel, setGameCodeLabel] = useState(\"Game Code\");\n  const [hasGameCodeError, setHasGameCodeError] = useState(false);\n  const [pid, setPid] = useState(null);\n  let history = useHistory();\n\n  function onJoinGame() {\n    if (gameCode === \"\" || playerName === \"\") {\n      if (gameCode === \"\") {\n        setHasGameCodeError(true);\n        setGameCodeLabel(\"Game Code required\");\n      }\n      if (playerName === \"\") {\n        setHasPlayerNameError(true);\n        setPlayerNameLabel(\"Name required\");\n      }\n    } else if (typeof pid !== \"string\") {\n      console.log(\"Waiting for promise to resolve...\");\n    } else {\n      sendJoinGame(gameCode, pid, playerName, history);\n    }\n  }\n\n  function onNewGame() {\n    if (playerName === \"\") {\n      setHasPlayerNameError(true);\n      setPlayerNameLabel(\"Name required\");\n    } else if (typeof pid !== \"string\") {\n      console.log(\"Waiting for promise to resolve...\");\n    } else {\n      sendNewGame(pid, playerName, history);\n    }\n  }\n\n  useEffect(() => {\n    getPid().then(pidValue => {\n      setPid(pidValue);\n    });\n  }, []);\n\n  return (\n    <div className=\"Home\">\n      <Link to=\"/\" className=\"HomeTitle\">\n        Pictionary Live\n      </Link>\n      {pid !== null ? (\n        <Panel className=\"HomeMainContainer\">\n          <TextField\n            label={playerNameLabel}\n            variant=\"outlined\"\n            value={playerName}\n            onChange={e => setPlayerName(e.target.value)}\n            error={hasPlayerNameError}\n          />\n          <div className=\"HomeJoinGameContainer\">\n            <TextField\n              label={gameCodeLabel}\n              variant=\"outlined\"\n              className=\"HomeJoinGameTextField\"\n              value={gameCode}\n              onChange={e => setGameCode(e.target.value)}\n              error={hasGameCodeError}\n            />\n            <button\n              type=\"button\"\n              className=\"Button HomeJoinGameButton\"\n              onClick={onJoinGame}\n            >\n              Join Game\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            className=\"Button HomeNewGameButton\"\n            onClick={onNewGame}\n          >\n            New Game\n          </button>\n        </Panel>\n      ) : (\n        <p>Loading...</p>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Select, InputLabel, FormControl } from \"@material-ui/core\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown } from \"react-icons/fa\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport { socket } from \"../../utils/socket\";\nimport { mediumDeviceMinWidth } from \"../../utils/const\";\nimport { sendPlayGame } from \"./RoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport \"../App/App.css\";\nimport \"./Room.css\";\n\nconst useStyles = makeStyles({\n  formControl: {\n    margin: \"0px 7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& .Mui-disabled\": {\n      cursor: \"not-allowed\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    },\n    \"& label.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    },\n    \"& option\": {\n      color: \"black\"\n    },\n    \"& .MuiSelect-icon\": {\n      fill: \"white\"\n    },\n    \"& .MuiSelect-icon.Mui-disabled\": {\n      fill: \"rgba(255, 255, 255, 0.26)\"\n    }\n  }\n});\n\nfunction Room() {\n  const classes = useStyles();\n  const state = useLocation().state;\n  const { gameCode, pid } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [ownerPid, setOwnerPid] = useState(state.ownerPid);\n  // const { gameCode } = state;\n  // const pid = 0;\n  // const [ownerPid, setOwnerPid] = useState(1);\n  // const [players, setPlayers] = useState(() => {\n  //   let tmp = [];\n  //   for (let i = 0; i < 8; ++i) {\n  //     tmp.push({\n  //       _id: i,\n  //       playerName: `Hurgurto${i}`\n  //     });\n  //   }\n\n  //   return tmp;\n  // });\n  const [rounds, setRounds] = useState(3);\n  const [drawTime, setDrawTime] = useState(\"60s\");\n  const { width } = useWindowSize();\n  const history = useHistory();\n\n  useEffect(() => {\n    socket.on(\"join_room_announcement\", data => {\n      setPlayers(data.players);\n      setOwnerPid(ownerPid);\n    });\n\n    return () => {\n      socket.off(\"join_room_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"play_game_announcement\", () => {\n      history.push(`/game?gameCode=${gameCode}`, {\n        gameCode: gameCode,\n        pid: pid,\n        players: players,\n        ownerPid: ownerPid,\n        drawTime: parseInt(drawTime.slice(0, -1))\n      });\n    });\n\n    return () => {\n      socket.off(\"play_game_announcement\");\n    };\n  }, [gameCode, pid, players, history]);\n\n  useEffect(() => {\n    socket.on(\"disconnect_announcement\", data => {\n      console.log(data);\n      setPlayers(data.players);\n    });\n\n    return () => {\n      socket.off(\"disconnect_announcement\");\n    };\n  }, []);\n\n  return (\n    <div className=\"Room\">\n      <Link to=\"/\" className=\"RoomTitleLink\">\n        Pictionary Live\n      </Link>\n      <h2 className=\"RoomGameCode\">Game Code: {gameCode}</h2>\n      <div className=\"RoomMainContainer\">\n        <Panel className=\"RoomPlayersContainer\">\n          <h3 className=\"RoomContainerTitle\">Players</h3>\n          <div className=\"RoomPlayersList\">\n            {players.map(player => (\n              <div className=\"RoomPlayer\" key={player._id}>\n                <IconContext.Provider\n                  value={{\n                    size: width >= mediumDeviceMinWidth ? \"3rem\" : \"2rem\"\n                  }}\n                >\n                  {player._id === ownerPid ? <FaCrown /> : <MdPerson />}\n                </IconContext.Provider>\n                <span className=\"RoomPlayerName\">{player.playerName}</span>\n                <span className=\"RoomPlayerTag\">\n                  {player._id === pid ? \"You\" : \" \"}\n                </span>\n              </div>\n            ))}\n          </div>\n        </Panel>\n        <Panel className=\"RoomGameControlsContainer\">\n          <h3 className=\"RoomContainerTitle\">Settings</h3>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Rounds</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={rounds}\n              onChange={e => setRounds(e.target.value)}\n              inputProps={{ id: \"roundsSelector\" }}\n            >\n              <option>3</option>\n              <option>5</option>\n              <option>10</option>\n            </Select>\n          </FormControl>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Draw Time</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={drawTime}\n              onChange={e => setDrawTime(e.target.value)}\n              inputProps={{ id: \"drawTime\" }}\n            >\n              <option>30s</option>\n              <option>60s</option>\n              <option>90s</option>\n            </Select>\n          </FormControl>\n          <button\n            type=\"button\"\n            className=\"Button RoomPlayButton\"\n            onClick={() => {\n              if (players.length > 1) {\n                sendPlayGame(gameCode, rounds, drawTime);\n              }\n            }}\n            disabled={pid !== ownerPid || players.length <= 1}\n          >\n            Play\n          </button>\n        </Panel>\n      </div>\n    </div>\n  );\n}\n\nexport default Room;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendPlayGame(gameCode, rounds, drawTime) {\n  drawTime = parseInt(drawTime.slice(0, -1));\n  socket.emit(\"send_play_game\", {\n    gameCode: gameCode,\n    rounds: rounds,\n    drawTime: drawTime\n  });\n}\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown, FaPaintBrush } from \"react-icons/fa\";\nimport { useWindowSize } from \"../../../utils/hooks\";\nimport { mediumDeviceMinWidth } from \"../../../utils/const\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./PlayersList.css\";\n\nfunction PlayerList(props) {\n  const {\n    players,\n    pid,\n    ownerPid,\n    artistPid,\n    guessedCorrectPids,\n    rankings\n  } = props;\n  const { width } = useWindowSize();\n\n  // let debugPlayers = [];\n  // for (let i = 0; i < 8; ++i) {\n  //   debugPlayers.push({\n  //     _id: i,\n  //     playerName: `Hurgurto${i}`,\n  //     score: 3000\n  //   });\n  // }\n\n  return (\n    <Panel className=\"PlayersList\">\n      {players.map(({ playerName, _id, score }, index) => (\n        <div\n          className=\"PlayersListPlayer\"\n          key={_id}\n          style={{\n            backgroundColor: guessedCorrectPids.hasOwnProperty(_id)\n              ? \"rgb(35, 231, 17)\"\n              : \"transparent\"\n          }}\n        >\n          <div className=\"PlayersListPlayerRankingIcon\">\n            <span className=\"PlayersListRanking\">#{rankings[index]}</span>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.8rem\" : \"1.5rem\"\n              }}\n            >\n              {_id === ownerPid ? <FaCrown /> : <MdPerson />}\n            </IconContext.Provider>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.5rem\" : \"1.2rem\"\n              }}\n            >\n              {_id === artistPid ? <FaPaintBrush /> : null}\n            </IconContext.Provider>\n          </div>\n          <span className=\"PlayersListPlayerName\">\n            {playerName}\n            {pid === _id ? \" (You)\" : null}: {score ? score : 0}\n          </span>\n        </div>\n      ))}\n    </Panel>\n  );\n}\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pid: PropTypes.string.isRequired,\n  ownerPid: PropTypes.string.isRequired,\n  artistPid: PropTypes.string,\n  guessedCorrectPids: PropTypes.objectOf(PropTypes.bool).isRequired,\n  rankings: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nPlayerList.defaultProps = {\n  artistPid: null\n};\n\nexport default PlayerList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { IoMdUndo } from \"react-icons/io\";\nimport { FaTrash, FaPaintBrush, FaCheck } from \"react-icons/fa\";\nimport { GiPaintBucket } from \"react-icons/gi\";\nimport { socket } from \"../../../utils/socket\";\nimport {\n  sendDrawLine,\n  sendDrawDot,\n  sendDrawFill,\n  sendUndoCanvas,\n  sendClearCanvas\n} from \"./CanvasApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"../../App/App.css\";\nimport \"./Canvas.css\";\n\nfunction Canvas(props) {\n  const { gameCode, pid, artist, selectedWord, currRound, timer } = props;\n  const [color, setColor] = useState(\"#000000\");\n  const [brushStyle, setBrushStyle] = useState(\"brush\");\n  const canvas = useRef(null);\n  let isMouseDragging = useRef(false);\n  let prevX = useRef(null);\n  let prevY = useRef(null);\n  const paths = useRef([]);\n  const colors = [\n    \"#000000\",\n    \"#FFFFFF\",\n    \"#808080\",\n    \"#C0C0C0\",\n    \"#FF0000\",\n    \"#FF7F00\",\n    \"#FFFF00\",\n    \"#00FF00\",\n    \"#00FFFF\",\n    \"#0000FF\",\n    \"#7F00FF\",\n    \"#FF00FF\"\n  ];\n  const controlsIconSize = \"5vmin\";\n\n  function touchStart(e) {\n    e.preventDefault();\n    mouseDown(e, true);\n  }\n\n  function mouseDown(e, isTouch = false) {\n    if (artist === null || pid !== artist._id) {\n      return;\n    }\n    isMouseDragging.current = true;\n    document.body.style.userSelect = \"none\";\n    window.getSelection().removeAllRanges();\n    if (isTouch) {\n      for (let i = 0; i < 1; ++i) {\n        draw(e, false, i);\n      }\n    } else {\n      draw(e, false, -1);\n    }\n  }\n\n  function touchMove(e) {\n    e.preventDefault();\n    mouseMove(e, true);\n  }\n\n  function mouseMove(e, isTouch = false) {\n    if (artist === null || pid !== artist._id || brushStyle === \"bucket\") {\n      return;\n    }\n    if (isMouseDragging.current) {\n      if (isTouch) {\n        for (let i = 0; i < 1; ++i) {\n          draw(e, true, i);\n        }\n      } else {\n        draw(e, true, -1);\n      }\n    }\n  }\n\n  function touchEnd(e) {\n    e.preventDefault();\n    mouseUp();\n  }\n\n  function mouseUp() {\n    if (artist === null || pid !== artist._id) {\n      return;\n    }\n    document.body.style.userSelect = \"auto\";\n    isMouseDragging.current = false;\n  }\n\n  function mouseLeave() {\n    prevX.current = null;\n    prevY.current = null;\n  }\n\n  function draw(e, isMouseMove, touchIndex) {\n    const { currX, currY } = getMousePos(e, touchIndex);\n    if (brushStyle === \"brush\") {\n      if (isMouseMove && prevX.current !== null && prevY.current !== null) {\n        const line = {\n          prevX: prevX.current,\n          prevY: prevY.current,\n          currX: currX,\n          currY: currY,\n          newColor: color\n        };\n        drawLine(line, true);\n        sendDrawLine(gameCode, line);\n      } else {\n        const dot = {\n          x: currX,\n          y: currY,\n          newColor: color\n        };\n        drawDot(dot, true);\n        sendDrawDot(gameCode, dot);\n      }\n      prevX.current = currX;\n      prevY.current = currY;\n    } else {\n      const fill = {\n        x: currX,\n        y: currY,\n        newColor: color\n      };\n      drawFill(fill, true);\n      sendDrawFill(gameCode, fill);\n    }\n  }\n\n  function getMousePos(e, touchIndex) {\n    const rect = canvas.current.getBoundingClientRect();\n    let windowX, windowY;\n    if (touchIndex !== -1) {\n      windowX = e.touches[touchIndex].clientX;\n      windowY = e.touches[touchIndex].clientY;\n    } else {\n      windowX = e.clientX;\n      windowY = e.clientY;\n    }\n    return {\n      currX:\n        ((windowX - rect.left) / (rect.right - rect.left)) *\n        canvas.current.width,\n      currY:\n        ((windowY - rect.top) / (rect.bottom - rect.top)) *\n        canvas.current.height\n    };\n  }\n\n  function drawLine(line, addPath) {\n    const { prevX, prevY, currX, currY, newColor } = line;\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.strokeStyle = newColor;\n    ctx.lineWidth = 2;\n    ctx.moveTo(prevX, prevY);\n    ctx.lineTo(currX, currY);\n    ctx.stroke();\n    ctx.closePath();\n    if (addPath) {\n      paths.current[paths.current.length - 1].points.push({\n        x: currX,\n        y: currY\n      });\n    }\n  }\n\n  function drawDot(dot, addPath) {\n    const { x, y, newColor } = dot;\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.fillStyle = newColor;\n    ctx.fillRect(x, y, 2, 2);\n    ctx.closePath();\n    if (addPath) {\n      paths.current.push({\n        points: [],\n        newColor: newColor,\n        brushStyle: \"brush\"\n      });\n      paths.current[paths.current.length - 1].points.push({ x: x, y: y });\n    }\n  }\n\n  function drawFill(fill, addPath) {\n    function getInitialColor(x, y, imageData) {\n      const baseIndex = (y * width + x) * 4;\n      const redOffset = 0;\n      const greenOffset = 1;\n      const blueOffset = 2;\n      const alphaOffset = 3;\n      return [\n        imageData.data[baseIndex + redOffset],\n        imageData.data[baseIndex + greenOffset],\n        imageData.data[baseIndex + blueOffset],\n        imageData.data[baseIndex + alphaOffset]\n      ];\n    }\n\n    function isInRange(x, y, width, height) {\n      return 0 <= x && x < width && 0 <= y && y < height;\n    }\n\n    function isEmpty(x, y, width, imageData, r, g, b, a) {\n      // 4 is used since each cell has rgba\n      const baseIndex = (y * width + x) * 4;\n      const redOffset = 0;\n      const greenOffset = 1;\n      const blueOffset = 2;\n      const alphaOffset = 3;\n      return (\n        imageData.data[baseIndex + redOffset] === r &&\n        imageData.data[baseIndex + greenOffset] === g &&\n        imageData.data[baseIndex + blueOffset] === b &&\n        imageData.data[baseIndex + alphaOffset] === a\n      );\n    }\n\n    let { x, y, newColor } = fill;\n    x = Math.floor(x);\n    y = Math.floor(y);\n    const ctx = canvas.current.getContext(\"2d\");\n    let { width, height } = canvas.current.getBoundingClientRect();\n    width = Math.floor(width);\n    height = Math.floor(height);\n\n    if (!isInRange(x, y, width, height)) {\n      return;\n    }\n\n    const imageData = ctx.getImageData(0, 0, width, height);\n    const [r, g, b, a] = getInitialColor(x, y, imageData);\n\n    const dirs = [\n      [0, -1],\n      [1, -1],\n      [1, 0],\n      [1, 1],\n      [0, 1],\n      [-1, 1],\n      [-1, 0],\n      [-1, -1]\n    ];\n    const visited = {};\n    visited[`${x}+${y}`] = 1;\n    let stack = [[x, y]];\n    ctx.beginPath();\n    ctx.fillStyle = newColor;\n    ctx.fillRect(x, y, 1, 1);\n\n    while (stack.length) {\n      const [x, y] = stack.pop();\n      for (const [dx, dy] of dirs) {\n        const newX = x + dx;\n        const newY = y + dy;\n        if (\n          isInRange(newX, newY, width, height) &&\n          isEmpty(newX, newY, width, imageData, r, g, b, a) &&\n          !visited.hasOwnProperty(`${newX}+${newY}`)\n        ) {\n          ctx.fillRect(newX, newY, 1, 1);\n          stack.push([newX, newY]);\n          visited[`${newX}+${newY}`] = 1;\n        }\n      }\n    }\n    ctx.closePath();\n\n    if (addPath) {\n      paths.current.push({\n        points: [],\n        newColor: newColor,\n        brushStyle: \"bucket\"\n      });\n      paths.current[paths.current.length - 1].points.push({ x: x, y: y });\n    }\n  }\n\n  function undoCanvas() {\n    if (paths.current.length) {\n      clearCanvas(false);\n      paths.current.pop();\n      for (let i = 0; i < paths.current.length; ++i) {\n        const { points, newColor, brushStyle } = paths.current[i];\n        if (brushStyle === \"brush\") {\n          const dot = {\n            x: points[0].x,\n            y: points[0].y,\n            newColor: newColor\n          };\n          drawDot(dot, false);\n          for (let j = 1; j < points.length; ++j) {\n            const line = {\n              prevX: points[j - 1].x,\n              prevY: points[j - 1].y,\n              currX: points[j].x,\n              currY: points[j].y\n            };\n            drawLine(line, false);\n          }\n        } else {\n          const fill = {\n            x: points[0].x,\n            y: points[0].y,\n            newColor: newColor\n          };\n          drawFill(fill, false);\n        }\n      }\n    }\n  }\n\n  function clearCanvas(clearPath) {\n    if (paths.current.length) {\n      const ctx = canvas.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n      if (clearPath) {\n        paths.current = [];\n      }\n    }\n  }\n\n  function getUnderlinedWord(word) {\n    let underlinedWord = \"\";\n    for (let i = 0; i < word.length; ++i) {\n      if (word[i] === \" \") {\n        underlinedWord += \"  \";\n      } else {\n        underlinedWord += \"__\";\n      }\n      if (i + 1 !== word.length) {\n        underlinedWord += \"  \";\n      }\n    }\n    return underlinedWord;\n  }\n\n  useEffect(() => {\n    socket.on(\"draw_line_announcement\", data => {\n      if (canvas.current !== null) {\n        drawLine(data.line, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_line_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_dot_announcement\", data => {\n      if (canvas.current !== null) {\n        drawDot(data.dot, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_dot_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_fill_announcement\", data => {\n      if (canvas.current !== null) {\n        drawFill(data.fill, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_fill_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"undo_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        undoCanvas();\n      }\n    });\n\n    return () => {\n      socket.off(\"undo_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"clear_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        clearCanvas(true);\n      }\n    });\n\n    return () => {\n      socket.off(\"clear_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (selectedWord === null) {\n      clearCanvas(true);\n    }\n  }, [artist]);\n\n  return (\n    <Panel className=\"CanvasContainer\">\n      <div className=\"CanvasHeader\">\n        <span className=\"CanvasCurrRound\">Round: {currRound}</span>\n        <span className=\"CanvasUnderlinedWord\">\n          Word:{\" \"}\n          {artist !== null && pid !== artist._id && selectedWord !== null\n            ? getUnderlinedWord(selectedWord)\n            : selectedWord}\n        </span>\n        <span className=\"CanvasTimer\">Timer: {timer}s</span>\n      </div>\n      <canvas\n        className=\"Canvas\"\n        ref={canvas}\n        onTouchStart={touchStart}\n        onMouseDown={mouseDown}\n        onTouchMove={touchMove}\n        onMouseMove={mouseMove}\n        onTouchEnd={touchEnd}\n        onMouseUp={mouseUp}\n        onMouseLeave={mouseLeave}\n      />\n      <div className=\"CanvasDummy\" />\n      <div className=\"CanvasControlsContainer\">\n        <div className=\"CanvasColorsContainer\">\n          {colors.map(tmpColor => (\n            <button\n              key={tmpColor}\n              type=\"button\"\n              style={{\n                backgroundColor: tmpColor,\n                color:\n                  artist !== null && pid === artist._id && color === tmpColor\n                    ? tmpColor !== \"#FFFFFF\"\n                      ? \"white\"\n                      : \"black\"\n                    : tmpColor\n              }}\n              className=\"Button CanvasControl CanvasColorControl\"\n              disabled={artist !== null && pid !== artist._id}\n              onClick={() => {\n                setColor(tmpColor);\n              }}\n            >\n              <IconContext.Provider\n                value={{\n                  size: \"2.5vmin\"\n                }}\n              >\n                <FaCheck />\n              </IconContext.Provider>\n            </button>\n          ))}\n        </div>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          style={{\n            backgroundColor:\n              artist !== null && pid === artist._id && brushStyle === \"brush\"\n                ? \"#f64f59\"\n                : \"#ffffff\"\n          }}\n          onClick={() => setBrushStyle(\"brush\")}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <FaPaintBrush />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          style={{\n            backgroundColor:\n              artist !== null && pid === artist._id && brushStyle === \"bucket\"\n                ? \"#f64f59\"\n                : \"#ffffff\"\n          }}\n          onClick={() => setBrushStyle(\"bucket\")}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <GiPaintBucket />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendUndoCanvas(gameCode);\n            }\n          }}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <IoMdUndo />\n          </IconContext.Provider>\n        </button>\n        <button\n          type=\"button\"\n          className=\"Button CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendClearCanvas(gameCode);\n            }\n          }}\n        >\n          <IconContext.Provider\n            value={{\n              size: controlsIconSize\n            }}\n          >\n            <FaTrash />\n          </IconContext.Provider>\n        </button>\n        {artist === null || pid !== artist._id ? (\n          <div className=\"CanvasControlsOverlay\" />\n        ) : null}\n      </div>\n    </Panel>\n  );\n}\n\nCanvas.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  selectedWord: PropTypes.string,\n  currRound: PropTypes.number.isRequired,\n  timer: PropTypes.number.isRequired\n};\n\nCanvas.defaultProps = {\n  artist: null,\n  selectedWord: \"\"\n};\n\nexport default Canvas;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendDrawLine(gameCode, line) {\n  socket.emit(\"send_draw_line\", {\n    gameCode: gameCode,\n    line: line\n  });\n}\n\nexport function sendDrawDot(gameCode, dot) {\n  socket.emit(\"send_draw_dot\", {\n    gameCode: gameCode,\n    dot: dot\n  });\n}\n\nexport function sendDrawFill(gameCode, fill) {\n  socket.emit(\"send_draw_fill\", {\n    gameCode: gameCode,\n    fill: fill\n  });\n}\n\nexport function sendUndoCanvas(gameCode) {\n  socket.emit(\"send_undo_canvas\", {\n    gameCode: gameCode\n  });\n}\n\nexport function sendClearCanvas(gameCode) {\n  socket.emit(\"send_clear_canvas\", {\n    gameCode: gameCode\n  });\n}\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  forwardRef,\n  useImperativeHandle\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { socket } from \"../../utils/socket\";\nimport { sendMessage } from \"./ChatRoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\nimport \"./ChatRoom.css\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"5px 0px\",\n    \"& .MuiOutlinedInput-root\": {\n      color: \"black\"\n    },\n    \"& input\": {\n      padding: \"7px\"\n    },\n    \"& label\": {\n      color: \"black\",\n      transform: \"translate(14px, 7px) scale(1)\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"black\"\n    }\n  }\n});\n\nconst ChatRoom = forwardRef((props, ref) => {\n  const classes = useStyles();\n  const { gameCode, pid, addGuessedCorrectPid } = props;\n  const [message, setMessage] = useState(\"\");\n  // const [isFirstTime, setIsFirstTime] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const messageArea = useRef(null);\n  const messageTextField = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    addMessage: addMessage\n  }));\n\n  function addMessage(message, status) {\n    let newMessage = {\n      message: message,\n      status: status\n    };\n    setMessages(messages => [...messages, newMessage]);\n    scroll();\n  }\n\n  function scroll() {\n    messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // if (isFirstTime) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    //   setIsFirstTime(false);\n    // } else if (\n    //   messageArea.current.scrollTop + messageArea.current.clientHeight ===\n    //   messageArea.current.scrollHeight\n    // ) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // }\n  }\n\n  useEffect(() => {\n    socket.on(\"send_message_announcement\", data => {\n      let message = `${data.player.playerName}: ${data.message}`;\n      let status = \"\";\n      addMessage(message, status);\n    });\n\n    return () => {\n      socket.off(\"send_message_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"correct_word_announcement\", data => {\n      let message = `${data.player.playerName} has guessed the word!`;\n      let status = \"Correct\";\n      addMessage(message, status);\n      addGuessedCorrectPid(data.player._id);\n    });\n\n    return () => {\n      socket.off(\"correct_word_announcement\");\n    };\n  }, [addGuessedCorrectPid]);\n\n  function onSendMessage() {\n    sendMessage(gameCode, pid, message);\n    setMessage(\"\");\n    messageTextField.current.focus();\n  }\n\n  function messageTextFieldOnKey(e) {\n    const ENTER_KEY_CODE = 13;\n    if (e.keyCode === ENTER_KEY_CODE && message !== \"\") {\n      onSendMessage();\n    }\n  }\n\n  return (\n    <Panel className=\"ChatRoom\" ref={ref}>\n      <div className=\"ChatRoomMessageArea\" ref={messageArea}>\n        {messages.map((message, index) => (\n          <p\n            // eslint-disable-next-line react/no-array-index-key\n            key={`msg${index}`}\n            className={`ChatRoomMessage ChatRoomMessage${message.status}`}\n          >\n            {message.message}\n          </p>\n        ))}\n      </div>\n      <TextField\n        className={`${classes.textField} ChatRoomTextField`}\n        label=\"message\"\n        variant=\"outlined\"\n        value={message}\n        onChange={e => setMessage(e.target.value)}\n        inputRef={messageTextField}\n        onKeyDown={e => messageTextFieldOnKey(e)}\n      />\n    </Panel>\n  );\n});\n\nChatRoom.displayName = \"ChatRoom\";\n\nChatRoom.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  addGuessedCorrectPid: PropTypes.func.isRequired\n};\n\nexport default ChatRoom;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendMessage(gameCode, pid, message) {\n  socket.emit(\"send_message\", {\n    gameCode: gameCode,\n    pid: pid,\n    message: message\n  });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sendSelectedWord } from \"./OverlayApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"../../App/App.css\";\nimport \"./Overlay.css\";\n\nfunction Overlay(props) {\n  const {\n    gameCode,\n    pid,\n    artist,\n    words,\n    endTurnData,\n    endGameData,\n    onBackRoom\n  } = props;\n\n  function getResults() {\n    // let results = {\n    //   players: []\n    // };\n    // for (let i = 0; i < 8; ++i) {\n    //   results.players.push({\n    //     _id: i,\n    //     playerName: `Hurgurto${i}`,\n    //     score: 3000\n    //   });\n    // }\n    return (\n      <div className=\"OverlayEndTurnResultsContainer\">\n        {endGameData.players.map((player, index) => (\n          <p key={player._id} className=\"OverlayEndTurnResultsText\">\n            #{endGameData.rankings[index]} {player.playerName}: {player.score}\n          </p>\n        ))}\n        <button\n          type=\"button\"\n          className=\"Button OverlayEndTurnResultsButton\"\n          onClick={onBackRoom}\n        >\n          Back to Room\n        </button>\n      </div>\n    );\n  }\n\n  function getEndTurn() {\n    // let selectedWord = \"Hello\";\n    // let endTurnData = {\n    //   players: [],\n    //   isEndGame: false\n    // };\n    // for (let i = 0; i < 8; ++i) {\n    //   endTurnData.players.push({\n    //     _id: i,\n    //     playerName: `Hurgurto${i}`,\n    //     score: 3000,\n    //     earnedScore: 5000\n    //   });\n    // }\n    return (\n      <div className=\"OverlayEndTurnResultsContainer\">\n        <p className=\"OverlayEndTurnResultsText\">\n          Selected Word: {endTurnData.selectedWord}\n        </p>\n        {endTurnData.players.map(player => (\n          <p key={player._id} className=\"OverlayEndTurnResultsText\">\n            {player.playerName}: {player.score} + {player.earnedScore}\n          </p>\n        ))}\n        {/* {endTurnData.isEndGame ? (\n          <button\n            type=\"button\"\n            className=\"Button OverlayEndTurnResultsButton\"\n            onClick={onShowResults}\n          >\n            Results\n          </button>\n        ) : null} */}\n      </div>\n    );\n  }\n\n  function getLoading() {\n    return <p>Loading...</p>;\n  }\n\n  function getArtistChoosing() {\n    return <p>{artist.playerName} is choosing their word...</p>;\n  }\n\n  function getWords() {\n    // let words = [\"computer\", \"hello\", \"world\"];\n    return (\n      <>\n        {words.map(word => (\n          <button\n            type=\"button\"\n            key={word}\n            className=\"Button OverlayWordButton\"\n            onClick={() => sendSelectedWord(gameCode, word)}\n          >\n            {word}\n          </button>\n        ))}\n      </>\n    );\n  }\n\n  function selectOverlayContent() {\n    if (endGameData !== null) {\n      return getResults();\n    }\n    if (endTurnData !== null) {\n      return getEndTurn();\n    }\n    if (artist === null) {\n      return getLoading();\n    }\n    if (pid !== artist._id) {\n      return getArtistChoosing();\n    }\n    return getWords();\n  }\n\n  return <Panel className=\"Overlay\">{selectOverlayContent()}</Panel>;\n  // return <Panel className=\"Overlay\">{getResults()}</Panel>;\n}\n\nOverlay.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  words: PropTypes.arrayOf(PropTypes.string).isRequired,\n  endTurnData: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n  ),\n  endGameData: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array])),\n  onBackRoom: PropTypes.func.isRequired\n};\n\nOverlay.defaultProps = {\n  artist: null,\n  endTurnData: null,\n  endGameData: null\n};\n\nexport default Overlay;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendSelectedWord(gameCode, word) {\n  socket.emit(\"send_selected_word\", {\n    gameCode: gameCode,\n    word: word\n  });\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { socket } from \"../../utils/socket\";\nimport { sendEnterGame } from \"./GameApiSocket\";\nimport { sendJoinGame } from \"../Home/HomeApiSocket\";\nimport PlayersList from \"./PlayersList/PlayersList\";\nimport Canvas from \"./Canvas/Canvas\";\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\nimport Overlay from \"./Overlay/Overlay\";\nimport \"./Game.css\";\n\nfunction Game() {\n  const state = useLocation().state;\n  const { gameCode, pid, ownerPid, drawTime } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [artist, setArtist] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [words, setWords] = useState([]);\n  const [timer, setTimer] = useState(drawTime);\n  const [rankings, setRankings] = useState(new Array(players.length).fill(1));\n  const [endTurnData, setEndTurnData] = useState(null);\n  const [guessedCorrectPids, setGuessedCorrectPids] = useState({});\n  const [endGameData, setEndGameData] = useState(null);\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currRound, setCurrRound] = useState(1);\n  const chatRoomRef = useRef(null);\n  let history = useHistory();\n\n  function onBackRoom() {\n    function getPlayerName() {\n      for (const player of players) {\n        if (player._id === pid) {\n          return player.playerName;\n        }\n      }\n      return null;\n    }\n    sendJoinGame(gameCode, pid, getPlayerName(), history);\n  }\n\n  function updatePlayersScore(players) {\n    setPlayers(\n      players.map(player => {\n        player.score = player.score + player.earnedScore;\n        return player;\n      })\n    );\n  }\n\n  function addGuessedCorrectPid(pid) {\n    setGuessedCorrectPids(guessedCorrectPids => {\n      guessedCorrectPids[pid] = true;\n      return guessedCorrectPids;\n    });\n  }\n\n  useEffect(() => {\n    sendEnterGame(gameCode);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"next_artist_announcement\", data => {\n      console.log(\"got next artist\");\n      console.log(data);\n      updatePlayersScore(data.players);\n      setRankings(data.rankings);\n      setEndTurnData(null);\n      setSelectedWord(null);\n      setArtist(data.artist);\n      setWords(data.words);\n      setGuessedCorrectPids({});\n      setCurrRound(data.currRound);\n    });\n\n    return () => {\n      socket.off(\"next_artist_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"selected_word_announcement\", data => {\n      setIsDrawing(true);\n      setSelectedWord(data.selectedWord);\n    });\n\n    return () => {\n      socket.off(\"selected_word_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"timer_announcement\", data => {\n      setTimer(data.time);\n    });\n\n    return () => {\n      socket.off(\"timer_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"end_turn_announcement\", data => {\n      setEndTurnData(data);\n      setIsDrawing(false);\n    });\n\n    return () => {\n      socket.off(\"end_turn_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"end_game_announcement\", data => {\n      setEndGameData(data);\n    });\n\n    return () => {\n      socket.off(\"end_game_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"disconnect_announcement\", data => {\n      console.log(data);\n    });\n\n    return () => {\n      socket.off(\"disconnect_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"disconnect_announcement\", data => {\n      console.log(data);\n      setPlayers(data.players);\n      setRankings(data.rankings);\n      console.log(chatRoomRef);\n      console.log(chatRoomRef.current);\n      let message = `${data.playerName} has disconnected`;\n      let status = \"Disconnected\";\n      chatRoomRef.current.addMessage(message, status);\n    });\n\n    return () => {\n      socket.off(\"disconnect_announcement\");\n    };\n  }, [chatRoomRef]);\n\n  return (\n    <div className=\"Game\">\n      <Link to=\"/\" className=\"GameTitleLink\">\n        Pictionary Live\n      </Link>\n      <h2 className=\"GameGameCode\">Game Code: {gameCode}</h2>\n      <div className=\"GamePlayContainer\">\n        <div className=\"GameDummyPlayer\" />\n        <div className=\"GameCanvasOverlayContainer\">\n          <Canvas\n            gameCode={gameCode}\n            pid={pid}\n            artist={artist}\n            selectedWord={selectedWord}\n            currRound={currRound}\n            timer={timer}\n          />\n          {!isDrawing ? (\n            <Overlay\n              gameCode={gameCode}\n              pid={pid}\n              artist={artist}\n              words={words}\n              endTurnData={endTurnData}\n              endGameData={endGameData}\n              onBackRoom={onBackRoom}\n            />\n          ) : null}\n        </div>\n        <div className=\"GameDummyChat\" />\n        <div className=\"GamePlayersChatContainer\">\n          <PlayersList\n            players={players}\n            pid={pid}\n            ownerPid={ownerPid}\n            artistPid={artist !== null ? artist._id : null}\n            guessedCorrectPids={guessedCorrectPids}\n            rankings={rankings}\n          />\n          <ChatRoom\n            gameCode={gameCode}\n            pid={pid}\n            addGuessedCorrectPid={addGuessedCorrectPid}\n            ref={chatRoomRef}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendEnterGame(gameCode) {\n  socket.emit(\"send_enter_game\", {\n    gameCode: gameCode\n  });\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport Room from \"../Room/Room\";\nimport Game from \"../Game/Game\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport \"prevent-pull-refresh\";\nimport \"./App.css\";\n\nfunction App() {\n  const { height } = useWindowSize();\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ height: height }}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/room\">\n            <Room />\n          </Route>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nlet root = document.getElementById(\"root\");\n// root.style.height = window.innerHeight;\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}