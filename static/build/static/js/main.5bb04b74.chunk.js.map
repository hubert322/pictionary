{"version":3,"sources":["utils/const.js","utils/socket.js","components/Home/HomeApiSocket.js","utils/hooks.js","components/Panel/Panel.js","components/TextField/TextField.js","components/Home/Home.js","components/Room/Room.js","components/Room/RoomApiSocket.js","components/Game/GameApiSocket.js","components/Game/PlayersList/PlayersList.js","components/Game/Canvas/Canvas.js","components/Game/Canvas/CanvasApiSocket.js","components/ChatRoom/ChatRoom.js","components/ChatRoom/ChatRoomApiSocket.js","components/Game/Overlay/Overlay.js","components/Game/Overlay/OverlayApiSocket.js","components/Game/Game.js","components/App/App.js","serviceWorker.js","index.js"],"names":["serverBaseUrl","mediumDeviceMinWidth","socket","io","transports","sendJoinGame","gameCode","pid","playerName","history","emit","on","data","off","onJoinRoomAnnouncement","console","log","_callee","response","regenerator_default","a","wrap","_context","prev","next","localStorage","getItem","abrupt","Promise","resolve","axios","post","sent","setItem","t0","stop","push","concat","useWindowSize","_useState3","useState","width","window","innerWidth","height","innerHeight","_useState4","Object","slicedToArray","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","Panel","props","children","className","react_default","createElement","defaultProps","useStyles","makeStyles","textField","margin","& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","borderColor","&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root","color","& label","& label.Mui-focused","TextField","classes","label","variant","value","onChange","error","inputRef","onKeyDown","Home","_useState","_useState2","setGameCode","_useLocalStorage","key","defaultValue","setValue","useEffect","useLocalStorage","_useLocalStorage2","setPlayerName","playerNameLabel","setPlayerNameLabel","_useState5","_useState6","hasPlayerNameError","setHasPlayerNameError","_useState7","_useState8","gameCodeLabel","setGameCodeLabel","_useState9","_useState10","hasGameCodeError","setHasGameCodeError","useRef","useHistory","_getPid","apply","this","arguments","getPid","then","pidValue","current","react_router_dom","to","components_Panel_Panel","components_TextField_TextField","e","target","type","onClick","sendNewGame","formControl","& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline","& .Mui-disabled","cursor","& .MuiOutlinedInput-root.Mui-disabled","& label.Mui-disabled","& option","& .MuiSelect-icon","fill","& .MuiSelect-icon.Mui-disabled","Room","state","useLocation","players","setPlayers","ownerPid","setOwnerPid","rounds","setRounds","drawTime","setDrawTime","parseInt","slice","map","player","_id","esm","Provider","fa_index_esm","index_esm","FormControl","disabled","InputLabel","htmlFor","Select","native","inputProps","id","length","drawTimeInt","sendPlayGame","sendNextTurn","PlayerList","artistPid","guessedCorrectPid","rankings","_ref","index","score","style","backgroundColor","Canvas","artist","selectedWord","currRound","timer","canvas","isMouseDragging","prevX","prevY","paths","mouseDown","isTouch","undefined","i","draw","mouseMove","mouseUp","isMouseMove","touchIndex","_getMousePos","windowX","windowY","rect","getBoundingClientRect","touches","clientX","clientY","currX","left","right","currY","top","bottom","getMousePos","line","drawLine","sendDrawLine","dot","x","y","newColor","drawDot","sendDrawDot","addPath","ctx","getContext","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","points","fillStyle","fillRect","clearCanvas","clearPath","clearRect","pop","_paths$current$i","j","undoCanvas","word","underlinedWord","getUnderlinedWord","ref","onTouchStart","preventDefault","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","sendUndoCanvas","sendClearCanvas","& input","padding","transform","ChatRoom","setGuessedCorrectPid","message","setMessage","messageArea","messageTextField","addMessage","isCorrect","messageNode","document","textContent","appendChild","scrollTop","scrollHeight","onSendMessage","sendMessage","focus","keyCode","messageTextFieldOnKey","Overlay","words","endTurnData","onNextTurn","onShowResults","results","onBackRoom","Fragment","earnedScore","isEndGame","sendSelectedWord","Game","setArtist","isDrawing","setIsDrawing","setWords","setTimer","_useState11","Array","_useState12","setRankings","_useState13","_useState14","setEndTurnData","_useState15","_useState16","_useState17","_useState18","setResults","_useState19","_useState20","setSelectedWord","_useState21","_useState22","setCurrRound","updatePlayersScore","_updatePlayersScore","_updatePlayersScore2","newPlayers","newRankings","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","getPlayerName","newPlayer","getScore","sortedScores","sort","reverse","indexOf","getPlayersList","PlayersList_PlayersList","getCanvasOrOverlay","Game_Canvas_Canvas","Game_Overlay_Overlay","getChatRoom","components_ChatRoom_ChatRoom","filter","time","App","react_router","exact","path","components_Home_Home","components_Room_Room","components_Game_Game","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","root","getElementById","ReactDOM","render","components_App_App","URL","process","href","origin","fetch","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5bb04b74.chunk.js","sourcesContent":["export const serverBaseUrl =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://192.168.0.4:5000\"\n    : \"https://skribbl-remake.herokuapp.com/\";\n\nexport const mediumDeviceMinWidth = 768;\n","import io from \"socket.io-client\";\nimport { serverBaseUrl } from \"./const\";\n\nexport const socket = io(serverBaseUrl, { transports: [\"websocket\"] });\n","import axios from \"axios\";\nimport { socket } from \"../../utils/socket\";\nimport { serverBaseUrl } from \"../../utils/const\";\n\nexport function sendJoinGame(gameCode, pid, playerName, history) {\n  socket.emit(\"send_join_room\", {\n    gameCode: gameCode,\n    pid: pid,\n    playerName: playerName\n  });\n\n  socket.on(\"join_room_success\", data => {\n    socket.off(\"join_room_success\");\n    onJoinRoomAnnouncement(gameCode, pid, history);\n  });\n\n  socket.on(\"join_room_error\", data => {\n    socket.off(\"join_room_error\");\n    console.log(\"join room error\");\n  });\n}\n\nexport function sendNewGame(pid, playerName, history) {\n  socket.emit(\"send_new_room\", {\n    pid: pid,\n    playerName: playerName\n  });\n\n  socket.on(\"new_room_success\", data => {\n    socket.off(\"new_room_success\");\n    onJoinRoomAnnouncement(data.gameCode, pid, history);\n  });\n\n  socket.on(\"new_room_error\", data => {\n    console.log(\"new room error\");\n    console.log(data);\n    socket.off(\"new_room_error\");\n  });\n}\n\nexport async function getPid() {\n  let pid = localStorage.getItem(\"pid\");\n  if (pid != null) {\n    return Promise.resolve(pid);\n  }\n  try {\n    let response = await axios.post(serverBaseUrl + \"/api/player/new\");\n    console.log(response.data);\n    pid = response.data[\"pid\"];\n    localStorage.setItem(\"pid\", pid);\n    return pid;\n  } catch (e) {\n    console.log(e.response);\n    return \"\";\n  }\n}\n\nfunction onJoinRoomAnnouncement(gameCode, pid, history) {\n  socket.on(\"join_room_announcement\", data => {\n    socket.off(\"join_room_announcement\");\n    data.gameCode = gameCode;\n    data.pid = pid;\n    history.push(`/room?gameCode=${gameCode}`, data);\n  });\n}\n","import { useState, useEffect, useLayoutEffect } from \"react\";\n\nexport function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = useState(localStorage.getItem(key) || defaultValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value]);\n\n  return [value, setValue];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", updateSize);\n    return () => {\n      window.removeEventListener(\"resize\", updateSize);\n    };\n  });\n\n  return size;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Panel.css\";\n\nfunction Panel(props) {\n  const { children, className } = props;\n  return <div className={`Panel ${className}`}>{children}</div>;\n}\n\nPanel.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  className: PropTypes.string\n};\n\nPanel.defaultProps = {\n  children: [],\n  className: \"\"\n};\n\nexport default Panel;\n","import React from \"react\";\nimport MaterialTextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes, { object } from \"prop-types\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    }\n  }\n});\n\nfunction TextField(props) {\n  const classes = useStyles();\n  const {\n    label,\n    variant,\n    value,\n    onChange,\n    error,\n    inputRef,\n    onKeyDown,\n    className\n  } = props;\n\n  return (\n    <MaterialTextField\n      label={label}\n      variant={variant}\n      value={value}\n      onChange={onChange}\n      error={error}\n      inputRef={inputRef}\n      onKeyDown={onKeyDown}\n      className={`${classes.textField} ${className}`}\n    />\n  );\n}\n\nTextField.propTypes = {\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.bool,\n  inputRef: PropTypes.objectOf(object),\n  onKeyDown: PropTypes.func,\n  className: PropTypes.string\n};\n\nTextField.defaultProps = {\n  label: null,\n  variant: \"standard\",\n  value: null,\n  onChange: null,\n  error: null,\n  inputRef: null,\n  onKeyDown: null,\n  className: \"\"\n};\n\nexport default TextField;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { sendJoinGame, sendNewGame, getPid } from \"./HomeApiSocket\";\nimport { useLocalStorage } from \"../../utils/hooks\";\nimport \"../App/App.css\";\nimport \"./Home.css\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\n\nfunction Home() {\n  const [gameCode, setGameCode] = useState(\"\");\n  const [playerName, setPlayerName] = useLocalStorage(\"playerName\", \"\");\n  const [playerNameLabel, setPlayerNameLabel] = useState(\"Name\");\n  const [hasPlayerNameError, setHasPlayerNameError] = useState(false);\n  const [gameCodeLabel, setGameCodeLabel] = useState(\"Game Code\");\n  const [hasGameCodeError, setHasGameCodeError] = useState(false);\n  const pid = useRef(null);\n  let history = useHistory();\n\n  function onJoinGame() {\n    if (gameCode === \"\" || playerName === \"\") {\n      if (gameCode === \"\") {\n        setHasGameCodeError(true);\n        setGameCodeLabel(\"Game Code required\");\n      }\n      if (playerName === \"\") {\n        setHasPlayerNameError(true);\n        setPlayerNameLabel(\"Name required\");\n      }\n    } else if (typeof pid.current !== \"string\") {\n      console.log(\"Waiting for promise to resolve...\");\n    } else {\n      sendJoinGame(gameCode, pid.current, playerName, history);\n    }\n  }\n\n  function onNewGame() {\n    if (playerName === \"\") {\n      setHasPlayerNameError(true);\n      setPlayerNameLabel(\"Name required\");\n    } else if (typeof pid.current !== \"string\") {\n      console.log(\"Waiting for promise to resolve...\");\n    } else {\n      sendNewGame(pid.current, playerName, history);\n    }\n  }\n\n  useEffect(() => {\n    getPid().then(pidValue => {\n      pid.current = pidValue;\n    });\n  }, []);\n\n  console.log(pid.current);\n\n  return (\n    <div className=\"Home\">\n      <Link to=\"/\" className=\"HomeTitle\">\n        Pictionary Live\n      </Link>\n      <Panel className=\"HomeMainContainer\">\n        <TextField\n          label={playerNameLabel}\n          variant=\"outlined\"\n          value={playerName}\n          onChange={e => setPlayerName(e.target.value)}\n          error={hasPlayerNameError}\n        />\n        <div className=\"HomeJoinGameContainer\">\n          <TextField\n            label={gameCodeLabel}\n            variant=\"outlined\"\n            className=\"HomeJoinGameTextField\"\n            value={gameCode}\n            onChange={e => setGameCode(e.target.value)}\n            error={hasGameCodeError}\n          />\n          <button\n            type=\"button\"\n            className=\"Button HomeJoinGameButton\"\n            onClick={onJoinGame}\n          >\n            Join Game\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          className=\"Button HomeNewGameButton\"\n          onClick={onNewGame}\n        >\n          New Game\n        </button>\n      </Panel>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Select, InputLabel, FormControl } from \"@material-ui/core\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown } from \"react-icons/fa\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport { socket } from \"../../utils/socket\";\nimport { mediumDeviceMinWidth } from \"../../utils/const\";\nimport { sendPlayGame } from \"./RoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport \"../App/App.css\";\nimport \"./Room.css\";\n\nconst useStyles = makeStyles({\n  formControl: {\n    margin: \"7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& .Mui-disabled\": {\n      cursor: \"not-allowed\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    },\n    \"& label.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    },\n    \"& option\": {\n      color: \"black\"\n    },\n    \"& .MuiSelect-icon\": {\n      fill: \"white\"\n    },\n    \"& .MuiSelect-icon.Mui-disabled\": {\n      fill: \"rgba(255, 255, 255, 0.26)\"\n    }\n  }\n});\n\nfunction Room() {\n  const classes = useStyles();\n  const state = useLocation().state;\n  const { gameCode, pid } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [ownerPid, setOwnerPid] = useState(state.ownerPid);\n  // const { gameCode } = state;\n  // const pid = 0;\n  // const ownerPid = 0;\n  // const [players, setPlayers] = useState(() => {\n  //   let tmp = [];\n  //   for (let i = 0; i < 8; ++i) {\n  //     tmp.push({\n  //       _id: i,\n  //       playerName: `Hurgurto${i}`\n  //     });\n  //   }\n\n  //   return tmp;\n  // });\n  const [rounds, setRounds] = useState(3);\n  const [drawTime, setDrawTime] = useState(\"60s\");\n  const { width } = useWindowSize();\n  const history = useHistory();\n\n  useEffect(() => {\n    socket.on(\"join_room_announcement\", data => {\n      setPlayers(data.players);\n      setOwnerPid(ownerPid);\n    });\n\n    return () => {\n      socket.off(\"join_room_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"play_game_announcement\", () => {\n      history.push(`/game?gameCode=${gameCode}`, {\n        gameCode: gameCode,\n        pid: pid,\n        players: players,\n        ownerPid: ownerPid,\n        drawTime: parseInt(drawTime.slice(0, -1))\n      });\n    });\n\n    return () => {\n      socket.off(\"play_game_announcement\");\n    };\n  }, [gameCode, pid, players, history]);\n\n  return (\n    <div className=\"Room\">\n      <Link to=\"/\" className=\"RoomTitleLink\">\n        Pictionary Live\n      </Link>\n      <h2>Room: {gameCode}</h2>\n      <div className=\"RoomMainContainer\">\n        <Panel className=\"RoomPlayersContainer\">\n          <h3 className=\"RoomContainerTitle\">Players</h3>\n          <div className=\"RoomPlayersList\">\n            {players.map(player => (\n              <div className=\"RoomPlayer\" key={player._id}>\n                <IconContext.Provider\n                  value={{\n                    size: width >= mediumDeviceMinWidth ? \"3rem\" : \"2rem\"\n                  }}\n                >\n                  {player._id === ownerPid ? <FaCrown /> : <MdPerson />}\n                </IconContext.Provider>\n                <span className=\"RoomPlayerName\">{player.playerName}</span>\n                <span className=\"RoomPlayerTag\">\n                  {player._id === pid ? \"You\" : \" \"}\n                </span>\n              </div>\n            ))}\n          </div>\n        </Panel>\n        <Panel className=\"RoomGameControlsContainer\">\n          <h3 className=\"RoomContainerTitle\">Settings</h3>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Rounds</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={rounds}\n              onChange={e => setRounds(e.target.value)}\n              inputProps={{ id: \"roundsSelector\" }}\n            >\n              <option>3</option>\n              <option>5</option>\n              <option>10</option>\n            </Select>\n          </FormControl>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Draw Time</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={drawTime}\n              onChange={e => setDrawTime(e.target.value)}\n              inputProps={{ id: \"drawTime\" }}\n            >\n              <option>30s</option>\n              <option>60s</option>\n              <option>90s</option>\n            </Select>\n          </FormControl>\n          <button\n            type=\"button\"\n            className=\"Button\"\n            onClick={() => {\n              if (players.length > 1) {\n                const drawTimeInt = parseInt(drawTime.slice(0, -1));\n                sendPlayGame(gameCode, rounds, drawTimeInt);\n              }\n            }}\n            disabled={pid !== ownerPid}\n          >\n            Play\n          </button>\n        </Panel>\n      </div>\n    </div>\n  );\n}\n\nexport default Room;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendPlayGame(gameCode, rounds, drawTime) {\n  socket.emit(\"send_play_game\", {\n    gameCode: gameCode,\n    rounds: rounds,\n    drawTime: drawTime\n  });\n}\n","import { socket } from \"../../utils/socket\";\n\nexport function sendNextTurn(gameCode) {\n  socket.emit(\"send_next_turn\", {\n    gameCode: gameCode\n  });\n}\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown, FaPaintBrush } from \"react-icons/fa\";\nimport { useWindowSize } from \"../../../utils/hooks\";\nimport { mediumDeviceMinWidth } from \"../../../utils/const\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./PlayersList.css\";\n\nfunction PlayerList(props) {\n  const {\n    players,\n    pid,\n    ownerPid,\n    artistPid,\n    guessedCorrectPid,\n    rankings\n  } = props;\n  const { width } = useWindowSize();\n\n  return (\n    <Panel className=\"PlayersList\">\n      {players.map(({ playerName, _id, score }, index) => (\n        <div\n          className=\"PlayersListPlayer\"\n          key={_id}\n          style={{\n            backgroundColor:\n              _id === guessedCorrectPid ? \"rgb(35, 231, 17)\" : \"transparent\"\n          }}\n        >\n          <div className=\"PlayersListPlayerRankingIcon\">\n            <span className=\"PlayersListRanking\">#{rankings[index]}</span>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.8rem\" : \"1.5rem\"\n              }}\n            >\n              {_id === ownerPid ? <FaCrown /> : <MdPerson />}\n            </IconContext.Provider>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.5rem\" : \"1.2rem\"\n              }}\n            >\n              {_id === artistPid ? <FaPaintBrush /> : null}\n            </IconContext.Provider>\n          </div>\n          <span className=\"PlayersListPlayerName\">\n            {playerName}\n            {pid === _id ? \" (You)\" : null}: {score ? score : 0}\n          </span>\n        </div>\n      ))}\n    </Panel>\n  );\n}\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pid: PropTypes.string.isRequired,\n  ownerPid: PropTypes.string.isRequired,\n  artistPid: PropTypes.string,\n  guessedCorrectPid: PropTypes.string,\n  rankings: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nPlayerList.defaultProps = {\n  artistPid: null,\n  guessedCorrectPid: null\n};\n\nexport default PlayerList;\n","import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { socket } from \"../../../utils/socket\";\nimport {\n  sendDrawLine,\n  sendDrawDot,\n  sendUndoCanvas,\n  sendClearCanvas\n} from \"./CanvasApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./Canvas.css\";\n\nfunction Canvas(props) {\n  const { gameCode, pid, artist, selectedWord, currRound, timer } = props;\n  const canvas = useRef(null);\n  let isMouseDragging = useRef(false);\n  let prevX = useRef(0);\n  let prevY = useRef(0);\n  let color = useRef(\"#f64f59\");\n  const paths = useRef([]);\n\n  function touchStart(e) {\n    e.preventDefault();\n    mouseDown(e, true);\n  }\n\n  function mouseDown(e, isTouch = false) {\n    if (pid !== artist._id) {\n      return;\n    }\n    isMouseDragging.current = true;\n    if (isTouch) {\n      for (let i = 0; i < 1; ++i) {\n        draw(e, false, i);\n      }\n    } else {\n      draw(e, false, -1);\n    }\n  }\n\n  function touchMove(e) {\n    e.preventDefault();\n    mouseMove(e, true);\n  }\n\n  function mouseMove(e, isTouch = false) {\n    if (pid !== artist._id) {\n      return;\n    }\n    if (isMouseDragging.current) {\n      if (isTouch) {\n        for (let i = 0; i < 1; ++i) {\n          draw(e, true, i);\n        }\n      } else {\n        draw(e, true, -1);\n      }\n    }\n  }\n\n  function touchEnd(e) {\n    e.preventDefault();\n    mouseUp();\n  }\n\n  function mouseUp() {\n    if (pid !== artist._id) {\n      return;\n    }\n    isMouseDragging.current = false;\n  }\n\n  function draw(e, isMouseMove, touchIndex) {\n    const { currX, currY } = getMousePos(e, touchIndex);\n    if (isMouseMove) {\n      const line = {\n        prevX: prevX.current,\n        prevY: prevY.current,\n        currX: currX,\n        currY: currY\n      };\n      drawLine(line, true);\n      sendDrawLine(gameCode, line);\n    } else {\n      const dot = {\n        x: currX,\n        y: currY,\n        newColor: color.current\n      };\n      drawDot(dot, true);\n      sendDrawDot(gameCode, dot);\n    }\n    prevX.current = currX;\n    prevY.current = currY;\n  }\n\n  function getMousePos(e, touchIndex) {\n    const rect = canvas.current.getBoundingClientRect();\n    let windowX, windowY;\n    if (touchIndex !== -1) {\n      windowX = e.touches[touchIndex].clientX;\n      windowY = e.touches[touchIndex].clientY;\n    } else {\n      windowX = e.clientX;\n      windowY = e.clientY;\n    }\n    return {\n      currX:\n        ((windowX - rect.left) / (rect.right - rect.left)) *\n        canvas.current.width,\n      currY:\n        ((windowY - rect.top) / (rect.bottom - rect.top)) *\n        canvas.current.height\n    };\n  }\n\n  function drawLine(line, addPath) {\n    const { prevX, prevY, currX, currY } = line;\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.strokeStyle = color.current;\n    ctx.lineWidth = 2;\n    ctx.moveTo(prevX, prevY);\n    ctx.lineTo(currX, currY);\n    ctx.stroke();\n    ctx.closePath();\n    if (addPath) {\n      paths.current[paths.current.length - 1].points.push({\n        x: currX,\n        y: currY\n      });\n    }\n  }\n\n  function drawDot(dot, addPath) {\n    const { x, y, newColor } = dot;\n    const ctx = canvas.current.getContext(\"2d\");\n    color.current = newColor;\n    ctx.beginPath();\n    ctx.fillStyle = color.current;\n    ctx.fillRect(x, y, 2, 2);\n    ctx.closePath();\n    if (addPath) {\n      paths.current.push({\n        points: [],\n        newColor: color.current\n      });\n      paths.current[paths.current.length - 1].points.push({ x: x, y: y });\n    }\n  }\n\n  function undoCanvas() {\n    if (paths.current.length) {\n      clearCanvas(false);\n      paths.current.pop();\n      for (let i = 0; i < paths.current.length; ++i) {\n        const { points, newColor } = paths.current[i];\n        const dot = {\n          x: points[0].x,\n          y: points[0].y,\n          newColor: newColor\n        };\n        drawDot(dot, false);\n        for (let j = 1; j < points.length; ++j) {\n          const line = {\n            prevX: points[j - 1].x,\n            prevY: points[j - 1].y,\n            currX: points[j].x,\n            currY: points[j].y\n          };\n          drawLine(line, false);\n        }\n      }\n    }\n  }\n\n  function clearCanvas(clearPath) {\n    if (paths.current.length) {\n      const ctx = canvas.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n      if (clearPath) {\n        paths.current = [];\n      }\n    }\n  }\n\n  function getUnderlinedWord(word) {\n    let underlinedWord = \"\";\n    for (let i = 0; i < word.length; ++i) {\n      if (word[i] === \" \") {\n        underlinedWord += \"  \";\n      } else {\n        underlinedWord += \"__\";\n      }\n      if (i + 1 !== word.length) {\n        underlinedWord += \"  \";\n      }\n    }\n    console.log(underlinedWord);\n    return underlinedWord;\n  }\n\n  useEffect(() => {\n    socket.on(\"draw_line_announcement\", data => {\n      if (canvas.current !== null) {\n        drawLine(data.line, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_line_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_dot_announcement\", data => {\n      if (canvas.current !== null) {\n        drawDot(data.dot, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_dot_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"undo_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        undoCanvas();\n      }\n    });\n\n    return () => {\n      socket.off(\"undo_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"clear_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        clearCanvas(true);\n      }\n    });\n\n    return () => {\n      socket.off(\"clear_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (artist === null) {\n      clearCanvas(true);\n    }\n  }, [artist]);\n\n  return (\n    <Panel className=\"CanvasContainer\">\n      <div className=\"CanvasHeader\">\n        <span className=\"CanvasCurrRound\">Round: {currRound}</span>\n        <span className=\"CanvasUnderlinedWord\">\n          Word:{\" \"}\n          {artist !== null && pid !== artist._id && selectedWord !== null\n            ? getUnderlinedWord(selectedWord)\n            : selectedWord}\n        </span>\n        <span className=\"CanvasTimer\">Timer: {timer}s</span>\n      </div>\n      <canvas\n        className=\"Canvas\"\n        ref={canvas}\n        onTouchStart={touchStart}\n        onMouseDown={mouseDown}\n        onTouchMove={touchMove}\n        onMouseMove={mouseMove}\n        onTouchEnd={touchEnd}\n        onMouseUp={mouseUp}\n      />\n      <div className=\"CanvasControlsContainer\">\n        <button\n          type=\"button\"\n          className=\"CanvasControl\"\n          onClick={() => {\n            color.current = \"#f64f59\";\n          }}\n        >\n          Red\n        </button>\n        <button\n          type=\"button\"\n          className=\"CanvasControl\"\n          onClick={() => {\n            color.current = \"#12c2e9\";\n          }}\n        >\n          Blue\n        </button>\n        <button\n          type=\"button\"\n          className=\"CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendUndoCanvas(gameCode);\n            }\n          }}\n        >\n          Undo\n        </button>\n        <button\n          type=\"button\"\n          className=\"CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendClearCanvas(gameCode);\n            }\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    </Panel>\n  );\n}\n\nCanvas.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  selectedWord: PropTypes.string,\n  currRound: PropTypes.number.isRequired,\n  timer: PropTypes.number.isRequired\n};\n\nCanvas.defaultProps = {\n  artist: null,\n  selectedWord: \"\"\n};\n\nexport default Canvas;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendDrawLine(gameCode, line) {\n  socket.emit(\"send_draw_line\", {\n    gameCode: gameCode,\n    line: line\n  });\n}\n\nexport function sendDrawDot(gameCode, dot) {\n  socket.emit(\"send_draw_dot\", {\n    gameCode: gameCode,\n    dot: dot\n  });\n}\n\nexport function sendUndoCanvas(gameCode) {\n  socket.emit(\"send_undo_canvas\", {\n    gameCode: gameCode\n  });\n}\n\nexport function sendClearCanvas(gameCode) {\n  socket.emit(\"send_clear_canvas\", {\n    gameCode: gameCode\n  });\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { socket } from \"../../utils/socket\";\nimport { sendMessage } from \"./ChatRoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\nimport \"./ChatRoom.css\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"5px 0px\",\n    \"& .MuiOutlinedInput-root\": {\n      color: \"black\"\n    },\n    \"& input\": {\n      padding: \"7px\"\n    },\n    \"& label\": {\n      color: \"black\",\n      transform: \"translate(14px, 7px) scale(1)\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"black\"\n    }\n  }\n});\n\nfunction ChatRoom(props) {\n  const classes = useStyles();\n  const { gameCode, pid, setGuessedCorrectPid } = props;\n  const [message, setMessage] = useState(\"\");\n  // const [isFirstTime, setIsFirstTime] = useState(true);\n  const messageArea = useRef(null);\n  const messageTextField = useRef(null);\n\n  function addMessage(message, isCorrect) {\n    let messageNode = document.createElement(\"p\");\n    messageNode.textContent = message;\n    messageNode.className = \"ChatRoomMessage\";\n    if (isCorrect) {\n      messageNode.className += \" ChatRoomCorrectMessage\";\n    }\n    messageArea.current.appendChild(messageNode);\n    scroll();\n  }\n\n  function scroll() {\n    messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // if (isFirstTime) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    //   setIsFirstTime(false);\n    // } else if (\n    //   messageArea.current.scrollTop + messageArea.current.clientHeight ===\n    //   messageArea.current.scrollHeight\n    // ) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // }\n  }\n\n  useEffect(() => {\n    socket.on(\"send_message_announcement\", data => {\n      addMessage(`${data.player.playerName}: ${data.message}`, false);\n    });\n\n    return () => {\n      socket.off(\"send_message_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"correct_word_announcement\", data => {\n      addMessage(`${data.player.playerName} has guessed the word!`, true);\n      setGuessedCorrectPid(data.player._id);\n    });\n\n    return () => {\n      socket.off(\"correct_word_announcement\");\n    };\n  }, [setGuessedCorrectPid]);\n\n  function onSendMessage() {\n    sendMessage(gameCode, pid, message);\n    setMessage(\"\");\n    messageTextField.current.focus();\n  }\n\n  function messageTextFieldOnKey(e) {\n    const ENTER_KEY_CODE = 13;\n    if (e.keyCode === ENTER_KEY_CODE && message !== \"\") {\n      onSendMessage();\n      // addMessage(message, true);\n      // addMessage(message, false);\n      // setMessage(\"\");\n    }\n  }\n\n  return (\n    <Panel className=\"ChatRoom\">\n      {/* <h2 className=\"ChatRoomTitle\">Chat Room</h2> */}\n      <div className=\"ChatRoomMessageArea\" ref={messageArea} />\n      <TextField\n        className={`${classes.textField} ChatRoomTextField`}\n        label=\"message\"\n        variant=\"outlined\"\n        value={message}\n        onChange={e => setMessage(e.target.value)}\n        inputRef={messageTextField}\n        onKeyDown={e => messageTextFieldOnKey(e)}\n      />\n      {/* <button type=\"button\" onClick={() => onSendMessage()}>\n        Send\n      </button> */}\n    </Panel>\n  );\n}\n\nChatRoom.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  setGuessedCorrectPid: PropTypes.func.isRequired\n};\n\nexport default ChatRoom;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendMessage(gameCode, pid, message) {\n  socket.emit(\"send_message\", {\n    gameCode: gameCode,\n    pid: pid,\n    message: message\n  });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sendSelectedWord } from \"./OverlayApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./Overlay.css\";\n\nfunction Overlay(props) {\n  const {\n    gameCode,\n    pid,\n    artist,\n    words,\n    endTurnData,\n    selectedWord,\n    onNextTurn,\n    onShowResults,\n    results,\n    onBackRoom\n  } = props;\n\n  function selectOverlayContent() {\n    if (results !== null) {\n      return (\n        <>\n          {results.players.map((player, index) => (\n            <p key={player._id}>\n              #{results.rankings[index]} {player.playerName}: {player.score}\n            </p>\n          ))}\n          <button type=\"button\" onClick={onBackRoom}>\n            Back to Room\n          </button>\n        </>\n      );\n    }\n    if (endTurnData !== null) {\n      return (\n        <>\n          <p>{selectedWord}</p>\n          {endTurnData.players.map(player => (\n            <p key={player._id}>\n              {player.playerName}: {player.score} + {player.earnedScore}\n            </p>\n          ))}\n          {endTurnData.isEndGame ? (\n            <button type=\"button\" onClick={onShowResults}>\n              Results\n            </button>\n          ) : (\n            <button type=\"button\" onClick={onNextTurn}>\n              Next Turn\n            </button>\n          )}\n        </>\n      );\n    }\n    if (artist === null) {\n      return <p>Loading...</p>;\n    }\n    if (pid !== artist._id) {\n      return <p>{artist.playerName} is currently choosing their word...</p>;\n    }\n    return (\n      <>\n        {words.map(word => (\n          <button\n            type=\"button\"\n            key={word}\n            onClick={() => sendSelectedWord(gameCode, word)}\n          >\n            {word}\n          </button>\n        ))}\n      </>\n    );\n  }\n\n  return <Panel className=\"Overlay\">{selectOverlayContent()}</Panel>;\n}\n\nOverlay.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  words: PropTypes.arrayOf(PropTypes.string).isRequired,\n  endTurnData: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.array, PropTypes.bool])\n  ),\n  selectedWord: PropTypes.string,\n  onNextTurn: PropTypes.func.isRequired,\n  onShowResults: PropTypes.func.isRequired,\n  results: PropTypes.objectOf(PropTypes.array),\n  onBackRoom: PropTypes.func.isRequired\n};\n\nOverlay.defaultProps = {\n  artist: null,\n  endTurnData: null,\n  selectedWord: \"\",\n  results: null\n};\n\nexport default Overlay;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendSelectedWord(gameCode, word) {\n  socket.emit(\"send_selected_word\", {\n    gameCode: gameCode,\n    word: word\n  });\n}\n\nexport function sendNextTurn(gameCode, pid) {\n  socket.emit(\"send_next_turn\", {\n    gameCode: gameCode,\n    pid: pid\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { socket } from \"../../utils/socket\";\nimport { mediumDeviceMinWidth } from \"../../utils/const\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport { sendNextTurn } from \"./GameApiSocket\";\nimport { sendJoinGame } from \"../Home/HomeApiSocket\";\nimport PlayersList from \"./PlayersList/PlayersList\";\nimport Canvas from \"./Canvas/Canvas\";\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\nimport Overlay from \"./Overlay/Overlay\";\nimport \"./Game.css\";\n\nfunction Game() {\n  const state = useLocation().state;\n  const { gameCode, pid, ownerPid, drawTime } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [artist, setArtist] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [words, setWords] = useState([]);\n  const [timer, setTimer] = useState(drawTime);\n  const [rankings, setRankings] = useState(new Array(players.length).fill(1));\n  const [endTurnData, setEndTurnData] = useState(null);\n  const [guessedCorrectPid, setGuessedCorrectPid] = useState(null);\n  const [results, setResults] = useState(null);\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currRound, setCurrRound] = useState(1);\n  const { width } = useWindowSize();\n  let history = useHistory();\n\n  function onNextTurn() {\n    sendNextTurn(gameCode);\n    updatePlayersScore();\n    setEndTurnData(null);\n    setArtist(null);\n    setSelectedWord(null);\n  }\n\n  function onShowResults() {\n    const [newPlayers, newRankings] = updatePlayersScore();\n    setResults({\n      players: newPlayers,\n      rankings: newRankings\n    });\n  }\n\n  function onBackRoom() {\n    function getPlayerName() {\n      for (const player of players) {\n        if (player._id === pid) {\n          return player.playerName;\n        }\n      }\n      return null;\n    }\n    sendJoinGame(gameCode, pid, getPlayerName(), history);\n  }\n\n  function updatePlayersScore() {\n    const newPlayers = players.map((player, index) => {\n      const newPlayer = endTurnData.players[index];\n      player[\"score\"] = newPlayer.score + newPlayer.earnedScore;\n      return player;\n    });\n    setPlayers(newPlayers);\n\n    function getScore(score) {\n      return score ? score : 0;\n    }\n\n    const sortedScores = players\n      .map(player => getScore(player.score))\n      .sort()\n      .reverse();\n\n    const newRankings = players.map(\n      player => sortedScores.indexOf(getScore(player.score)) + 1\n    );\n    setRankings(newRankings);\n\n    return [newPlayers, newRankings];\n  }\n\n  function getPlayersList() {\n    return (\n      <PlayersList\n        players={players}\n        pid={pid}\n        ownerPid={ownerPid}\n        artistPid={artist !== null ? artist._id : null}\n        guessedCorrectPid={guessedCorrectPid}\n        rankings={rankings}\n      />\n    );\n  }\n\n  function getCanvasOrOverlay() {\n    return (\n      <div className=\"GameCanvasOverlayContainer\">\n        <Canvas\n          gameCode={gameCode}\n          pid={pid}\n          artist={artist}\n          endTurnData={endTurnData}\n          selectedWord={selectedWord}\n          currRound={currRound}\n          timer={timer}\n        />\n        {!isDrawing ? (\n          <Overlay\n            gameCode={gameCode}\n            pid={pid}\n            artist={artist}\n            words={words}\n            endTurnData={endTurnData}\n            selectedWord={selectedWord}\n            onNextTurn={onNextTurn}\n            onShowResults={onShowResults}\n            results={results}\n            onBackRoom={onBackRoom}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  function getChatRoom() {\n    return (\n      <ChatRoom\n        gameCode={gameCode}\n        pid={pid}\n        setGuessedCorrectPid={setGuessedCorrectPid}\n      />\n    );\n  }\n\n  useEffect(() => {\n    sendNextTurn(gameCode);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"player_disconnect\", data => {\n      setPlayers(players.filter(player => player._id !== data.player._id));\n    });\n\n    return () => {\n      socket.off(\"player_disconnect\");\n    };\n  }, [players]);\n\n  useEffect(() => {\n    socket.on(\"next_artist_announcement\", data => {\n      setArtist(data.artist);\n      setWords(data.words);\n      setGuessedCorrectPid(null);\n      setCurrRound(data.currRound);\n    });\n\n    return () => {\n      socket.off(\"next_artist_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"selected_word_announcement\", data => {\n      setIsDrawing(true);\n      setSelectedWord(data.selectedWord);\n    });\n\n    return () => {\n      socket.off(\"selected_word_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"timer_announcement\", data => {\n      setTimer(data.time);\n    });\n\n    return () => {\n      socket.off(\"timer_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"end_turn_announcement\", data => {\n      setEndTurnData(data);\n      setIsDrawing(false);\n    });\n\n    return () => {\n      socket.off(\"end_turn_announcement\");\n    };\n  }, []);\n\n  return (\n    <div className=\"Game\">\n      <Link to=\"/\" className=\"GameTitleLink\">\n        Pictionary Live\n      </Link>\n      <h2 className=\"GameGameCode\">Game: {gameCode}</h2>\n      <div className=\"GamePlayContainer\">\n        {width >= mediumDeviceMinWidth ? (\n          <>\n            {getPlayersList()}\n            {getCanvasOrOverlay()}\n            {getChatRoom()}\n          </>\n        ) : (\n          <>\n            {getCanvasOrOverlay()}\n            <div className=\"GamePlayersChatContainer\">\n              {getPlayersList()}\n              {getChatRoom()}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport Room from \"../Room/Room\";\nimport Game from \"../Game/Game\";\nimport \"./App.css\";\nimport { useWindowSize } from \"../../utils/hooks\";\n\nfunction App() {\n  const { height } = useWindowSize();\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ height: height }}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/room\">\n            <Room />\n          </Route>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nlet root = document.getElementById(\"root\");\n// root.style.height = window.innerHeight;\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}