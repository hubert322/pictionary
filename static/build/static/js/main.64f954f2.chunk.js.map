{"version":3,"sources":["utils/const.js","utils/socket.js","components/Home/HomeApiSocket.js","utils/hooks.js","components/Panel/Panel.js","components/TextField/TextField.js","components/Home/Home.js","components/Room/Room.js","components/Room/RoomApiSocket.js","components/Game/GameApiSocket.js","components/Game/PlayersList/PlayersList.js","components/Game/Canvas/Canvas.js","components/Game/Canvas/CanvasApiSocket.js","components/ChatRoom/ChatRoom.js","components/ChatRoom/ChatRoomApiSocket.js","components/Game/Overlay/Overlay.js","components/Game/Overlay/OverlayApiSocket.js","components/Game/Game.js","components/App/App.js","serviceWorker.js","index.js"],"names":["console","log","process","serverBaseUrl","mediumDeviceMinWidth","socket","io","sendJoinGame","gameCode","pid","playerName","history","emit","on","data","off","onJoinRoomAnnouncement","push","concat","useWindowSize","_useState3","useState","width","window","innerWidth","height","innerHeight","_useState4","Object","slicedToArray","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","Panel","props","children","className","react_default","a","createElement","defaultProps","useStyles","makeStyles","textField","margin","& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","borderColor","&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline","& .MuiOutlinedInput-root","color","& label","& label.Mui-focused","TextField","classes","label","variant","value","onChange","error","inputRef","onKeyDown","Home","_useState","_useState2","setGameCode","_useLocalStorage","key","defaultValue","localStorage","getItem","setValue","useEffect","setItem","useLocalStorage","_useLocalStorage2","setPlayerName","playerNameLabel","setPlayerNameLabel","_useState5","_useState6","hasPlayerNameError","setHasPlayerNameError","_useState7","_useState8","gameCodeLabel","setGameCodeLabel","_useState9","_useState10","hasGameCodeError","setHasGameCodeError","useRef","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","post","sent","t0","abrupt","stop","getPid","useHistory","react_router_dom","to","components_Panel_Panel","components_TextField_TextField","e","target","type","onClick","current","sendNewGame","formControl","& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline","& .Mui-disabled","cursor","& .MuiOutlinedInput-root.Mui-disabled","& label.Mui-disabled","& option","& .MuiSelect-icon","fill","& .MuiSelect-icon.Mui-disabled","Room","state","useLocation","players","setPlayers","ownerPid","setOwnerPid","rounds","setRounds","drawTime","setDrawTime","map","player","_id","esm","Provider","fa_index_esm","index_esm","FormControl","disabled","InputLabel","htmlFor","Select","native","inputProps","id","length","drawTimeInt","parseInt","slice","sendPlayGame","sendNextTurn","PlayerList","artistPid","guessedCorrectPid","rankings","_ref","index","score","style","backgroundColor","Canvas","artist","endTurnData","selectedWord","timer","setTimer","canvas","isMouseDragging","prevX","prevY","paths","mouseDown","isTouch","arguments","undefined","i","draw","mouseMove","mouseUp","isMouseMove","touchIndex","_getMousePos","windowX","windowY","rect","getBoundingClientRect","touches","clientX","clientY","currX","left","right","currY","top","bottom","getMousePos","line","sendDrawLine","dot","x","y","newColor","sendDrawDot","drawLine","addPath","ctx","getContext","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","points","drawDot","fillStyle","fillRect","clearCanvas","clearPath","clearRect","pop","_paths$current$i","j","undoCanvas","time","ref","onTouchStart","preventDefault","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","sendUndoCanvas","sendClearCanvas","& input","padding","transform","ChatRoom","setGuessedCorrectPid","message","setMessage","messageArea","messageTextField","addMessage","isCorrect","messageNode","document","textContent","appendChild","scrollTop","scrollHeight","onSendMessage","sendMessage","focus","keyCode","messageTextFieldOnKey","Overlay","words","onNextTurn","onShowResults","results","Fragment","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","getPlayerName","earnedScore","isEndGame","word","sendSelectedWord","Game","setArtist","isDrawing","setIsDrawing","setWords","Array","setRankings","_useState11","_useState12","setEndTurnData","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","setResults","updatePlayersScore","_updatePlayersScore","_updatePlayersScore2","newPlayers","newRankings","newPlayer","getScore","sortedScores","sort","reverse","indexOf","getPlayersList","PlayersList_PlayersList","getCanvasOrOverlay","Game_Canvas_Canvas","Game_Overlay_Overlay","getChatRoom","components_ChatRoom_ChatRoom","filter","App","react_router","exact","path","components_Home_Home","components_Room_Room","components_Game_Game","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","root","getElementById","ReactDOM","render","components_App_App","URL","href","origin","fetch","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.64f954f2.chunk.js","sourcesContent":["console.log(process.env.NODE_ENV);\n\nexport const serverBaseUrl =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://192.168.0.3:5000\"\n    : \"https://skribbl-remake.herokuapp.com/\";\n\nexport const mediumDeviceMinWidth = 768;\n","import io from \"socket.io-client\";\nimport { serverBaseUrl } from \"./const\";\n\nexport const socket = io(serverBaseUrl);\n","import axios from \"axios\";\nimport { socket } from \"../../utils/socket\";\nimport { serverBaseUrl } from \"../../utils/const\";\n\nexport function sendJoinGame(gameCode, pid, playerName, history) {\n  console.log(history);\n  socket.emit(\"send_join_room\", {\n    gameCode: gameCode,\n    pid: pid,\n    playerName: playerName\n  });\n\n  socket.on(\"join_room_success\", data => {\n    socket.off(\"join_room_success\");\n    console.log(history);\n    onJoinRoomAnnouncement(gameCode, pid, history);\n  });\n\n  socket.on(\"join_room_error\", data => {\n    socket.off(\"join_room_error\");\n    console.log(\"join room error\");\n  });\n}\n\nexport function sendNewGame(pid, playerName, history) {\n  socket.emit(\"send_new_room\", {\n    pid: pid,\n    playerName: playerName\n  });\n\n  socket.on(\"new_room_success\", data => {\n    socket.off(\"new_room_success\");\n    onJoinRoomAnnouncement(data.gameCode, pid, history);\n  });\n\n  socket.on(\"new_room_error\", data => {\n    console.log(\"new room error\");\n    console.log(data);\n    socket.off(\"new_room_error\");\n  });\n}\n\nexport function getPid() {\n  let pid = localStorage.getItem(\"pid\");\n  if (pid != null) {\n    return pid;\n  }\n  return (async () => {\n    try {\n      let response = await axios.post(serverBaseUrl + \"/api/player/new\");\n      console.log(response.data);\n      pid = response.data[\"pid\"];\n      localStorage.setItem(\"pid\", pid);\n    } catch (e) {\n      console.log(e.response.data);\n    }\n\n    return pid;\n  })();\n}\n\nfunction onJoinRoomAnnouncement(gameCode, pid, history) {\n  socket.on(\"join_room_announcement\", data => {\n    socket.off(\"join_room_announcement\");\n    data.gameCode = gameCode;\n    data.pid = pid;\n    history.push(`/room?gameCode=${gameCode}`, data);\n  });\n}\n","import { useState, useEffect, useLayoutEffect } from \"react\";\n\nexport function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = useState(localStorage.getItem(key) || defaultValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value]);\n\n  return [value, setValue];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", updateSize);\n    return () => {\n      window.removeEventListener(\"resize\", updateSize);\n    };\n  });\n\n  return size;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Panel.css\";\n\nfunction Panel(props) {\n  const { children, className } = props;\n  return <div className={`Panel ${className}`}>{children}</div>;\n}\n\nPanel.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  className: PropTypes.string\n};\n\nPanel.defaultProps = {\n  children: [],\n  className: \"\"\n};\n\nexport default Panel;\n","import React from \"react\";\nimport MaterialTextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes, { object } from \"prop-types\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    }\n  }\n});\n\nfunction TextField(props) {\n  const classes = useStyles();\n  const {\n    label,\n    variant,\n    value,\n    onChange,\n    error,\n    inputRef,\n    onKeyDown,\n    className\n  } = props;\n\n  return (\n    <MaterialTextField\n      label={label}\n      variant={variant}\n      value={value}\n      onChange={onChange}\n      error={error}\n      inputRef={inputRef}\n      onKeyDown={onKeyDown}\n      className={`${classes.textField} ${className}`}\n    />\n  );\n}\n\nTextField.propTypes = {\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.bool,\n  inputRef: PropTypes.objectOf(object),\n  onKeyDown: PropTypes.func,\n  className: PropTypes.string\n};\n\nTextField.defaultProps = {\n  label: null,\n  variant: \"standard\",\n  value: null,\n  onChange: null,\n  error: null,\n  inputRef: null,\n  onKeyDown: null,\n  className: \"\"\n};\n\nexport default TextField;\n","import React, { useState, useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { sendJoinGame, sendNewGame, getPid } from \"./HomeApiSocket\";\nimport { useLocalStorage } from \"../../utils/hooks\";\nimport \"../App/App.css\";\nimport \"./Home.css\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\n\nfunction Home() {\n  const [gameCode, setGameCode] = useState(\"\");\n  const [playerName, setPlayerName] = useLocalStorage(\"playerName\", \"\");\n  const [playerNameLabel, setPlayerNameLabel] = useState(\"Name\");\n  const [hasPlayerNameError, setHasPlayerNameError] = useState(false);\n  const [gameCodeLabel, setGameCodeLabel] = useState(\"Game Code\");\n  const [hasGameCodeError, setHasGameCodeError] = useState(false);\n  const pid = useRef(getPid());\n  let history = useHistory();\n\n  function onJoinGame() {\n    if (gameCode === \"\" || playerName === \"\") {\n      if (gameCode === \"\") {\n        setHasGameCodeError(true);\n        setGameCodeLabel(\"Game Code required\");\n      }\n      if (playerName === \"\") {\n        setHasPlayerNameError(true);\n        setPlayerNameLabel(\"Name required\");\n      }\n    } else {\n      sendJoinGame(gameCode, pid.current, playerName, history);\n    }\n  }\n\n  function onNewGame() {\n    if (playerName === \"\") {\n      setHasPlayerNameError(true);\n      setPlayerNameLabel(\"Name required\");\n    } else {\n      sendNewGame(pid.current, playerName, history);\n    }\n  }\n\n  return (\n    <div className=\"Home\">\n      <Link to=\"/\" className=\"HomeTitle\">\n        Skribbl\n      </Link>\n      <Panel className=\"HomeMainContainer\">\n        <TextField\n          label={playerNameLabel}\n          variant=\"outlined\"\n          value={playerName}\n          onChange={e => setPlayerName(e.target.value)}\n          error={hasPlayerNameError}\n        />\n        <div className=\"HomeJoinGameContainer\">\n          <TextField\n            label={gameCodeLabel}\n            variant=\"outlined\"\n            className=\"HomeJoinGameTextField\"\n            value={gameCode}\n            onChange={e => setGameCode(e.target.value)}\n            error={hasGameCodeError}\n          />\n          <button\n            type=\"button\"\n            className=\"Button HomeJoinGameButton\"\n            onClick={onJoinGame}\n          >\n            Join Game\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          className=\"Button HomeNewGameButton\"\n          onClick={onNewGame}\n        >\n          New Game\n        </button>\n      </Panel>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Select, InputLabel, FormControl } from \"@material-ui/core\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown } from \"react-icons/fa\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport { socket } from \"../../utils/socket\";\nimport { mediumDeviceMinWidth } from \"../../utils/const\";\nimport { sendPlayGame } from \"./RoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport \"../App/App.css\";\nimport \"./Room.css\";\n\nconst useStyles = makeStyles({\n  formControl: {\n    margin: \"7px\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#f64f59\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#c471ed\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#12c2e9\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& .Mui-disabled\": {\n      cursor: \"not-allowed\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      color: \"white\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.38)\"\n    },\n    \"& label\": {\n      color: \"white\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    },\n    \"& label.Mui-disabled\": {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    },\n    \"& option\": {\n      color: \"black\"\n    },\n    \"& .MuiSelect-icon\": {\n      fill: \"white\"\n    },\n    \"& .MuiSelect-icon.Mui-disabled\": {\n      fill: \"rgba(255, 255, 255, 0.26)\"\n    }\n  }\n});\n\nfunction Room() {\n  const classes = useStyles();\n  const state = useLocation().state;\n  const { gameCode, pid } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [ownerPid, setOwnerPid] = useState(state.ownerPid);\n  // const { gameCode } = state;\n  // const pid = 0;\n  // const ownerPid = 0;\n  // const [players, setPlayers] = useState(() => {\n  //   let tmp = [];\n  //   for (let i = 0; i < 8; ++i) {\n  //     tmp.push({\n  //       _id: i,\n  //       playerName: `Hurgurto${i}`\n  //     });\n  //   }\n\n  //   return tmp;\n  // });\n  const [rounds, setRounds] = useState(3);\n  const [drawTime, setDrawTime] = useState(\"60s\");\n  const { width } = useWindowSize();\n  const history = useHistory();\n\n  useEffect(() => {\n    socket.on(\"join_room_announcement\", data => {\n      console.log(\"join_room_announcement\");\n      console.log(data);\n      console.log(players);\n      setPlayers(data.players);\n      setOwnerPid(ownerPid);\n    });\n\n    return () => {\n      socket.off(\"join_room_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"play_game_announcement\", () => {\n      history.push(`/game?gameCode=${gameCode}`, {\n        gameCode: gameCode,\n        pid: pid,\n        players: players,\n        ownerPid: ownerPid\n      });\n    });\n\n    return () => {\n      socket.off(\"play_game_announcement\");\n    };\n  }, [gameCode, pid, players, history]);\n\n  return (\n    <div className=\"Room\">\n      <Link to=\"/\" className=\"RoomTitleLink\">\n        Skribbl\n      </Link>\n      <h2>Room: {gameCode}</h2>\n      <div className=\"RoomMainContainer\">\n        <Panel className=\"RoomPlayersContainer\">\n          <h3 className=\"RoomContainerTitle\">Players</h3>\n          <div className=\"RoomPlayersList\">\n            {players.map(player => (\n              <div className=\"RoomPlayer\" key={player._id}>\n                <IconContext.Provider\n                  value={{\n                    size: width >= mediumDeviceMinWidth ? \"3rem\" : \"2rem\"\n                  }}\n                >\n                  {player._id === ownerPid ? <FaCrown /> : <MdPerson />}\n                </IconContext.Provider>\n                <span className=\"RoomPlayerName\">{player.playerName}</span>\n                <span className=\"RoomPlayerTag\">\n                  {player._id === pid ? \"You\" : \" \"}\n                </span>\n              </div>\n            ))}\n          </div>\n        </Panel>\n        <Panel className=\"RoomGameControlsContainer\">\n          <h3 className=\"RoomContainerTitle\">Settings</h3>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Rounds</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={rounds}\n              onChange={e => setRounds(e.target.value)}\n              inputProps={{ id: \"roundsSelector\" }}\n            >\n              <option>3</option>\n              <option>5</option>\n              <option>10</option>\n            </Select>\n          </FormControl>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            disabled={pid !== ownerPid}\n          >\n            <InputLabel htmlFor=\"roundsSelector\">Draw Time</InputLabel>\n            <Select\n              native\n              label=\"Rounds\"\n              value={drawTime}\n              onChange={e => setDrawTime(e.target.value)}\n              inputProps={{ id: \"drawTime\" }}\n            >\n              <option>30s</option>\n              <option>60s</option>\n              <option>90s</option>\n            </Select>\n          </FormControl>\n          <button\n            type=\"button\"\n            className=\"Button\"\n            onClick={() => {\n              if (players.length > 1) {\n                const drawTimeInt = parseInt(drawTime.slice(0, -1));\n                sendPlayGame(gameCode, rounds, drawTimeInt);\n              }\n            }}\n            disabled={pid !== ownerPid}\n          >\n            Play\n          </button>\n        </Panel>\n      </div>\n    </div>\n  );\n}\n\nexport default Room;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendPlayGame(gameCode, rounds, drawTime) {\n  socket.emit(\"send_play_game\", {\n    gameCode: gameCode,\n    rounds: rounds,\n    drawTime: drawTime\n  });\n}\n","import { socket } from \"../../utils/socket\";\n\nexport function sendNextTurn(gameCode) {\n  console.log(\"SEND\");\n  socket.emit(\"send_next_turn\", {\n    gameCode: gameCode\n  });\n}\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { MdPerson } from \"react-icons/md\";\nimport { FaCrown, FaPaintBrush } from \"react-icons/fa\";\nimport { useWindowSize } from \"../../../utils/hooks\";\nimport { mediumDeviceMinWidth } from \"../../../utils/const\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./PlayersList.css\";\n\nfunction PlayerList(props) {\n  const {\n    players,\n    pid,\n    ownerPid,\n    artistPid,\n    guessedCorrectPid,\n    rankings\n  } = props;\n  const { width } = useWindowSize();\n\n  return (\n    <Panel className=\"PlayersList\">\n      {players.map(({ playerName, _id, score }, index) => (\n        <div\n          className=\"PlayersListPlayer\"\n          key={_id}\n          style={{\n            backgroundColor:\n              _id === guessedCorrectPid ? \"rgb(35, 231, 17)\" : \"transparent\"\n          }}\n        >\n          <div className=\"PlayersListPlayerRankingIcon\">\n            <span className=\"PlayersListRanking\">#{rankings[index]}</span>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.8rem\" : \"1.5rem\"\n              }}\n            >\n              {_id === ownerPid ? <FaCrown /> : <MdPerson />}\n            </IconContext.Provider>\n            <IconContext.Provider\n              value={{\n                size: width >= mediumDeviceMinWidth ? \"1.5rem\" : \"1.2rem\"\n              }}\n            >\n              {_id === artistPid ? <FaPaintBrush /> : null}\n            </IconContext.Provider>\n          </div>\n          <span className=\"PlayersListPlayerName\">\n            {playerName}\n            {pid === _id ? \" (You)\" : null}: {score ? score : 0}\n          </span>\n        </div>\n      ))}\n    </Panel>\n  );\n}\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pid: PropTypes.string.isRequired,\n  ownerPid: PropTypes.string.isRequired,\n  artistPid: PropTypes.string,\n  guessedCorrectPid: PropTypes.string,\n  rankings: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nPlayerList.defaultProps = {\n  artistPid: null,\n  guessedCorrectPid: null\n};\n\nexport default PlayerList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { socket } from \"../../../utils/socket\";\nimport {\n  sendDrawLine,\n  sendDrawDot,\n  sendUndoCanvas,\n  sendClearCanvas\n} from \"./CanvasApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./Canvas.css\";\n\nfunction Canvas(props) {\n  const { gameCode, pid, artist, endTurnData, selectedWord } = props;\n  const [timer, setTimer] = useState(null);\n  const canvas = useRef(null);\n  let isMouseDragging = useRef(false);\n  let prevX = useRef(0);\n  let prevY = useRef(0);\n  let color = useRef(\"#f64f59\");\n  const paths = useRef([]);\n\n  function touchStart(e) {\n    e.preventDefault();\n    mouseDown(e, true);\n  }\n\n  function mouseDown(e, isTouch = false) {\n    if (pid !== artist._id) {\n      return;\n    }\n    isMouseDragging.current = true;\n    if (isTouch) {\n      for (let i = 0; i < 1; ++i) {\n        draw(e, false, i);\n      }\n    } else {\n      draw(e, false, -1);\n    }\n  }\n\n  function touchMove(e) {\n    e.preventDefault();\n    mouseMove(e, true);\n  }\n\n  function mouseMove(e, isTouch = false) {\n    if (pid !== artist._id) {\n      return;\n    }\n    if (isMouseDragging.current) {\n      if (isTouch) {\n        for (let i = 0; i < 1; ++i) {\n          draw(e, true, i);\n        }\n      } else {\n        draw(e, true, -1);\n      }\n    }\n  }\n\n  function touchEnd(e) {\n    e.preventDefault();\n    mouseUp();\n  }\n\n  function mouseUp() {\n    if (pid !== artist._id) {\n      return;\n    }\n    isMouseDragging.current = false;\n  }\n\n  function draw(e, isMouseMove, touchIndex) {\n    const { currX, currY } = getMousePos(e, touchIndex);\n    if (isMouseMove) {\n      const line = {\n        prevX: prevX.current,\n        prevY: prevY.current,\n        currX: currX,\n        currY: currY\n      };\n      sendDrawLine(gameCode, line);\n    } else {\n      const dot = {\n        x: currX,\n        y: currY,\n        newColor: color.current\n      };\n      sendDrawDot(gameCode, dot);\n    }\n    prevX.current = currX;\n    prevY.current = currY;\n  }\n\n  function getMousePos(e, touchIndex) {\n    const rect = canvas.current.getBoundingClientRect();\n    let windowX, windowY;\n    if (touchIndex !== -1) {\n      windowX = e.touches[touchIndex].clientX;\n      windowY = e.touches[touchIndex].clientY;\n    } else {\n      windowX = e.clientX;\n      windowY = e.clientY;\n    }\n    return {\n      currX:\n        ((windowX - rect.left) / (rect.right - rect.left)) *\n        canvas.current.width,\n      currY:\n        ((windowY - rect.top) / (rect.bottom - rect.top)) *\n        canvas.current.height\n    };\n  }\n\n  function drawLine(line, addPath) {\n    const { prevX, prevY, currX, currY } = line;\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.strokeStyle = color.current;\n    ctx.lineWidth = 2;\n    ctx.moveTo(prevX, prevY);\n    ctx.lineTo(currX, currY);\n    ctx.stroke();\n    ctx.closePath();\n    if (addPath) {\n      paths.current[paths.current.length - 1].points.push({\n        x: currX,\n        y: currY\n      });\n    }\n  }\n\n  function drawDot(dot, addPath) {\n    const { x, y, newColor } = dot;\n    const ctx = canvas.current.getContext(\"2d\");\n    color.current = newColor;\n    ctx.beginPath();\n    ctx.fillStyle = color.current;\n    ctx.fillRect(x, y, 2, 2);\n    ctx.closePath();\n    if (addPath) {\n      paths.current.push({\n        points: [],\n        newColor: color.current\n      });\n      paths.current[paths.current.length - 1].points.push({ x: x, y: y });\n    }\n  }\n\n  function undoCanvas() {\n    if (paths.current.length) {\n      clearCanvas(false);\n      paths.current.pop();\n      for (let i = 0; i < paths.current.length; ++i) {\n        const { points, newColor } = paths.current[i];\n        const dot = {\n          x: points[0].x,\n          y: points[0].y,\n          newColor: newColor\n        };\n        drawDot(dot, false);\n        for (let j = 1; j < points.length; ++j) {\n          const line = {\n            prevX: points[j - 1].x,\n            prevY: points[j - 1].y,\n            currX: points[j].x,\n            currY: points[j].y\n          };\n          drawLine(line, false);\n        }\n      }\n    }\n  }\n\n  function clearCanvas(clearPath) {\n    if (paths.current.length) {\n      const ctx = canvas.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n      if (clearPath) {\n        paths.current = [];\n      }\n    }\n  }\n\n  useEffect(() => {\n    socket.on(\"draw_line_announcement\", data => {\n      if (canvas.current !== null) {\n        drawLine(data.line, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_line_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"draw_dot_announcement\", data => {\n      if (canvas.current !== null) {\n        drawDot(data.dot, true);\n      }\n    });\n\n    return () => {\n      socket.off(\"draw_dot_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"undo_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        undoCanvas();\n      }\n    });\n\n    return () => {\n      socket.off(\"undo_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"clear_canvas_announcement\", () => {\n      if (canvas.current !== null) {\n        clearCanvas(true);\n      }\n    });\n\n    return () => {\n      socket.off(\"clear_canvas_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"timer_announcement\", data => {\n      setTimer(data.time);\n    });\n\n    return () => {\n      socket.off(\"timer_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (endTurnData !== null) {\n      paths.current = [];\n    }\n  }, [endTurnData]);\n\n  return (\n    <Panel className=\"CanvasContainer\">\n      <div className=\"CanvasHeader\">\n        <span className=\"CanvasHeaderDummy\" />\n        <span>{selectedWord}</span>\n        <span className=\"CanvasTimer\">\n          {timer !== null ? `Time: ${timer}` : null}\n        </span>\n      </div>\n      <canvas\n        className=\"Canvas\"\n        ref={canvas}\n        onTouchStart={touchStart}\n        onMouseDown={mouseDown}\n        onTouchMove={touchMove}\n        onMouseMove={mouseMove}\n        onTouchEnd={touchEnd}\n        onMouseUp={mouseUp}\n      />\n      <div className=\"CanvasControlsContainer\">\n        <button\n          type=\"button\"\n          className=\"CanvasControl\"\n          onClick={() => {\n            color.current = \"#f64f59\";\n          }}\n        >\n          Red\n        </button>\n        <button\n          type=\"button\"\n          className=\"CanvasControl\"\n          onClick={() => {\n            color.current = \"#12c2e9\";\n          }}\n        >\n          Blue\n        </button>\n        <button\n          type=\"button\"\n          className=\"CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendUndoCanvas(gameCode);\n            }\n          }}\n        >\n          Undo\n        </button>\n        <button\n          type=\"button\"\n          className=\"CanvasControl\"\n          onClick={() => {\n            if (paths.current.length && artist !== null && pid === artist._id) {\n              sendClearCanvas(gameCode);\n            }\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    </Panel>\n  );\n}\n\nCanvas.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  endTurnData: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n  ),\n  selectedWord: PropTypes.string\n};\n\nCanvas.defaultProps = {\n  artist: null,\n  endTurnData: null,\n  selectedWord: \"\"\n};\n\nexport default Canvas;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendDrawLine(gameCode, line) {\n  socket.emit(\"send_draw_line\", {\n    gameCode: gameCode,\n    line: line\n  });\n}\n\nexport function sendDrawDot(gameCode, dot) {\n  socket.emit(\"send_draw_dot\", {\n    gameCode: gameCode,\n    dot: dot\n  });\n}\n\nexport function sendUndoCanvas(gameCode) {\n  socket.emit(\"send_undo_canvas\", {\n    gameCode: gameCode\n  });\n}\n\nexport function sendClearCanvas(gameCode) {\n  socket.emit(\"send_clear_canvas\", {\n    gameCode: gameCode\n  });\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { socket } from \"../../utils/socket\";\nimport { sendMessage } from \"./ChatRoomApiSocket\";\nimport Panel from \"../Panel/Panel\";\nimport TextField from \"../TextField/TextField\";\nimport \"./ChatRoom.css\";\n\nconst useStyles = makeStyles({\n  textField: {\n    margin: \"5px 0px\",\n    \"& .MuiOutlinedInput-root\": {\n      color: \"black\"\n    },\n    \"& input\": {\n      padding: \"7px\"\n    },\n    \"& label\": {\n      color: \"black\",\n      transform: \"translate(14px, 7px) scale(1)\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"black\"\n    }\n  }\n});\n\nfunction ChatRoom(props) {\n  const classes = useStyles();\n  const { gameCode, pid, setGuessedCorrectPid } = props;\n  const [message, setMessage] = useState(\"\");\n  // const [isFirstTime, setIsFirstTime] = useState(true);\n  const messageArea = useRef(null);\n  const messageTextField = useRef(null);\n\n  function addMessage(message, isCorrect) {\n    let messageNode = document.createElement(\"p\");\n    messageNode.textContent = message;\n    messageNode.className = \"ChatRoomMessage\";\n    if (isCorrect) {\n      messageNode.className += \" ChatRoomCorrectMessage\";\n    }\n    messageArea.current.appendChild(messageNode);\n    scroll();\n  }\n\n  function scroll() {\n    messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // if (isFirstTime) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    //   setIsFirstTime(false);\n    // } else if (\n    //   messageArea.current.scrollTop + messageArea.current.clientHeight ===\n    //   messageArea.current.scrollHeight\n    // ) {\n    //   messageArea.current.scrollTop = messageArea.current.scrollHeight;\n    // }\n  }\n\n  useEffect(() => {\n    socket.on(\"send_message_announcement\", data => {\n      addMessage(`${data.player.playerName}: ${data.message}`, false);\n    });\n\n    return () => {\n      socket.off(\"send_message_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"correct_word_announcement\", data => {\n      console.log(\"correct!\");\n      console.log(data);\n      addMessage(`${data.player.playerName} has guessed the word!`, true);\n      setGuessedCorrectPid(data.player._id);\n    });\n\n    return () => {\n      socket.off(\"correct_word_announcement\");\n    };\n  }, [setGuessedCorrectPid]);\n\n  function onSendMessage() {\n    sendMessage(gameCode, pid, message);\n    setMessage(\"\");\n    messageTextField.current.focus();\n  }\n\n  function messageTextFieldOnKey(e) {\n    const ENTER_KEY_CODE = 13;\n    if (e.keyCode === ENTER_KEY_CODE && message !== \"\") {\n      onSendMessage();\n      // addMessage(message, true);\n      // addMessage(message, false);\n      // setMessage(\"\");\n    }\n  }\n\n  return (\n    <Panel className=\"ChatRoom\">\n      {/* <h2 className=\"ChatRoomTitle\">Chat Room</h2> */}\n      <div className=\"ChatRoomMessageArea\" ref={messageArea} />\n      <TextField\n        className={`${classes.textField} ChatRoomTextField`}\n        label=\"message\"\n        variant=\"outlined\"\n        value={message}\n        onChange={e => setMessage(e.target.value)}\n        inputRef={messageTextField}\n        onKeyDown={e => messageTextFieldOnKey(e)}\n      />\n      {/* <button type=\"button\" onClick={() => onSendMessage()}>\n        Send\n      </button> */}\n    </Panel>\n  );\n}\n\nChatRoom.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  setGuessedCorrectPid: PropTypes.func.isRequired\n};\n\nexport default ChatRoom;\n","import { socket } from \"../../utils/socket\";\n\nexport function sendMessage(gameCode, pid, message) {\n  socket.emit(\"send_message\", {\n    gameCode: gameCode,\n    pid: pid,\n    message: message\n  });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { sendSelectedWord } from \"./OverlayApiSocket\";\nimport { sendJoinGame } from \"../../Home/HomeApiSocket\";\nimport Panel from \"../../Panel/Panel\";\nimport \"./Overlay.css\";\n\nfunction Overlay(props) {\n  const {\n    gameCode,\n    pid,\n    artist,\n    words,\n    endTurnData,\n    onNextTurn,\n    onShowResults,\n    results,\n    history\n  } = props;\n\n  console.log(props);\n  console.log(endTurnData);\n\n  function getPlayerName(players, pid) {\n    for (const player of players) {\n      if (player._id === pid) {\n        return player.playerName;\n      }\n    }\n    return null;\n  }\n\n  function selectOverlayContent() {\n    if (results !== null) {\n      return (\n        <>\n          {results.players.map((player, index) => (\n            <p key={player._id}>\n              #{results.rankings[index]} {player.playerName}: {player.score}\n            </p>\n          ))}\n          <button\n            type=\"button\"\n            onClick={() => {\n              sendJoinGame(\n                gameCode,\n                pid,\n                getPlayerName(results.players, pid),\n                history\n              );\n            }}\n          >\n            Back to Room\n          </button>\n        </>\n      );\n    }\n    if (endTurnData !== null) {\n      return (\n        <>\n          {endTurnData.players.map(player => (\n            <p key={player._id}>\n              {player.playerName}: {player.score} + {player.earnedScore}\n            </p>\n          ))}\n          {endTurnData.isEndGame ? (\n            <button type=\"button\" onClick={onShowResults}>\n              Results\n            </button>\n          ) : (\n            <button type=\"button\" onClick={onNextTurn}>\n              Next Turn\n            </button>\n          )}\n        </>\n      );\n    }\n    if (artist == null) {\n      return \"Loading...\";\n    }\n    if (pid !== artist._id) {\n      return `${artist.playerName} is currently choosing their word...`;\n    }\n    return (\n      <>\n        {words.map(word => (\n          <button\n            type=\"button\"\n            key={word}\n            onClick={() => sendSelectedWord(gameCode, word)}\n          >\n            {word}\n          </button>\n        ))}\n      </>\n    );\n  }\n\n  return <Panel className=\"Overlay\">{selectOverlayContent()}</Panel>;\n}\n\nOverlay.propTypes = {\n  gameCode: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  artist: PropTypes.objectOf(PropTypes.string),\n  words: PropTypes.arrayOf(PropTypes.string).isRequired,\n  endTurnData: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n  ),\n  onNextTurn: PropTypes.func.isRequired,\n  onShowResults: PropTypes.func.isRequired,\n  results: PropTypes.objectOf(PropTypes.array),\n  history: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.object, PropTypes.number])\n  ).isRequired\n};\n\nOverlay.defaultProps = {\n  artist: null,\n  endTurnData: null,\n  results: null\n};\n\nexport default Overlay;\n","import { socket } from \"../../../utils/socket\";\n\nexport function sendSelectedWord(gameCode, word) {\n  socket.emit(\"send_selected_word\", {\n    gameCode: gameCode,\n    word: word\n  });\n}\n\nexport function sendNextTurn(gameCode, pid) {\n  socket.emit(\"send_next_turn\", {\n    gameCode: gameCode,\n    pid: pid\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { socket } from \"../../utils/socket\";\nimport { mediumDeviceMinWidth } from \"../../utils/const\";\nimport { useWindowSize } from \"../../utils/hooks\";\nimport { sendNextTurn } from \"./GameApiSocket\";\nimport PlayersList from \"./PlayersList/PlayersList\";\nimport Canvas from \"./Canvas/Canvas\";\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\nimport Overlay from \"./Overlay/Overlay\";\nimport \"./Game.css\";\n\nfunction Game() {\n  const state = useLocation().state;\n  const { gameCode, pid, ownerPid } = state;\n  const [players, setPlayers] = useState(state.players);\n  const [artist, setArtist] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [words, setWords] = useState([]);\n  const [rankings, setRankings] = useState(new Array(players.length).fill(1));\n  const [endTurnData, setEndTurnData] = useState(null);\n  const [guessedCorrectPid, setGuessedCorrectPid] = useState(null);\n  const [timer, setTimer] = useState(null);\n  const [results, setResults] = useState(null);\n  const { width } = useWindowSize();\n  let history = useHistory();\n\n  function onNextTurn() {\n    sendNextTurn(gameCode);\n    updatePlayersScore();\n    setEndTurnData(null);\n  }\n\n  function onShowResults() {\n    const [newPlayers, newRankings] = updatePlayersScore();\n    setResults({\n      players: newPlayers,\n      rankings: newRankings\n    });\n  }\n\n  function updatePlayersScore() {\n    const newPlayers = players.map((player, index) => {\n      const newPlayer = endTurnData.players[index];\n      player[\"score\"] = newPlayer.score + newPlayer.earnedScore;\n      return player;\n    });\n    setPlayers(newPlayers);\n\n    function getScore(score) {\n      return score ? score : 0;\n    }\n\n    const sortedScores = players\n      .map(player => getScore(player.score))\n      .sort()\n      .reverse();\n\n    const newRankings = players.map(\n      player => sortedScores.indexOf(getScore(player.score)) + 1\n    );\n    setRankings(newRankings);\n\n    return [newPlayers, newRankings];\n  }\n\n  function getPlayersList() {\n    return (\n      <PlayersList\n        players={players}\n        pid={pid}\n        ownerPid={ownerPid}\n        artistPid={artist !== null ? artist._id : null}\n        guessedCorrectPid={guessedCorrectPid}\n        rankings={rankings}\n      />\n    );\n  }\n\n  function getCanvasOrOverlay() {\n    if (isDrawing) {\n      return (\n        <Canvas\n          gameCode={gameCode}\n          pid={pid}\n          artist={artist}\n          isDrawing={isDrawing}\n          words={words}\n          endTurnData={endTurnData}\n          onNextTurn={onNextTurn}\n          timer={timer}\n        />\n      );\n    }\n    return (\n      <Overlay\n        gameCode={gameCode}\n        pid={pid}\n        artist={artist}\n        words={words}\n        endTurnData={endTurnData}\n        onNextTurn={onNextTurn}\n        onShowResults={onShowResults}\n        players={players}\n        results={results}\n        history={history}\n      />\n    );\n  }\n\n  function getChatRoom() {\n    return (\n      <ChatRoom\n        gameCode={gameCode}\n        pid={pid}\n        setGuessedCorrectPid={setGuessedCorrectPid}\n      />\n    );\n  }\n\n  useEffect(() => {\n    sendNextTurn(gameCode);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"player_disconnect\", data => {\n      setPlayers(players.filter(player => player._id !== data.player._id));\n    });\n\n    return () => {\n      socket.off(\"player_disconnect\");\n    };\n  }, [players]);\n\n  useEffect(() => {\n    socket.on(\"next_artist_announcement\", data => {\n      console.log(data.artist.playerName);\n      setArtist(data.artist);\n      setWords(data.words);\n      setGuessedCorrectPid(null);\n    });\n\n    return () => {\n      socket.off(\"next_artist_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"selected_word_announcement\", () => {\n      setIsDrawing(true);\n    });\n\n    return () => {\n      socket.off(\"selected_word_announcement\");\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"end_turn_announcement\", data => {\n      console.log(data);\n      setEndTurnData(data);\n      setIsDrawing(false);\n      setArtist(null);\n    });\n\n    return () => {\n      socket.off(\"end_turn_announcement\");\n    };\n  }, []);\n\n\n\n  return (\n    <div className=\"Game\">\n      <Link to=\"/\" className=\"GameTitleLink\">\n        Skribbl\n      </Link>\n      <h2 className=\"GameGameCode\">Game: {gameCode}</h2>\n      <div className=\"GamePlayContainer\">\n        {width >= mediumDeviceMinWidth ? (\n          <>\n            {getPlayersList()}\n            {getCanvasOrOverlay()}\n            {getChatRoom()}\n          </>\n        ) : (\n          <>\n            {getCanvasOrOverlay()}\n            <div className=\"GamePlayersChatContainer\">\n              {getPlayersList()}\n              {getChatRoom()}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport Room from \"../Room/Room\";\nimport Game from \"../Game/Game\";\nimport \"./App.css\";\nimport { useWindowSize } from \"../../utils/hooks\";\n\nfunction App() {\n  const { height } = useWindowSize();\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ height: height }}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/room\">\n            <Room />\n          </Route>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nlet root = document.getElementById(\"root\");\n// root.style.height = window.innerHeight;\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}